{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","tokens","defOrWrappedDef","parents","ngModule","defName","isDuplicate","add","imported","pop","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","console","warn","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","slice","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","resolvedProvider","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$1","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","throwError","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","isStylingContext","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","getActiveDirectiveId","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","getActiveDirectiveSuperClassHeight","getActiveDirectiveSuperClassDepth","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","document","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","_stylingMode","runtimeIsNewStylingInUse","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","rawValue","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","singlePropOffsetRegistryIndex","offsets","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","MAP_BASED_ENTRY_PROP_NAME","getBindingNameFromIndex","updateContextDirectiveIndex","getConfig","getProp$1","getGuardMask","getValuesCount","getBindingValue","getDefaultValue","allowStylingFlush","lockContext","setConfig","isContextLocked","getPropValuesStartPosition","hasValueChanged$1","isStylingValueDefined","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","STYLING_INDEX_START_VALUE","currentStyleIndex","currentClassIndex","stylesBitMask","classesBitMask","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","updateBindingData","updateStyleBinding","counterIndex","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","isMapBased","lastValueIndex","applyStyling","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueToApply","valueAppliedWithinMap","setStyle$1","setClass$1","classList","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","lStylingMap","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","getMapProp","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","setCurrentSyncCursor","indexValue","resetSyncCursors","activeStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","setMapValue","TStylingContextDebug","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_mapValues","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","componentLViewDebug","classes","newStyles","newClasses","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","getOrCreateTNode","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","_stylingProp","defer","getClassesContext","getStylesContext","_stylingMap","valueHasChanged","normalizeIntoStylingMap","newValues","allValuesTrue","outer","propAtIndex","getActiveDirectiveStylingIndex","getContext","allocStylingContext$1","ɵɵstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex$1","stylingInit","updateLastDirectiveIndex","initStyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵstyleProp","styleIndex","valueToAdd","resolveStylePropValue","getStylingContext","styleProp","ɵɵclassProp","classIndex","booleanOrNull","classProp","ɵɵstyleMap","styleInputVal","forceStylesAsString","styleMap","ɵɵclassMap","classInputVal","forceClassesAsString","classMap","ɵɵstylingApply","runtimeAllowOldStyling","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","playersStartIndex","playerInsertionIndex","oldPlayer","stylingApply","getRenderer","getNativeFromLView","applyClasses","applyStyles","getCachedStylingContext","ɵɵelementStart","initialStylesIndex","initialClassesIndex","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","registerInitialStylingIntoContext","classesContext","stylesContext","currentQueries","addNode","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementAttribute","strValue","ɵɵelementHostAttrs","hostElementIndex","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵbind","ɵɵelementProperty","ɵɵcomponentHostSyntheticProperty","ɵɵattribute","ɵɵinterpolationV","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","interpolatedValue","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵattributeInterpolate1","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","markDirty","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","ɵɵprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","ɵɵselect","ɵɵtext","textNative","ɵɵtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","flatten","dst","ngI18nClosureMode","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","moduleRef","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createLQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","createQueryListInLView","isStatic","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","viewQueryInternal","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQueryInternal","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","_loop_1","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+345.sha-661c6e6.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            if (parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                    parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return inheritedInjectableDef.factory;\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$1;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$1;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$1;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'function')\n            return value.name || value;\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type;\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image' ||\n                prop === 'clip-path';\n        }\n        return ɵɵsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var _stylingMode = 0;\n    function runtimeIsNewStylingInUse() {\n        return _stylingMode > 0 /* UseOld */;\n    }\n    function runtimeAllowOldStyling() {\n        return _stylingMode < 2 /* UseNew */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        // Buffer may be null if host element is a template node. In this case, just ignore the style.\n        if (buffer != null) {\n            var index = findNextInsertionIndex(buffer, priority);\n            buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n        }\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * This function will also pre-fill the context with data\n     * for map-based bindings.\n     */\n    function allocStylingContext$1() {\n        return [0 /* Initial */, 0, 0, 0, MAP_BASED_ENTRY_PROP_NAME];\n    }\n    /**\n     * Temporary function that allows for a string-based property name to be\n     * obtained from an index-based property identifier.\n     *\n     * This function will be removed once the new styling refactor code (which\n     * lives inside of `render3/styling_next/`) replaces the existing styling\n     * implementation.\n     */\n    function getBindingNameFromIndex(stylingContext, offset, directiveIndex, isClassBased) {\n        var singleIndex = getSinglePropIndexValue(stylingContext, directiveIndex, offset, isClassBased);\n        return getProp(stylingContext, singleIndex);\n    }\n    function updateContextDirectiveIndex(context, index) {\n        context[1 /* MaxDirectiveIndexPosition */] = index;\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function getProp$1(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getGuardMask(context, index) {\n        return context[index + 0 /* GuardOffset */];\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return index === context[1 /* MaxDirectiveIndexPosition */];\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function getPropValuesStartPosition(context) {\n        return 5 /* MapBindingsBindingsStartPosition */ +\n            context[3 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged$1(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return compareValueA !== compareValueB;\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_SIZE_VALUE = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    var STYLING_INDEX_START_VALUE = 1;\n    // the values below are global to all styling code below. Each value\n    // will either increment or mutate each time a styling instruction is\n    // executed. Do not modify the values below.\n    var currentStyleIndex = STYLING_INDEX_START_VALUE;\n    var currentClassIndex = STYLING_INDEX_START_VALUE;\n    var stylesBitMask = 0;\n    var classesBitMask = 0;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : currentClassIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate);\n        if (updated || forceUpdate) {\n            classesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : currentStyleIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate);\n        if (updated || forceUpdate) {\n            stylesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged$1(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex) {\n        deferredBindingQueue.splice(0, 0, context, counterIndex, prop, bindingIndex);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue) {\n        // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n        if (prop) {\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp$1(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 2 /* MapBindingsPosition */, bindingValue, countId);\n        }\n    }\n    function allocateNewContextEntry(context, index, prop) {\n        // 1,2: splice index locations\n        // 3: each entry gets a guard mask value that is used to check against updates\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        context.splice(index, 0, DEFAULT_GUARD_MASK_VALUE, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var lastValueIndex = index + 3 /* BindingsStartOffset */ + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            context[index + 0 /* GuardOffset */] |= 1 << countId;\n        }\n        else if (typeof bindingValue === 'string' && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all class entries in the provided context to the provided element and resets\n     * any counter and/or bitMask values associated with class bindings.\n     */\n    function applyClasses(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = !isContextLocked(context);\n            isFirstPass && lockContext(context);\n            if (classesBitMask) {\n                applyStyling(context, renderer, element, data, classesBitMask, setClass$1);\n                classesBitMask = 0;\n            }\n            currentClassIndex = STYLING_INDEX_START_VALUE;\n        }\n    }\n    /**\n     * Applies all style entries in the provided context to the provided element and resets\n     * any counter and/or bitMask values associated with style bindings.\n     */\n    function applyStyles(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = !isContextLocked(context);\n            isFirstPass && lockContext(context);\n            if (stylesBitMask) {\n                applyStyling(context, renderer, element, data, stylesBitMask, setStyle$1);\n                stylesBitMask = 0;\n            }\n            currentStyleIndex = STYLING_INDEX_START_VALUE;\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not apart of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn) {\n        deferredBindingQueue.length && flushDeferredBindings();\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 2 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp$1(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var valueToApply = bindingData[bindingIndex];\n                    if (isStylingValueDefined(valueToApply)) {\n                        applyStylingFn(renderer, element, prop, valueToApply, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle$1 = function (renderer, native, prop, value) {\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass$1 = function (renderer, native, className, value) {\n        if (className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native.classList.remove(className);\n            }\n        }\n    };\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `LStylingMap` array\n     * is produced. The `LStylingMap` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 2 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 2 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 2 /* MapBindingsPosition */, currentMapIndex);\n            var lStylingMap = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < lStylingMap.length) {\n                var prop = getMapProp(lStylingMap, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(lStylingMap, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    applyStylingFn(renderer, element, prop, valueToApply, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activeStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - The target property was detected and the inner map\n     *   must now \"catch up\" (pointer-wise) up to where the current\n     *   map's cursor is situated.\n     *\n     * - The target property was not detected in the current map\n     *   and must be found in an inner map. This can only be allowed\n     *   if the current map iteration is not set to skip the target\n     *   property.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && isExactMatch && !(currentMode & 4 /* SkipTargetProp */)) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `LStylingMap` array.\n     *\n     * This function will either generate a new `LStylingMap` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `LStylingMap` value (this only happens if `bindingValue`\n     * is an instance of `LStylingMap`).\n     *\n     * If a new key/value map is provided with an old `LStylingMap`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues) {\n        var lStylingMap = Array.isArray(bindingValue) ? bindingValue : [null];\n        lStylingMap[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < lStylingMap.length; j += 2 /* TupleSize */) {\n            setMapValue(lStylingMap, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            outer: for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var value = allValuesTrue ? true : map[prop];\n                for (var j = 1 /* ValuesStartPosition */; j < lStylingMap.length; j += 2 /* TupleSize */) {\n                    var propAtIndex = getMapProp(lStylingMap, j);\n                    if (prop <= propAtIndex) {\n                        if (propAtIndex === prop) {\n                            setMapValue(lStylingMap, j, value);\n                        }\n                        else {\n                            lStylingMap.splice(j, 0, prop, value);\n                        }\n                        continue outer;\n                    }\n                }\n                lStylingMap.push(prop, value);\n            }\n        }\n        return lStylingMap;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 2 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp$1(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data) {\n            this.context = context;\n            this._data = _data;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 2 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activeStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) {\n                fn(prop, value, bindingIndex || null);\n            };\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = isStylingContext(rawValue) ? null : toDebug(readLViewValue(rawValue));\n                var styles = null;\n                var classes = null;\n                if (runtimeIsNewStylingInUse()) {\n                    styles = tNode.newStyles ? new NodeStylingDebug(tNode.newStyles, lView) : null;\n                    classes = tNode.newClasses ? new NodeStylingDebug(tNode.newClasses, lView) : null;\n                }\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        if (index === 0) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setPreviousOrParentTNode(null, true);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setPreviousOrParentTNode(null, true);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(templateFn, rf, context) {\n        ɵɵnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n            // TODO (matsko): rename this to `styles` once the old styling impl is gone\n            newStyles: null,\n            // TODO (matsko): rename this to `classes` once the old styling impl is gone\n            newClasses: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNode(tViewNodeChild, lView) : lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     */\n    function stylingInit() {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var tNode = getTNode(index, lView);\n        updateLastDirectiveIndex(tNode, getActiveDirectiveStylingIndex());\n    }\n    /**\n     * Mirror implementation of the `styleProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleProp(prop, value, suffix) {\n        _stylingProp(prop, value, false);\n    }\n    /**\n     * Mirror implementation of the `classProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function classProp(className, value) {\n        _stylingProp(className, value, true);\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(prop, value, isClassBased) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        if (isClassBased) {\n            updateClassBinding(getClassesContext(tNode), lView, prop, bindingIndex, value, defer);\n        }\n        else {\n            updateStyleBinding(getStylesContext(tNode), lView, prop, bindingIndex, value, defer);\n        }\n    }\n    /**\n     * Mirror implementation of the `styleMap()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleMap(styles) {\n        _stylingMap(styles, false);\n    }\n    /**\n     * Mirror implementation of the `classMap()` instruction (found in `instructions/styling.ts`).\n     */\n    function classMap(classes) {\n        _stylingMap(classes, true);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(value, isClassBased) {\n        activeStylingMapFeature();\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(index, lView);\n            var defer = getActiveDirectiveSuperClassHeight() > 0;\n            var oldValue = lView[bindingIndex];\n            var valueHasChanged = hasValueChanged$1(oldValue, value);\n            var lStylingMap = normalizeIntoStylingMap(oldValue, value);\n            if (isClassBased) {\n                updateClassBinding(getClassesContext(tNode), lView, null, bindingIndex, lStylingMap, defer, valueHasChanged);\n            }\n            else {\n                updateStyleBinding(getStylesContext(tNode), lView, null, bindingIndex, lStylingMap, defer, valueHasChanged);\n            }\n        }\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The new styling refactor ensures that styling flushing is called\n     * automatically when a template function exits or a follow-up element\n     * is visited (i.e. when `select(n)` is called). Because the `select(n)`\n     * instruction is not fully implemented yet (it doesn't actually execute\n     * host binding instruction code at the right time), this means that a\n     * styling apply function is still needed.\n     *\n     * This function is a mirror implementation of the `stylingApply()`\n     * instruction (found in `instructions/styling.ts`).\n     */\n    function stylingApply() {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeFromLView(index, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        applyClasses(renderer, lView, getClassesContext(tNode), native, directiveIndex);\n        applyStyles(renderer, lView, getStylesContext(tNode), native, directiveIndex);\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The purpose of this function is to traverse through the LView data\n     * for a specific element index and return the native node. Because the\n     * current implementation relies on there being a styling context array,\n     * the code below will need to loop through these array values until it\n     * gets a native element node.\n     *\n     * Note that this code is temporary and will disappear once the new\n     * styling refactor lands in its entirety.\n     */\n    function getNativeFromLView(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper[0 /* ElementPosition */];\n        }\n        else {\n            return slotValue;\n        }\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingIntoContext(tNode, attrs, startIndex) {\n        var classesContext;\n        var stylesContext;\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classesContext = classesContext || getClassesContext(tNode);\n                registerBinding(classesContext, -1, attr, true);\n            }\n            else if (mode == 2 /* Styles */) {\n                stylesContext = stylesContext || getStylesContext(tNode);\n                registerBinding(stylesContext, -1, attr, attrs[++i]);\n            }\n        }\n    }\n    /**\n     * Mirror implementation of the same function found in `instructions/styling.ts`.\n     */\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex(tNode, directiveIndex) {\n        updateContextDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateContextDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.newClasses : tNode.newStyles;\n        if (!context) {\n            context = allocStylingContext$1();\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.newClasses = context;\n            }\n            else {\n                tNode.newStyles = context;\n            }\n        }\n        return context;\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            // this is temporary hack to get the existing styling instructions to\n            // play ball with the new refactored implementation.\n            // TODO (matsko): remove this once the old implementation is not needed.\n            if (runtimeIsNewStylingInUse()) {\n                stylingInit();\n            }\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, styleIndex, directiveStylingIndex, false);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            styleProp(prop, value, suffix);\n        }\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, classIndex, directiveStylingIndex, true);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            classProp(prop, input);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            styleMap(styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            classMap(classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        if (runtimeAllowOldStyling()) {\n            var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n            if (totalPlayersQueued > 0) {\n                var rootContext = getRootContext(lView);\n                scheduleTick(rootContext, 2 /* FlushPlayers */);\n            }\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n        if (runtimeIsNewStylingInUse()) {\n            stylingApply();\n        }\n    }\n    function getActiveDirectiveStylingIndex$1() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n        var renderer = lView[RENDERER];\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        var lastAttrIndex = -1;\n        if (attrs) {\n            lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            var stylingTemplate = tNode.stylingTemplate;\n            if (stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        if (runtimeIsNewStylingInUse() && lastAttrIndex >= 0) {\n            registerInitialStylingIntoContext(tNode, attrs, lastAttrIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Updates the value or removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = ɵɵbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ɵɵelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n        }\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        return ɵɵelementAttribute(index, name, ɵɵbind(value), sanitizer, namespace);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /////////////////////////////////////////////////////////////////////\n    /// NEW INSTRUCTIONS\n    /////////////////////////////////////////////////////////////////////\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        ɵɵelementAttribute(index, attrName, ɵɵinterpolationV(values), sanitizer, namespace);\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[index + HEADER_OFFSET] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-rc.0+345.sha-661c6e6.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // tslint:disable-next-line:no-toplevel-property-access\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            // tslint:disable-next-line:no-toplevel-property-access\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ɵɵelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ɵɵelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ɵɵelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            var moduleType = this.moduleType;\n            var moduleRef = new NgModuleRef$1(moduleType, parentInjector);\n            var ngModuleDef = getNgModuleDef(moduleType);\n            ngModuleDef && ngModuleDef.id &&\n                registerNgModuleType(ngModuleDef.id, moduleType);\n            return moduleRef;\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createLQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createLQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are unshifted before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.unshift(matchingValue) : query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createLQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates a QueryList and stores it in LView's collection of active queries (LQueries).\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function createQueryListInLView(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    lView, predicate, descend, read, isStatic) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = isStatic;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        viewQueryInternal(lView, tView, predicate, descend, read, true);\n        tView.staticViewQueries = true;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return viewQueryInternal(lView, tView, predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, tView, predicate, descend, read, isStatic) {\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var queryList = createQueryListInLView(lView, predicate, descend, read, isStatic);\n        store(index - HEADER_OFFSET, queryList);\n        setCurrentQueryIndex(index + 1);\n        return queryList;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return loadInternal(getLView(), index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, false);\n    }\n    function contentQueryInternal(lView, tView, directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read, isStatic) {\n        var contentQuery = createQueryListInLView(lView, predicate, descend, read, isStatic);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, true);\n        tView.staticContentQueries = true;\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵelementAttribute': ɵɵelementAttribute,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵelementProperty': ɵɵelementProperty,\n        'ɵɵcomponentHostSyntheticProperty': ɵɵcomponentHostSyntheticProperty,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports)\n            .map(unwrapModuleWithProvidersImports)\n            .forEach(function (mod) { return verifySemanticsOfNgModuleDef(mod, false); });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports)\n                    .map(unwrapModuleWithProvidersImports)\n                    .forEach(function (mod) { return verifySemanticsOfNgModuleDef(mod, false); });\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext$1(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementProperty = ɵɵelementProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵcomponentHostSyntheticProperty = ɵɵcomponentHostSyntheticProperty;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementAttribute = ɵɵelementAttribute;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}