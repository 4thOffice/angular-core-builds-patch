{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","firstChild","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","lastRenderRootNode","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","findFirstRNode","currentSibling","getNextLNode","getParentLNode","parentType","getChildLNode","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","walkLNodeTree","startingNode","renderParentNode","beforeNode","native","parent_2","childContainerData","dynamicLContainerNode","head","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","containerNextNativeNode","removeIndex","removedLview","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","step","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getCurrentSanitizer","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","leaveView","creationOnly","refreshView","refreshDynamicChildren","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","lViewData","_isParent","_previousOrParentNode","rf","namespaceHTML","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","elementStart","localRefs","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","attrVal","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","storeCleanupWithContext","storeCleanupFn","elementEnd","addNode","queueLifecycleHooks","tViews","initialInputs","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","baseDirectiveCreate","addComponentLogic","directiveIndex","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","tail","findComponentHost","viewRootLNode","adjustedHostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","NO_CHANGE","initBindings","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","store","loadInternal","consumeBinding","bindingUpdated","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","ViewRef$1","EmbeddedViewRef$1","_lViewNode","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","startInjector","ReadFromInjectorFn","read","ElementRef$1","getOrCreateContainerRef","vcRefHost","hostParent","lContainerNode","hostTNode","ViewContainerRef$1","_lContainerNode","_viewRefs","notImplemented","adjustedIdx","_adjustIndex","newIndex","shift","getOrCreateTemplateRef","TemplateRef$1","getOrCreateElementRef","getRenderer","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","EMPTY$1","newObj","minifiedKey","defineDirective","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","pureFunction1","slotOffset","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","NgModuleFactory$$1","LQueries_","deep","shallow","track","descend","createQuery$1","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_m","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_n","Éµangular_packages_core_core_p","Éµangular_packages_core_core_o","Éµangular_packages_core_core_s","Éµangular_packages_core_core_q","Éµangular_packages_core_core_r","Éµangular_packages_core_core_w","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_z","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","attrNameToInject","ÉµPublicFeature","PublicFeature","definition","ÉµNgOnChangesFeature","NgOnChangesFeature","inputPropertyNames","proto","_loop_1","pubKey","minKey","privateMinKey","originalProperty","getOwnPropertyDescriptor","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ÉµmarkDirty","markDirty","ÉµNC","ÉµC","ÉµE","ÉµNH","ÉµNM","namespaceMathML","ÉµNS","namespaceSVG","ÉµEe","ÉµL","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","cleanupInstances","outputData","createOutput","ÉµT","textNode","createTextNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","ÉµQ","memoryIndex","getCurrentQueries","QueryType","Éµd","loadDirective","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","nodeToProject","previouslyProjected","lastNodeToProject","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","getCreationMode","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","nextIndex","ÉµqR","queryRefresh","Éµe","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","Éµa","elementAttribute","element_1","strValue","Éµs","elementStyle","lElement","removeProperty","Éµsn","elementStyleNamed","suffixOrSanitizer","DashCase","Éµk","elementClass","Éµkn","elementClassNamed","classList","Éµt","textBinding","existingNode","textContent","Éµv","embeddedViewEnd","setRenderParentInProjectedNodes","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","nodeValue","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+43.sha-6ea6926\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * ### Example\n     *\n     * #### Tree-shakeable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     *\n     */\n    var  /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * ### Example\n     *\n     * #### Tree-shakeable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     *\n     */\n    InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n            var _a;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     *\n     */\n    var  /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     *\n     */\n    Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Describes within the change detector which strategy will be used the next time change\n     * detection is triggered.\n     *\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    /**\n     * Describes the status of the detector.\n     */\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = false;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     * Pipe decorator and metadata.\n     *\n     * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n     * class must also implement {@link PipeTransform} interface.\n     *\n     * To use the pipe include a reference to the pipe class in\n     * {@link NgModule#declarations}.\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n    /**\n     * Input decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * Output decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * HostBinding decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * HostListener decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = /** @internal */\n        function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = \n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * @usageNotes\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     *\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        /**\n           * Create a new Injector which is configure using `StaticProvider`s.\n           *\n           * ### Example\n           *\n           * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n           */\n        Injector.create = /**\n           * Create a new Injector which is configure using `StaticProvider`s.\n           *\n           * ### Example\n           *\n           * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n           */\n        function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, childRecord, records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n        var _a;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty$1(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject((type), flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$1 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n                var _a;\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs((deps_3)))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * NgModule decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines template and style encapsulation options available for Component's {@link Component}.\n     *\n     * See {@link Component#encapsulation encapsulation}.\n     *\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var  /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.0+43.sha-6ea6926');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     *\n     */\n    var  /**\n     *\n     * @description\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     *\n     */\n    ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n               * @internal\n               */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        /** @internal */\n        ErrorHandler.prototype._findContext = /** @internal */\n        function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = /** @internal */\n        function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var  /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        /**\n           * Retrieves a `Key` for a token.\n           */\n        ReflectiveKey.get = /**\n           * Retrieves a `Key` for a token.\n           */\n        function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: /**\n               * @returns the number of keys registered in the system.\n               */\n            function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var  /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var  /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(/**\n               * Factory function which can return an instance of an object represented by a key.\n               */\n        factory, /**\n               * Arguments (dependencies) to the `factory` function.\n               */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var  /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n         */\n        /**\n           * Turns an array of provider definitions into an array of resolved providers.\n           *\n           * A resolution is a process of flattening multiple nested arrays and converting individual\n           * providers into an array of {@link ResolvedReflectiveProvider}s.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n           *\n           * expect(providers.length).toEqual(2);\n           *\n           * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n           * expect(providers[0].key.displayName).toBe(\"Car\");\n           * expect(providers[0].dependencies.length).toEqual(1);\n           * expect(providers[0].factory).toBeDefined();\n           *\n           * expect(providers[1].key.displayName).toBe(\"Engine\");\n           * });\n           * ```\n           *\n           * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n           */\n        ReflectiveInjector.resolve = /**\n           * Turns an array of provider definitions into an array of resolved providers.\n           *\n           * A resolution is a process of flattening multiple nested arrays and converting individual\n           * providers into an array of {@link ResolvedReflectiveProvider}s.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n           *\n           * expect(providers.length).toEqual(2);\n           *\n           * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n           * expect(providers[0].key.displayName).toBe(\"Car\");\n           * expect(providers[0].dependencies.length).toEqual(1);\n           * expect(providers[0].factory).toBeDefined();\n           *\n           * expect(providers[1].key.displayName).toBe(\"Engine\");\n           * });\n           * ```\n           *\n           * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n           */\n        function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link ReflectiveInjector#resolve resolve} and\n         * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n         */\n        /**\n           * Resolves an array of providers and creates an injector from those providers.\n           *\n           * The passed-in providers can be an array of `Type`, {@link Provider},\n           * or a recursive array of more providers.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n           * expect(injector.get(Car) instanceof Car).toBe(true);\n           * ```\n           *\n           * This function is slower than the corresponding `fromResolvedProviders`\n           * because it needs to resolve the passed-in providers first.\n           * See {@link ReflectiveInjector#resolve resolve} and\n           * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n           */\n        ReflectiveInjector.resolveAndCreate = /**\n           * Resolves an array of providers and creates an injector from those providers.\n           *\n           * The passed-in providers can be an array of `Type`, {@link Provider},\n           * or a recursive array of more providers.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n           * expect(injector.get(Car) instanceof Car).toBe(true);\n           * ```\n           *\n           * This function is slower than the corresponding `fromResolvedProviders`\n           * because it needs to resolve the passed-in providers first.\n           * See {@link ReflectiveInjector#resolve resolve} and\n           * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n           */\n        function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        /**\n           * Creates an injector from previously resolved providers.\n           *\n           * This API is the recommended way to construct injectors in performance-sensitive parts.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var providers = ReflectiveInjector.resolve([Car, Engine]);\n           * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n           * expect(injector.get(Car) instanceof Car).toBe(true);\n           * ```\n           * @experimental\n           */\n        ReflectiveInjector.fromResolvedProviders = /**\n           * Creates an injector from previously resolved providers.\n           *\n           * This API is the recommended way to construct injectors in performance-sensitive parts.\n           *\n           * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n           *\n           * ```typescript\n           * @Injectable()\n           * class Engine {\n           * }\n           *\n           * @Injectable()\n           * class Car {\n           *   constructor(public engine:Engine) {}\n           * }\n           *\n           * var providers = ReflectiveInjector.resolve([Car, Engine]);\n           * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n           * expect(injector.get(Car) instanceof Car).toBe(true);\n           * ```\n           * @experimental\n           */\n        function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        /** @internal */\n        ReflectiveInjector_.prototype._new = /** @internal */\n        function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = /** @internal */\n        function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = /** @internal */\n        function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = /** @internal */\n        function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n               * Map of tokens to records which contain the instances of those tokens.\n               */\n            this.records = new Map();\n            /**\n               * The transitive set of `InjectorType`s which define this injector.\n               */\n            this.injectorDefTypes = new Set();\n            /**\n               * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n               */\n            this.onDestroy = new Set();\n            /**\n               * Flag indicating that this injector was previously destroyed.\n               */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        /**\n           * Destroy the injector and release references to every instance or provider associated with it.\n           *\n           * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n           * hook was found.\n           */\n        R3Injector.prototype.destroy = /**\n           * Destroy the injector and release references to every instance or provider associated with it.\n           *\n           * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n           * hook was found.\n           */\n        function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        /**\n           * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n           * to this injector.\n           */\n        R3Injector.prototype.processInjectorType = /**\n           * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n           * to this injector.\n           */\n        function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        /**\n           * Process a `SingleProvider` and add it.\n           */\n        R3Injector.prototype.processProvider = /**\n           * Process a `SingleProvider` and add it.\n           */\n        function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs((multiRecord_1.multi)); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = /** @internal */\n        function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = \n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var  /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        /**\n           * Compiles the given NgModule and all of its components. All templates of the components listed\n           * in `entryComponents` have to be inlined.\n           */\n        Compiler.prototype.compileModuleSync = /**\n           * Compiles the given NgModule and all of its components. All templates of the components listed\n           * in `entryComponents` have to be inlined.\n           */\n        function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        /**\n           * Compiles the given NgModule and all of its components\n           */\n        Compiler.prototype.compileModuleAsync = /**\n           * Compiles the given NgModule and all of its components\n           */\n        function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        /**\n           * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n           */\n        Compiler.prototype.compileModuleAndAllComponentsSync = /**\n           * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n           */\n        function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        /**\n           * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n           */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n           * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n           */\n        function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        /**\n           * Clears all caches.\n           */\n        Compiler.prototype.clearCache = /**\n           * Clears all caches.\n           */\n        function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        /**\n           * Clears the cache for the given component/ngModule.\n           */\n        Compiler.prototype.clearCacheFor = /**\n           * Clears the cache for the given component/ngModule.\n           */\n        function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        /**\n           * Returns the id for a given NgModule, if one is defined and known to the compiler.\n           */\n        Compiler.prototype.getModuleId = /**\n           * Returns the id for a given NgModule, if one is defined and known to the compiler.\n           */\n        function (moduleType) { return undefined; };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var  /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var  /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var  /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var  /**\n     * @experimental\n     */\n    NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var  /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var  /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n               * Whether there are no outstanding microtasks or macrotasks.\n               */\n            this.isStable = true;\n            /**\n               * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n               */\n            this.onUnstable = new EventEmitter(false);\n            /**\n               * Notifies when there is no more microtasks enqueued in the current VM Turn.\n               * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n               * For this reason this event can fire multiple times per VM Turn.\n               */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n               * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n               * implies we are about to relinquish VM turn.\n               * This event gets called just once.\n               */\n            this.onStable = new EventEmitter(false);\n            /**\n               * Notifies that an error has been delivered.\n               */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        /**\n           * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n           * the function.\n           *\n           * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n           * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * within the Angular zone.\n           *\n           * If a synchronous error happens it will be rethrown and not reported via `onError`.\n           */\n        NgZone.prototype.run = /**\n           * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n           * the function.\n           *\n           * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n           * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * within the Angular zone.\n           *\n           * If a synchronous error happens it will be rethrown and not reported via `onError`.\n           */\n        function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        /**\n           * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n           * returned by the function.\n           *\n           * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n           * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * within the Angular zone.\n           *\n           * If a synchronous error happens it will be rethrown and not reported via `onError`.\n           */\n        NgZone.prototype.runTask = /**\n           * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n           * returned by the function.\n           *\n           * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n           * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * within the Angular zone.\n           *\n           * If a synchronous error happens it will be rethrown and not reported via `onError`.\n           */\n        function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        /**\n           * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n           * rethrown.\n           */\n        NgZone.prototype.runGuarded = /**\n           * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n           * rethrown.\n           */\n        function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        /**\n           * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n           * the function.\n           *\n           * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n           * work that\n           * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * outside of the Angular zone.\n           *\n           * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n           */\n        NgZone.prototype.runOutsideAngular = /**\n           * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n           * the function.\n           *\n           * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n           * work that\n           * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n           *\n           * Any future tasks or microtasks scheduled from within this function will continue executing from\n           * outside of the Angular zone.\n           *\n           * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n           */\n        function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n               * Whether any work was done since the last 'whenStable' callback. This is\n               * useful to detect if this could have potentially destabilized another\n               * component while it is stabilizing.\n               * @internal\n               */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        /**\n           * Increases the number of pending request\n           * @deprecated pending requests are now tracked with zones.\n           */\n        Testability.prototype.increasePendingRequestCount = /**\n           * Increases the number of pending request\n           * @deprecated pending requests are now tracked with zones.\n           */\n        function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        /**\n           * Decreases the number of pending request\n           * @deprecated pending requests are now tracked with zones\n           */\n        Testability.prototype.decreasePendingRequestCount = /**\n           * Decreases the number of pending request\n           * @deprecated pending requests are now tracked with zones\n           */\n        function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        /**\n           * Whether an associated application is stable\n           */\n        Testability.prototype.isStable = /**\n           * Whether an associated application is stable\n           */\n        function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = (_this._callbacks.pop());\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        /**\n           * Wait for the application to be stable with a timeout. If the timeout is reached before that\n           * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n           *\n           * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n           *    whichever comes first.\n           * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n           *    specified, whenStable() will wait forever.\n           * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n           *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n           *    and no further updates will be issued.\n           */\n        Testability.prototype.whenStable = /**\n           * Wait for the application to be stable with a timeout. If the timeout is reached before that\n           * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n           *\n           * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n           *    whichever comes first.\n           * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n           *    specified, whenStable() will wait forever.\n           * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n           *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n           *    and no further updates will be issued.\n           */\n        function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        /**\n           * Get the number of pending requests\n           * @deprecated pending requests are now tracked with zones\n           */\n        Testability.prototype.getPendingRequestCount = /**\n           * Get the number of pending requests\n           * @deprecated pending requests are now tracked with zones\n           */\n        function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        /**\n           * Find providers by name\n           * @param using The root element to search from\n           * @param provider The name of binding variable\n           * @param exactMatch Whether using exactMatch\n           */\n        Testability.prototype.findProviders = /**\n           * Find providers by name\n           * @param using The root element to search from\n           * @param provider The name of binding variable\n           * @param exactMatch Whether using exactMatch\n           */\n        function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone, },\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        /**\n           * Registers an application with a testability hook so that it can be tracked\n           * @param token token of application, root element\n           * @param testability Testability hook\n           */\n        TestabilityRegistry.prototype.registerApplication = /**\n           * Registers an application with a testability hook so that it can be tracked\n           * @param token token of application, root element\n           * @param testability Testability hook\n           */\n        function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        /**\n           * Unregisters an application.\n           * @param token token of application, root element\n           */\n        TestabilityRegistry.prototype.unregisterApplication = /**\n           * Unregisters an application.\n           * @param token token of application, root element\n           */\n        function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        /**\n           * Unregisters all applications\n           */\n        TestabilityRegistry.prototype.unregisterAllApplications = /**\n           * Unregisters all applications\n           */\n        function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        /**\n           * Get a testability hook associated with the application\n           * @param elem root element\n           */\n        TestabilityRegistry.prototype.getTestability = /**\n           * Get a testability hook associated with the application\n           * @param elem root element\n           */\n        function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        /**\n           * Get all registered testabilities\n           */\n        TestabilityRegistry.prototype.getAllTestabilities = /**\n           * Get all registered testabilities\n           */\n        function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        /**\n           * Get all registered applications(root elements)\n           */\n        TestabilityRegistry.prototype.getAllRootElements = /**\n           * Get all registered applications(root elements)\n           */\n        function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        /**\n           * Find testability of a node in the Tree\n           * @param elem node\n           * @param findInAncestors whether finding testability in ancestors if testability was not found in\n           * current node\n           */\n        TestabilityRegistry.prototype.findTestabilityInTree = /**\n           * Find testability of a node in the Tree\n           * @param elem node\n           * @param findInAncestors whether finding testability in ancestors if testability was not found in\n           * current node\n           */\n        function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var  /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     *\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        /**\n           * Creates an instance of an `@NgModule` for the given platform\n           * for offline compilation.\n           *\n           * ## Simple Example\n           *\n           * ```typescript\n           * my_module.ts:\n           *\n           * @NgModule({\n           *   imports: [BrowserModule]\n           * })\n           * class MyModule {}\n           *\n           * main.ts:\n           * import {MyModuleNgFactory} from './my_module.ngfactory';\n           * import {platformBrowser} from '@angular/platform-browser';\n           *\n           * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n           * ```\n           *\n           * @experimental APIs related to application bootstrap are currently under review.\n           */\n        PlatformRef.prototype.bootstrapModuleFactory = /**\n           * Creates an instance of an `@NgModule` for the given platform\n           * for offline compilation.\n           *\n           * ## Simple Example\n           *\n           * ```typescript\n           * my_module.ts:\n           *\n           * @NgModule({\n           *   imports: [BrowserModule]\n           * })\n           * class MyModule {}\n           *\n           * main.ts:\n           * import {MyModuleNgFactory} from './my_module.ngfactory';\n           * import {platformBrowser} from '@angular/platform-browser';\n           *\n           * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n           * ```\n           *\n           * @experimental APIs related to application bootstrap are currently under review.\n           */\n        function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () {\n                    return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                });\n                return _callAndReportToErrorHandler(exceptionHandler, (ngZone), function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        /**\n           * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n           *\n           * ## Simple Example\n           *\n           * ```typescript\n           * @NgModule({\n           *   imports: [BrowserModule]\n           * })\n           * class MyModule {}\n           *\n           * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n           * ```\n           *\n           */\n        PlatformRef.prototype.bootstrapModule = /**\n           * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n           *\n           * ## Simple Example\n           *\n           * ```typescript\n           * @NgModule({\n           *   imports: [BrowserModule]\n           * })\n           * class MyModule {}\n           *\n           * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n           * ```\n           *\n           */\n        function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler = compilerFactory.createCompiler([options]);\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        /**\n           * Register a listener to be called when the platform is disposed.\n           */\n        PlatformRef.prototype.onDestroy = /**\n           * Register a listener to be called when the platform is disposed.\n           */\n        function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: /**\n               * Retrieve the platform {@link Injector}, which is the parent injector for\n               * every Angular application on the page and provides singleton providers.\n               */\n            function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        /**\n           * Destroy the Angular platform and all Angular applications on the page.\n           */\n        PlatformRef.prototype.destroy = /**\n           * Destroy the Angular platform and all Angular applications on the page.\n           */\n        function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector, },\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     *\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n               * Get a list of component types registered to this application.\n               * This list is populated even before the component is created.\n               */\n            this.componentTypes = [];\n            /**\n               * Get a list of components registered to this application.\n               */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the [componentType]'s\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * [componentType]'s selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        /**\n           * Bootstrap a new component at the root level of the application.\n           *\n           * ### Bootstrap process\n           *\n           * When bootstrapping a new root component into an application, Angular mounts the\n           * specified application component onto DOM elements identified by the [componentType]'s\n           * selector and kicks off automatic change detection to finish initializing the component.\n           *\n           * Optionally, a component can be mounted onto a DOM element that does not match the\n           * [componentType]'s selector.\n           *\n           * ### Example\n           * {@example core/ts/platform/platform.ts region='longform'}\n           */\n        ApplicationRef.prototype.bootstrap = /**\n           * Bootstrap a new component at the root level of the application.\n           *\n           * ### Bootstrap process\n           *\n           * When bootstrapping a new root component into an application, Angular mounts the\n           * specified application component onto DOM elements identified by the [componentType]'s\n           * selector and kicks off automatic change detection to finish initializing the component.\n           *\n           * Optionally, a component can be mounted onto a DOM element that does not match the\n           * [componentType]'s selector.\n           *\n           * ### Example\n           * {@example core/ts/platform/platform.ts region='longform'}\n           */\n        function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    (this._componentFactoryResolver.resolveComponentFactory(componentOrFactory));\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        /**\n           * Invoke this method to explicitly process change detection and its side-effects.\n           *\n           * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n           * further changes are detected. If additional changes are picked up during this second cycle,\n           * bindings in the app have side-effects that cannot be resolved in a single change detection\n           * pass.\n           * In this case, Angular throws an error, since an Angular application can only have one change\n           * detection pass during which all change detection must complete.\n           */\n        ApplicationRef.prototype.tick = /**\n           * Invoke this method to explicitly process change detection and its side-effects.\n           *\n           * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n           * further changes are detected. If additional changes are picked up during this second cycle,\n           * bindings in the app have side-effects that cannot be resolved in a single change detection\n           * pass.\n           * In this case, Angular throws an error, since an Angular application can only have one change\n           * detection pass during which all change detection must complete.\n           */\n        function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        /**\n           * Attaches a view so that it will be dirty checked.\n           * The view will be automatically detached when it is destroyed.\n           * This will throw if the view is already attached to a ViewContainer.\n           */\n        ApplicationRef.prototype.attachView = /**\n           * Attaches a view so that it will be dirty checked.\n           * The view will be automatically detached when it is destroyed.\n           * This will throw if the view is already attached to a ViewContainer.\n           */\n        function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        /**\n           * Detaches a view from dirty checking again.\n           */\n        ApplicationRef.prototype.detachView = /**\n           * Detaches a view from dirty checking again.\n           */\n        function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = /** @internal */\n        function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: /**\n               * Returns the number of attached views.\n               */\n            function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var  /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var  /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var  /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var  /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var  /**\n     * @experimental\n     */\n    RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    /**\n     * @experimental\n     */\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var  /**\n     * @experimental\n     */\n    Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var  /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var  /**\n     * Used to load ng module factories.\n     *\n     */\n    NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     */\n    var  /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     */\n    QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        /**\n           * See\n           * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n           */\n        QueryList.prototype.map = /**\n           * See\n           * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n           */\n        function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        /**\n           * See\n           * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n           */\n        QueryList.prototype.filter = /**\n           * See\n           * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n           */\n        function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        /**\n           * See\n           * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n           */\n        QueryList.prototype.find = /**\n           * See\n           * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n           */\n        function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        /**\n           * See\n           * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n           */\n        QueryList.prototype.reduce = /**\n           * See\n           * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n           */\n        function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        /**\n           * See\n           * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n           */\n        QueryList.prototype.forEach = /**\n           * See\n           * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n           */\n        function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        /**\n           * See\n           * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n           */\n        QueryList.prototype.some = /**\n           * See\n           * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n           */\n        function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        /** internal */\n        QueryList.prototype.setDirty = /** internal */\n        function () { this.dirty = true; };\n        /** internal */\n        /** internal */\n        QueryList.prototype.destroy = /** internal */\n        function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var  /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var  /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var  /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var  /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var  /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var  /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n            var _a;\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var  /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = /** Creates a wrapped value. */\n        function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        /**\n           * Returns the underlying value of a wrapped value.\n           * Returns the given `value` when it is not wrapped.\n           **/\n        WrappedValue.unwrap = /**\n           * Returns the underlying value of a wrapped value.\n           * Returns the given `value` when it is not wrapped.\n           **/\n        function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = /** Returns true if `value` is a wrapped value. */\n        function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var  /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        /**\n           * Check whether the new value is the first value assigned.\n           */\n        SimpleChange.prototype.isFirstChange = /**\n           * Check whether the new value is the first value assigned.\n           */\n        function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var  /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        (nextIt.currentIndex) <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = (currentIndex) - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n               * changes.\n               */\n            function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        /**\n           * Reset the state of the change objects to show no changes. This means set previousKey to\n           * currentKey, and clear all of the queues (additions, moves, removals).\n           * Set the previousIndexes of moved and added items to their currentIndexes\n           * Reset the list of additions, moves and removals\n           *\n           * @internal\n           */\n        DefaultIterableDiffer.prototype._reset = /**\n           * Reset the state of the change objects to show no changes. This means set previousKey to\n           * currentKey, and clear all of the queues (additions, moves, removals).\n           * Set the previousIndexes of moved and added items to their currentIndexes\n           * Reset the list of additions, moves and removals\n           *\n           * @internal\n           */\n        function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        /**\n           * This is the core function which handles differences between collections.\n           *\n           * - `record` is the record which we saw at this position last time. If null then it is a new\n           *   item.\n           * - `item` is the current item in the collection\n           * - `index` is the position of the item in the collection\n           *\n           * @internal\n           */\n        DefaultIterableDiffer.prototype._mismatch = /**\n           * This is the core function which handles differences between collections.\n           *\n           * - `record` is the record which we saw at this position last time. If null then it is a new\n           *   item.\n           * - `item` is the current item in the collection\n           * - `index` is the position of the item in the collection\n           *\n           * @internal\n           */\n        function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        /**\n           * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n           *\n           * Use case: `[a, a]` => `[b, a, a]`\n           *\n           * If we did not have this check then the insertion of `b` would:\n           *   1) evict first `a`\n           *   2) insert `b` at `0` index.\n           *   3) leave `a` at index `1` as is. <-- this is wrong!\n           *   3) reinsert `a` at index 2. <-- this is wrong!\n           *\n           * The correct behavior is:\n           *   1) evict first `a`\n           *   2) insert `b` at `0` index.\n           *   3) reinsert `a` at index 1.\n           *   3) move `a` at from `1` to `2`.\n           *\n           *\n           * Double check that we have not evicted a duplicate item. We need to check if the item type may\n           * have already been removed:\n           * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n           * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n           * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n           * at the end.\n           *\n           * @internal\n           */\n        DefaultIterableDiffer.prototype._verifyReinsertion = /**\n           * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n           *\n           * Use case: `[a, a]` => `[b, a, a]`\n           *\n           * If we did not have this check then the insertion of `b` would:\n           *   1) evict first `a`\n           *   2) insert `b` at `0` index.\n           *   3) leave `a` at index `1` as is. <-- this is wrong!\n           *   3) reinsert `a` at index 2. <-- this is wrong!\n           *\n           * The correct behavior is:\n           *   1) evict first `a`\n           *   2) insert `b` at `0` index.\n           *   3) reinsert `a` at index 1.\n           *   3) move `a` at from `1` to `2`.\n           *\n           *\n           * Double check that we have not evicted a duplicate item. We need to check if the item type may\n           * have already been removed:\n           * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n           * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n           * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n           * at the end.\n           *\n           * @internal\n           */\n        function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, (record._prev), index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        /**\n           * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n           *\n           * - `record` The first excess {@link IterableChangeRecord_}.\n           *\n           * @internal\n           */\n        DefaultIterableDiffer.prototype._truncate = /**\n           * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n           *\n           * - `record` The first excess {@link IterableChangeRecord_}.\n           *\n           * @internal\n           */\n        function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = /** @internal */\n        function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = /** @internal */\n        function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = /** @internal */\n        function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = /** @internal */\n        function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = /** @internal */\n        function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = /** @internal */\n        function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = /** @internal */\n        function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = /** @internal */\n        function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var \n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        /**\n           * Append the record to the list of duplicates.\n           *\n           * Note: by design all records in the list of duplicates hold the same value in record.item.\n           */\n        _DuplicateItemRecordList.prototype.add = /**\n           * Append the record to the list of duplicates.\n           *\n           * Note: by design all records in the list of duplicates hold the same value in record.item.\n           */\n        function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = \n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= (record.currentIndex)) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        /**\n           * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n           *\n           * Returns whether the list of duplicates is empty.\n           */\n        _DuplicateItemRecordList.prototype.remove = /**\n           * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n           *\n           * Returns whether the list of duplicates is empty.\n           */\n        function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        /**\n           * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n           * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n           *\n           * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n           * have any more `a`s needs to return the second `a`.\n           */\n        _DuplicateMap.prototype.get = /**\n           * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n           * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n           *\n           * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n           * have any more `a`s needs to return the second `a`.\n           */\n        function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        /**\n           * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n           *\n           * The list of duplicates also is removed from the map if it gets empty.\n           */\n        _DuplicateMap.prototype.remove = /**\n           * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n           *\n           * The list of duplicates also is removed from the map if it gets empty.\n           */\n        function (record) {\n            var key = record.trackById;\n            var recordList = (this.map.get(key));\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        /**\n           * Check the current state of the map vs the previous.\n           * The algorithm is optimised for when the keys do no change.\n           */\n        DefaultKeyValueDiffer.prototype.check = /**\n           * Check the current state of the map vs the previous.\n           * The algorithm is optimised for when the keys do no change.\n           */\n        function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        /**\n           * Inserts a record before `before` or append at the end of the list when `before` is null.\n           *\n           * Notes:\n           * - This method appends at `this._appendAfter`,\n           * - This method updates `this._appendAfter`,\n           * - The return value is the new value for the insertion pointer.\n           */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n           * Inserts a record before `before` or append at the end of the list when `before` is null.\n           *\n           * Notes:\n           * - This method appends at `this._appendAfter`,\n           * - This method updates `this._appendAfter`,\n           * - The return value is the new value for the insertion pointer.\n           */\n        function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = (this._records.get(key));\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = /** @internal */\n        function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = \n        // Add the record or a given key to the list of changes only when the value has actually changed\n        function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = /** @internal */\n        function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        /**\n           * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n           * inherited {@link IterableDiffers} instance with the provided factories and return a new\n           * {@link IterableDiffers} instance.\n           *\n           * The following example shows how to extend an existing list of factories,\n           * which will only be applied to the injector for this component and its children.\n           * This step is all that's required to make a new {@link IterableDiffer} available.\n           *\n           * ### Example\n           *\n           * ```\n           * @Component({\n           *   viewProviders: [\n           *     IterableDiffers.extend([new ImmutableListDiffer()])\n           *   ]\n           * })\n           * ```\n           */\n        IterableDiffers.extend = /**\n           * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n           * inherited {@link IterableDiffers} instance with the provided factories and return a new\n           * {@link IterableDiffers} instance.\n           *\n           * The following example shows how to extend an existing list of factories,\n           * which will only be applied to the injector for this component and its children.\n           * This step is all that's required to make a new {@link IterableDiffer} available.\n           *\n           * ### Example\n           *\n           * ```\n           * @Component({\n           *   viewProviders: [\n           *     IterableDiffers.extend([new ImmutableListDiffer()])\n           *   ]\n           * })\n           * ```\n           */\n        function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var  /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        /**\n           * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n           * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n           * {@link KeyValueDiffers} instance.\n           *\n           * The following example shows how to extend an existing list of factories,\n           * which will only be applied to the injector for this component and its children.\n           * This step is all that's required to make a new {@link KeyValueDiffer} available.\n           *\n           * ### Example\n           *\n           * ```\n           * @Component({\n           *   viewProviders: [\n           *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n           *   ]\n           * })\n           * ```\n           */\n        KeyValueDiffers.extend = /**\n           * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n           * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n           * {@link KeyValueDiffers} instance.\n           *\n           * The following example shows how to extend an existing list of factories,\n           * which will only be applied to the injector for this component and its children.\n           * This step is all that's required to make a new {@link KeyValueDiffer} available.\n           *\n           * ### Example\n           *\n           * ```\n           * @Component({\n           *   viewProviders: [\n           *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n           *   ]\n           * })\n           * ```\n           */\n        function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    /**\n     * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n     * that the compiler should use in case of missing translations:\n     * - Error: throw if you have missing translations.\n     * - Warning (default): show a warning in the console and/or shell.\n     * - Ignore: do nothing.\n     *\n     * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n     *\n     * ### Example\n     * ```typescript\n     * import { MissingTranslationStrategy } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   missingTranslation: MissingTranslationStrategy.Error\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef, },\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        /**\n           * Use XHR to create and fill an inert body element (on Safari 10.1)\n           * See\n           * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n           */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = /**\n           * Use XHR to create and fill an inert body element (on Safari 10.1)\n           * See\n           * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n           */\n        function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild((body.firstChild));\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        /**\n           * Use DOMParser to create and fill an inert body element (on Firefox)\n           * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n           *\n           */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = /**\n           * Use DOMParser to create and fill an inert body element (on Firefox)\n           * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n           *\n           */\n        function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild((body.firstChild));\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        /**\n           * Use an HTML5 `template` element, if supported, or an inert body element created via\n           * `createHtmlDocument` to create and fill an inert DOM element.\n           * This is the default sane strategy to use if the browser does not require one of the specialised\n           * strategies above.\n           */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = /**\n           * Use an HTML5 `template` element, if supported, or an inert body element created via\n           * `createHtmlDocument` to create and fill an inert DOM element.\n           * This is the default sane strategy to use if the browser does not require one of the specialised\n           * strategies above.\n           */\n        function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        /**\n           * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n           * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n           * 'ns1:xlink:foo').\n           *\n           * This is undesirable since we don't want to allow any of these custom attributes. This method\n           * strips them all.\n           */\n        InertBodyHelper.prototype.stripCustomNsAttrs = /**\n           * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n           * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n           * 'ns1:xlink:foo').\n           *\n           * This is undesirable since we don't want to allow any of these custom attributes. This method\n           * strips them all.\n           */\n        function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var res = {};\n        try {\n            for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var t = _b.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n        var e_1, _c;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n        var e_2, _a;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = (el.firstChild);\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars((current.nodeValue));\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = (current.firstChild);\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, (current.nextSibling));\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, (current.parentNode));\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent((inertBodyElement)) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n     * handled.\n     *\n     * See DomSanitizer for more details on security in Angular applications.\n     *\n     *\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var  /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: (undefined),\n        createRootView: (undefined),\n        createEmbeddedView: (undefined),\n        createComponentView: (undefined),\n        createNgModuleRef: (undefined),\n        overrideProvider: (undefined),\n        overrideComponentView: (undefined),\n        clearOverrides: (undefined),\n        checkAndUpdateView: (undefined),\n        checkNoChangesView: (undefined),\n        destroyView: (undefined),\n        resolveDep: (undefined),\n        createDebugContext: (undefined),\n        handleEvent: (undefined),\n        updateDirectives: (undefined),\n        updateRenderer: (undefined),\n        dirtyParentQueries: (undefined),\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n            var _a;\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, (view.def.lastRenderRootNode)));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl((compView));\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode((hostView), nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = (name.match(NS_PREFIX_RE));\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var ns = (null);\n        var name = (null);\n        if (namespaceAndName) {\n            _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = (undefined);\n            var suffix = (undefined);\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n        var _b;\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = (def.element);\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = (binding.name);\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, (viewIndex), view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = (viewIndex) > 0 ? embeddedViews[(viewIndex) - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, (view.parentNodeDef));\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, (prevView.def.lastRenderRootNode)) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = (this._inputs);\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        /**\n           * Creates a new component.\n           */\n        ComponentFactory_.prototype.create = /**\n           * Creates a new component.\n           */\n        function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n               * @internal\n               */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = (view.parent);\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = (detachEmbeddedView(this._data, i));\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, (this._def.element.template), context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass((compView.parent), (viewParentEl(compView)), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, (def.parent), allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = (undefined);\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = (undefined);\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, (def.parent), allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, (def.parent), allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, (def.parent), allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = (elDef.parent);\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = (viewParentEl(searchView));\n            searchView = (searchView.parent);\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = (binding.name);\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = (view.parentNodeDef);\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = (undefined);\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = (nodeDef.parent.parent);\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, (nodeDef.query), []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, (nodeDef.query), []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData((view.parent), hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = (undefined);\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition((nodeDef.element.componentView));\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) {\n                return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                    prodCheckNoChangesNode, view);\n            },\n            updateRenderer: function (view, checkType) {\n                return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                    prodCheckNoChangesNode, view);\n            },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition((hostViewDef.nodes[0].element.componentView));\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = (nodeDef.provider);\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName((binding.nonMinifiedName))] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = (nodeDef.parent);\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = (elDef.parent);\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = (viewParentEl(elView));\n                    elView = (elView.parent);\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n                var _a;\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = (view.parent);\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, (getCurrentDebugContext()));\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex((getDebugNode(node)));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = (getDebugNode(refChild));\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 14;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 13 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks((currentView[DIRECTIVES]), tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    // TODO: cleanup once the code is merged in angular/angular\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten$1(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the first RNode following the given LNode in the same parent DOM element.\n     *\n     * This is needed in order to insert the given node with insertBefore.\n     *\n     * @param node The node whose following DOM node must be found.\n     * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n     * lookup should not be stopped until the result is found.\n     * @returns RNode before which the provided node should be inserted or null if the lookup was\n     * stopped\n     * or if there is no native node after the given logical node in the same native parent.\n     */\n    function findNextRNodeSibling(node, stopNode) {\n        var currentNode = node;\n        while (currentNode && currentNode !== stopNode) {\n            var pNextOrParent = currentNode.pNextOrParent;\n            if (pNextOrParent) {\n                while (pNextOrParent.tNode.type !== 1 /* Projection */) {\n                    var nativeNode = findFirstRNode(pNextOrParent);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    pNextOrParent = (pNextOrParent.pNextOrParent);\n                }\n                currentNode = pNextOrParent;\n            }\n            else {\n                var currentSibling = getNextLNode(currentNode);\n                while (currentSibling) {\n                    var nativeNode = findFirstRNode(currentSibling);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    currentSibling = getNextLNode(currentSibling);\n                }\n                var parentNode = getParentLNode(currentNode);\n                currentNode = null;\n                if (parentNode) {\n                    var parentType = parentNode.tNode.type;\n                    if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                        currentNode = parentNode;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1)\n            return null;\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Get the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * @param node The node whose next node in the LNode tree must be found.\n     * @return LNode|null The next sibling in the LNode tree.\n     */\n    function getNextLNodeWithProjection(node) {\n        var pNextOrParent = node.pNextOrParent;\n        if (pNextOrParent) {\n            // The node is projected\n            var isLastProjectedNode = pNextOrParent.tNode.type === 1 /* Projection */;\n            // returns pNextOrParent if we are not at the end of the list, null otherwise\n            return isLastProjectedNode ? null : pNextOrParent;\n        }\n        // returns node.next because the the node is not projected\n        return getNextLNode(node);\n    }\n    /**\n     * Find the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * If there is no sibling node, this function goes to the next sibling of the parent node...\n     * until it reaches rootNode (at which point null is returned).\n     *\n     * @param initialNode The node whose following node in the LNode tree must be found.\n     * @param rootNode The root node at which the lookup should stop.\n     * @return LNode|null The following node in the LNode tree.\n     */\n    function getNextOrParentSiblingNode(initialNode, rootNode) {\n        var node = initialNode;\n        var nextNode = getNextLNodeWithProjection(node);\n        while (node && !nextNode) {\n            // if node.pNextOrParent is not null here, it is not the next node\n            // (because, at this point, nextNode is null, so it is the parent)\n            node = node.pNextOrParent || getParentLNode(node);\n            if (node === rootNode) {\n                return null;\n            }\n            nextNode = node && getNextLNodeWithProjection(node);\n        }\n        return nextNode;\n    }\n    /**\n     * Returns the first RNode inside the given LNode.\n     *\n     * @param node The node whose first DOM node must be found\n     * @returns RNode The first RNode of the given LNode or null if there is none.\n     */\n    function findFirstRNode(rootNode) {\n        return walkLNodeTree(rootNode, rootNode, 0 /* Find */) || null;\n    }\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered.\n     * @param action Identifies the action to be performed on the LElement nodes.\n     * @param renderer Optional the current renderer, required for action modes 1, 2 and 3.\n     * @param renderParentNode Optionnal the render parent node to be set in all LContainerNodes found,\n     * required for action modes 1 and 2.\n     * @param beforeNode Optionnal the node before which elements should be added, required for action\n     * modes 1.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        while (node) {\n            var nextNode = null;\n            if (node.tNode.type === 3 /* Element */) {\n                // Execute the action\n                if (action === 0 /* Find */) {\n                    return node.native;\n                }\n                else if (action === 1 /* Insert */) {\n                    var parent_1 = renderParentNode.native;\n                    isProceduralRenderer((renderer)) ?\n                        renderer\n                            .insertBefore((parent_1), (node.native), beforeNode) :\n                        parent_1.insertBefore((node.native), beforeNode, true);\n                }\n                else if (action === 2 /* Detach */) {\n                    var parent_2 = renderParentNode.native;\n                    isProceduralRenderer((renderer)) ?\n                        renderer.removeChild(parent_2, (node.native)) :\n                        parent_2.removeChild((node.native));\n                }\n                else if (action === 3 /* Destroy */) {\n                    ngDevMode && ngDevMode.rendererDestroyNode++;\n                    renderer.destroyNode((node.native));\n                }\n                nextNode = getNextLNode(node);\n            }\n            else if (node.tNode.type === 0 /* Container */) {\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            }\n            else if (node.tNode.type === 1 /* Projection */) {\n                // For Projection look at the first projected node\n                nextNode = node.data.head;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 1 /* Insert */ : 2 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = viewNode.data;\n        }\n        if (index < views.length) {\n            viewNode.data[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            viewNode.data[NEXT] = null;\n        }\n        // Notify query that a new view has been added\n        var lView = viewNode.data;\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // If the container's renderParent is null, we know that it is a root node of its own parent view\n        // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n        // nodes twice - once now and once when its parent inserts its views).\n        if (container.data[RENDER_PARENT] !== null) {\n            var beforeNode = findNextRNodeSibling(viewNode, container);\n            if (!beforeNode) {\n                var containerNextNativeNode = container.native;\n                if (containerNextNativeNode === undefined) {\n                    containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n                }\n                beforeNode = containerNextNativeNode;\n            }\n            addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n        }\n        // Sets the attached flag\n        viewNode.data[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(container, viewNode, false);\n        // Notify query that view has been removed\n        var removedLview = viewNode.data;\n        if (removedLview[QUERIES]) {\n            removedLview[QUERIES].removeView();\n        }\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 3 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = (viewData[TVIEW].cleanup);\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks((view[DIRECTIVES]), destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks((viewData), pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element should be inserted in the given parent.\n     *\n     * The native node can be inserted when its parent is:\n     * - A regular element => Yes\n     * - A component host element =>\n     *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n     *      template)\n     *      => don't add as the parent component will project if needed.\n     *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n     *      add it\n     * - View element => delay insertion, will be done on `viewEnd()`\n     *\n     * @param parent The parent in which to insert the child\n     * @param currentView The LView being processed\n     * @return boolean Whether the child element should be inserted.\n     */\n    function canInsertNativeNode(parent, currentView) {\n        var parentIsElement = parent.tNode.type === 3 /* Element */;\n        return parentIsElement &&\n            (parent.view !== currentView || parent.data === null /* Regular Element. */);\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only add element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView) {\n        if (node.tNode.type !== 0 /* Container */) {\n            appendChild(currentParent, node.native, currentView);\n        }\n        else {\n            // The node we are adding is a Container and we are adding it to Element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assignee the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = currentParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, null);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = currentParent;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = (tNode.attrs);\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SELECT_ONLY */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx ?\n                        '' :\n                        nodeAttrs[attrIndexInNode + 1];\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function findAttrIndexInNode(name, attrs) {\n        var step = 2;\n        if (attrs === null)\n            return -1;\n        for (var i = 0; i < attrs.length; i += step) {\n            var attrName = attrs[i];\n            if (attrName === name)\n                return i;\n            if (attrName === 1 /* SELECT_ONLY */) {\n                step = 1;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries || (currentQueries = new QueryType());\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks((directives), tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     * */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicChildren();\n        if (!checkNoChangesMode) {\n            executeHooks((directives), tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = (tView.directives);\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks((directives), tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            // queries\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            (null),\n            // hostNode\n            -1,\n            null,\n            null,\n            context,\n            // context\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            // renderer\n            sanitizer || null,\n            null\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: (null),\n            pNextOrParent: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode =\n                state[TVIEW].node || createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = (null);\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        var rf = 2 /* Update */;\n        try {\n            isParent = true;\n            previousOrParentNode = (null);\n            if (viewNode == null) {\n                var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n                if (queries) {\n                    lView[QUERIES] = queries.createView();\n                }\n                viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n                rf = 1 /* Create */;\n            }\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView((oldView), isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), (componentOrContext));\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, (native), name, attrs || null, null);\n        if (attrs)\n            setUpAttributes(native, attrs);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, (def.selectors))) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = (tView.directives);\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            node: (null),\n            data: HEADER_FILLER.slice(),\n            // Fill in to match HEADER_OFFSET in LViewData\n            childIndex: -1,\n            // Children set in addToViewTree(), if any\n            bindingStartIndex: -1,\n            // Set in initBindings()\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                var attrVal = attrs[i + 1];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], (directives));\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], (directives));\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = (tView.directives);\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    function elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].removeProperty(styleName);\n            }\n            else {\n                var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n                if (typeof suffixOrSanitizer == 'string')\n                    strValue = strValue + suffixOrSanitizer;\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].setProperty(styleName, strValue);\n            }\n        }\n    }\n    /**\n     * Set the `style` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage.\n     *\n     *\n     * @param index The index of the element to update in the LViewData array\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n     *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n     *   performed.\n     */\n    function elementStyle(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            if (isProceduralRenderer(renderer)) {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                renderer.setProperty(lElement.native, 'style', value);\n            }\n            else {\n                var style = lElement.native['style'];\n                for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                    var styleName = keys[i];\n                    var styleValue = value[styleName];\n                    if (styleValue == null) {\n                        ngDevMode && ngDevMode.rendererRemoveStyle++;\n                        style.removeProperty(styleName);\n                    }\n                    else {\n                        ngDevMode && ngDevMode.rendererSetStyle++;\n                        style.setProperty(styleName, styleValue);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    /**\n     * Create a directive.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(index, directive, directiveDef) {\n        var instance = baseDirectiveCreate(index, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(index, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic((directiveDef));\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = (tNode.attrs);\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n        }\n        return initialInputData;\n    }\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            // queries\n            [],\n            // views\n            canInsertNativeNode(parentLNode, currentView) ? parentLNode :\n                null // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var node = createLNode(index, 0 /* Container */, undefined, tagName || null, attrs || null, lContainer);\n        if (firstTemplatePass) {\n            node.tNode.tViews =\n                template ? createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry) : [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = (getParentLNode(previousOrParentNode));\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        container.native = undefined;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = (container.data[ACTIVE_INDEX]);\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    function refreshDynamicChildren() {\n        for (var current = getLViewChild(viewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], (dynamicViewData[CONTEXT]), renderer);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, (lContainer[ACTIVE_INDEX]), viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        var viewNode = previousOrParentNode = viewData[HOST_NODE];\n        var containerNode = getParentLNode(previousOrParentNode);\n        if (containerNode) {\n            ngDevMode && assertNodeType(viewNode, 2 /* View */);\n            ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n            var lContainer = containerNode.data;\n            if (creationMode) {\n                // When projected nodes are going to be inserted, the renderParent of the dynamic container\n                // used by the ViewContainerRef must be set.\n                setRenderParentInProjectedNodes(lContainer[RENDER_PARENT], viewNode);\n                // it is a new view, insert it into collection of views for a given container\n                insertView(containerNode, viewNode, (lContainer[ACTIVE_INDEX]));\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        leaveView((viewData[PARENT]));\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /**\n     * For nodes which are projected inside an embedded view, this function sets the renderParent\n     * of their dynamic LContainerNode.\n     * @param renderParent the renderParent of the LContainer which contains the embedded view.\n     * @param viewNode the embedded view.\n     */\n    function setRenderParentInProjectedNodes(renderParent, viewNode) {\n        if (renderParent != null) {\n            var node = getChildLNode(viewNode);\n            while (node) {\n                if (node.tNode.type === 1 /* Projection */) {\n                    var nodeToProject = node.data.head;\n                    var lastNodeToProject = node.data.tail;\n                    while (nodeToProject) {\n                        if (nodeToProject.dynamicLContainerNode) {\n                            nodeToProject.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n                        }\n                        nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                    }\n                }\n                node = getNextLNode(node);\n            }\n        }\n    }\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = (element.data);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, (directives));\n            detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(index, selectors, textSelectors) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var distributedNodes = new Array(noOfNodeBuckets);\n        for (var i = 0; i < noOfNodeBuckets; i++) {\n            distributedNodes[i] = [];\n        }\n        var componentNode = findComponentHost(viewData);\n        var componentChild = getChildLNode(componentNode);\n        while (componentChild !== null) {\n            // execute selector matching logic if and only if:\n            // - there are selectors defined\n            // - a node has a tag name / attributes that can be matched\n            if (selectors && componentChild.tNode) {\n                var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, (textSelectors));\n                distributedNodes[matchedIdx].push(componentChild);\n            }\n            else {\n                distributedNodes[0].push(componentChild);\n            }\n            componentChild = getNextLNode(componentChild);\n        }\n        ngDevMode && assertDataNext(index + HEADER_OFFSET);\n        store(index, distributedNodes);\n    }\n    /**\n     * Updates the linked list of a projection node, by appending another linked list.\n     *\n     * @param projectionNode Projection node whose projected nodes linked list has to be updated\n     * @param appendedFirst First node of the linked list to append.\n     * @param appendedLast Last node of the linked list to append.\n     */\n    function appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n        ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n        if (!appendedLast) {\n            // nothing to append\n            return;\n        }\n        var projectionNodeData = projectionNode.data;\n        if (projectionNodeData.tail) {\n            projectionNodeData.tail.pNextOrParent = appendedFirst;\n        }\n        else {\n            projectionNodeData.head = appendedFirst;\n        }\n        projectionNodeData.tail = appendedLast;\n        appendedLast.pNextOrParent = projectionNode;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param localIndex - index under which distribution of projected nodes was memorized\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, localIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is memorized on a component's view level\n        var componentNode = findComponentHost(viewData);\n        var componentLView = componentNode.data;\n        var distributedNodes = loadInternal(localIndex, componentLView);\n        var nodesForSelector = distributedNodes[selectorIndex];\n        // build the linked list of projected nodes:\n        for (var i = 0; i < nodesForSelector.length; i++) {\n            var nodeToProject = nodesForSelector[i];\n            if (nodeToProject.tNode.type === 1 /* Projection */) {\n                // Reprojecting a projection -> append the list of previously projected nodes\n                var previouslyProjected = nodeToProject.data;\n                appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n            }\n            else {\n                // Projecting a single node\n                appendToProjectionNode(node, nodeToProject, nodeToProject);\n            }\n        }\n        var currentParent = getParentLNode(node);\n        if (canInsertNativeNode(currentParent, viewData)) {\n            ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n            // process each node in the list of projected nodes:\n            var nodeToProject = node.data.head;\n            var lastNodeToProject = node.data.tail;\n            while (nodeToProject) {\n                appendProjectedNode(nodeToProject, currentParent, viewData);\n                nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n            }\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = (lViewData[PARENT]);\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = (currentView[PARENT]);\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = (lViewData[PARENT]);\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var template = (hostView[TVIEW].template);\n        try {\n            namespaceHTML();\n            template(getRenderFlags(hostView), component);\n            refreshView();\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, (directives));\n        return directives[index];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding$1(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    function getDirectiveInstance(instanceOrArray) {\n        // Directives with content queries store an array in directives[directiveIndex]\n        // with the instance as the first index\n        return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, (null));\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, (elementNode.data));\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = (context);\n        }\n        /** @internal */\n        /** @internal */\n        ViewRef.prototype._setComponentContext = /** @internal */\n        function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        /**\n           * Marks a view and all of its ancestors dirty.\n           *\n           * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n           * multiple `markForCheck` calls to into one change detection run.\n           *\n           * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n           * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n           * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n           *\n           * <!-- TODO: Add a link to a chapter on OnPush components -->\n           *\n           * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n           *\n           * ```typescript\n           * @Component({\n           *   selector: 'my-app',\n           *   template: `Number of ticks: {{numberOfTicks}}`\n           *   changeDetection: ChangeDetectionStrategy.OnPush,\n           * })\n           * class AppComponent {\n           *   numberOfTicks = 0;\n           *\n           *   constructor(private ref: ChangeDetectorRef) {\n           *     setInterval(() => {\n           *       this.numberOfTicks++;\n           *       // the following is required, otherwise the view will not be updated\n           *       this.ref.markForCheck();\n           *     }, 1000);\n           *   }\n           * }\n           * ```\n           */\n        ViewRef.prototype.markForCheck = /**\n           * Marks a view and all of its ancestors dirty.\n           *\n           * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n           * multiple `markForCheck` calls to into one change detection run.\n           *\n           * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n           * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n           * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n           *\n           * <!-- TODO: Add a link to a chapter on OnPush components -->\n           *\n           * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n           *\n           * ```typescript\n           * @Component({\n           *   selector: 'my-app',\n           *   template: `Number of ticks: {{numberOfTicks}}`\n           *   changeDetection: ChangeDetectionStrategy.OnPush,\n           * })\n           * class AppComponent {\n           *   numberOfTicks = 0;\n           *\n           *   constructor(private ref: ChangeDetectorRef) {\n           *     setInterval(() => {\n           *       this.numberOfTicks++;\n           *       // the following is required, otherwise the view will not be updated\n           *       this.ref.markForCheck();\n           *     }, 1000);\n           *   }\n           * }\n           * ```\n           */\n        function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        /**\n           * Detaches the view from the change detection tree.\n           *\n           * Detached views will not be checked during change detection runs until they are\n           * re-attached, even if they are dirty. `detach` can be used in combination with\n           * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n           * detection checks.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n           *\n           * ### Example\n           *\n           * The following example defines a component with a large list of readonly data.\n           * Imagine the data changes constantly, many times per second. For performance reasons,\n           * we want to check and update the list every five seconds. We can do that by detaching\n           * the component's change detector and doing a local check every five seconds.\n           *\n           * ```typescript\n           * class DataProvider {\n           *   // in a real application the returned data will be different every time\n           *   get data() {\n           *     return [1,2,3,4,5];\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'giant-list',\n           *   template: `\n           *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n           *   `,\n           * })\n           * class GiantList {\n           *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n           *     ref.detach();\n           *     setInterval(() => {\n           *       this.ref.detectChanges();\n           *     }, 5000);\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'app',\n           *   providers: [DataProvider],\n           *   template: `\n           *     <giant-list><giant-list>\n           *   `,\n           * })\n           * class App {\n           * }\n           * ```\n           */\n        ViewRef.prototype.detach = /**\n           * Detaches the view from the change detection tree.\n           *\n           * Detached views will not be checked during change detection runs until they are\n           * re-attached, even if they are dirty. `detach` can be used in combination with\n           * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n           * detection checks.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n           *\n           * ### Example\n           *\n           * The following example defines a component with a large list of readonly data.\n           * Imagine the data changes constantly, many times per second. For performance reasons,\n           * we want to check and update the list every five seconds. We can do that by detaching\n           * the component's change detector and doing a local check every five seconds.\n           *\n           * ```typescript\n           * class DataProvider {\n           *   // in a real application the returned data will be different every time\n           *   get data() {\n           *     return [1,2,3,4,5];\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'giant-list',\n           *   template: `\n           *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n           *   `,\n           * })\n           * class GiantList {\n           *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n           *     ref.detach();\n           *     setInterval(() => {\n           *       this.ref.detectChanges();\n           *     }, 5000);\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'app',\n           *   providers: [DataProvider],\n           *   template: `\n           *     <giant-list><giant-list>\n           *   `,\n           * })\n           * class App {\n           * }\n           * ```\n           */\n        function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        /**\n           * Re-attaches a view to the change detection tree.\n           *\n           * This can be used to re-attach views that were previously detached from the tree\n           * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           *\n           * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n           *\n           * The following example creates a component displaying `live` data. The component will detach\n           * its change detector from the main change detector tree when the component's live property\n           * is set to false.\n           *\n           * ```typescript\n           * class DataProvider {\n           *   data = 1;\n           *\n           *   constructor() {\n           *     setInterval(() => {\n           *       this.data = this.data * 2;\n           *     }, 500);\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'live-data',\n           *   inputs: ['live'],\n           *   template: 'Data: {{dataProvider.data}}'\n           * })\n           * class LiveData {\n           *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n           *\n           *   set live(value) {\n           *     if (value) {\n           *       this.ref.reattach();\n           *     } else {\n           *       this.ref.detach();\n           *     }\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'my-app',\n           *   providers: [DataProvider],\n           *   template: `\n           *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n           *     <live-data [live]=\"live\"><live-data>\n           *   `,\n           * })\n           * class AppComponent {\n           *   live = true;\n           * }\n           * ```\n           */\n        ViewRef.prototype.reattach = /**\n           * Re-attaches a view to the change detection tree.\n           *\n           * This can be used to re-attach views that were previously detached from the tree\n           * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           *\n           * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n           *\n           * The following example creates a component displaying `live` data. The component will detach\n           * its change detector from the main change detector tree when the component's live property\n           * is set to false.\n           *\n           * ```typescript\n           * class DataProvider {\n           *   data = 1;\n           *\n           *   constructor() {\n           *     setInterval(() => {\n           *       this.data = this.data * 2;\n           *     }, 500);\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'live-data',\n           *   inputs: ['live'],\n           *   template: 'Data: {{dataProvider.data}}'\n           * })\n           * class LiveData {\n           *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n           *\n           *   set live(value) {\n           *     if (value) {\n           *       this.ref.reattach();\n           *     } else {\n           *       this.ref.detach();\n           *     }\n           *   }\n           * }\n           *\n           * @Component({\n           *   selector: 'my-app',\n           *   providers: [DataProvider],\n           *   template: `\n           *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n           *     <live-data [live]=\"live\"><live-data>\n           *   `,\n           * })\n           * class AppComponent {\n           *   live = true;\n           * }\n           * ```\n           */\n        function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        /**\n           * Checks the view and its children.\n           *\n           * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n           * local change detection checks.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n           *\n           * ### Example\n           *\n           * The following example defines a component with a large list of readonly data.\n           * Imagine, the data changes constantly, many times per second. For performance reasons,\n           * we want to check and update the list every five seconds.\n           *\n           * We can do that by detaching the component's change detector and doing a local change detection\n           * check every five seconds.\n           *\n           * See {@link ChangeDetectorRef#detach detach} for more information.\n           */\n        ViewRef.prototype.detectChanges = /**\n           * Checks the view and its children.\n           *\n           * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n           * local change detection checks.\n           *\n           * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n           * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n           *\n           * ### Example\n           *\n           * The following example defines a component with a large list of readonly data.\n           * Imagine, the data changes constantly, many times per second. For performance reasons,\n           * we want to check and update the list every five seconds.\n           *\n           * We can do that by detaching the component's change detector and doing a local change detection\n           * check every five seconds.\n           *\n           * See {@link ChangeDetectorRef#detach detach} for more information.\n           */\n        function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        /**\n           * Checks the change detector and its children, and throws if any changes are detected.\n           *\n           * This is used in development mode to verify that running change detection doesn't\n           * introduce other changes.\n           */\n        ViewRef.prototype.checkNoChanges = /**\n           * Checks the change detector and its children, and throws if any changes are detected.\n           *\n           * This is used in development mode to verify that running change detection doesn't\n           * introduce other changes.\n           */\n        function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SELECT_ONLY */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 13 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = (node.view[TVIEW].directives);\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.tNode.type === 0 /* Container */ ? null : di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var /** A ref to a node's native element. */\n    ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = (getParentLNode(vcRefHost));\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, undefined, lContainer, null);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            viewRef.attachToViewContainerRef(this);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n            // instruction)\n            this._lContainerNode.native = undefined;\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context) {\n            var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n            return new EmbeddedViewRef$1(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = (componentDefinition.pipes);\n        var directiveTypes = (componentDefinition.directives);\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || (null),\n            hostBindings: componentDefinition.hostBindings || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs),\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () {\n                    return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                        .map(extractDirectiveDef);\n                } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * Creates an NgOnChangesFeature function for a component's features list.\n     *\n     * It accepts an optional map of minified input property names to original property names,\n     * if any input properties have a public alias.\n     *\n     * The NgOnChangesFeature function that is returned decorates a component with support for\n     * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature({name: 'name'})]\n     * });\n     * ```\n     *\n     * @param inputPropertyNames Map of input property names, if they are aliased\n     * @returns DirectiveDefFeature\n     */\n    function NgOnChangesFeature(inputPropertyNames) {\n        return function (definition) {\n            var inputs = definition.inputs;\n            var proto = definition.type.prototype;\n            var _loop_1 = function (pubKey) {\n                var minKey = inputs[pubKey];\n                var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n                var privateMinKey = PRIVATE_PREFIX + minKey;\n                var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n                var getter = originalProperty && originalProperty.get;\n                var setter = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minKey, {\n                    get: getter ||\n                        (setter ? undefined : function () { return this[privateMinKey]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                        var currentChange = simpleChanges[propertyName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[propertyName] =\n                                new SimpleChange(this[privateMinKey], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey] = value;\n                        }\n                        setter && setter.call(this, value);\n                    }\n                });\n            };\n            for (var pubKey in inputs) {\n                _loop_1(pubKey);\n            }\n            // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n            // so the call order is changes-init-check in creation mode. In subsequent\n            // change detection runs, only the check wrapper will be called.\n            if (definition.onInit != null) {\n                definition.onInit = onChangesWrapper(definition.onInit);\n            }\n            definition.doCheck = onChangesWrapper(definition.doCheck);\n        };\n        function onChangesWrapper(delegateHook) {\n            return function () {\n                var simpleChanges = this[PRIVATE_PREFIX];\n                if (simpleChanges != null) {\n                    this.ngOnChanges(simpleChanges);\n                    this[PRIVATE_PREFIX] = null;\n                }\n                delegateHook && delegateHook.apply(this);\n            };\n        }\n    }\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n    var EMPTY$1 = {};\n    /** Swaps the keys and values of an object. */\n    function invertObject(obj) {\n        if (obj == null)\n            return EMPTY$1;\n        var newObj = {};\n        for (var minifiedKey in obj) {\n            newObj[obj[minifiedKey]] = minifiedKey;\n        }\n        return newObj;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, (null));\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, (elementNode.data));\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, (hostNode));\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n                 * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n                 * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n                 * given component won't work (as these are always called at the level above a component).\n                 *\n                 * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n                 * component instance. So passing in the root view (1 level above the component) is sufficient.\n                 * We might  want to think about creating a fake component for the top level? Or overwrite\n                 * detectChanges with a function that calls tickRootContext? */\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef$1(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n            // mutate parent.\n            if (descend) {\n                this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = (query.containerValues);\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = (node.view[TVIEW].directives);\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 13 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = (predicate.selector);\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, (predicate.read), directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery$1(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        /**\n           * See\n           * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n           */\n        QueryList_.prototype.map = /**\n           * See\n           * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n           */\n        function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        /**\n           * See\n           * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n           */\n        QueryList_.prototype.filter = /**\n           * See\n           * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n           */\n        function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        /**\n           * See\n           * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n           */\n        QueryList_.prototype.find = /**\n           * See\n           * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n           */\n        function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        /**\n           * See\n           * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n           */\n        QueryList_.prototype.reduce = /**\n           * See\n           * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n           */\n        function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        /**\n           * See\n           * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n           */\n        QueryList_.prototype.forEach = /**\n           * See\n           * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n           */\n        function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        /**\n           * See\n           * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n           */\n        QueryList_.prototype.some = /**\n           * See\n           * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n           */\n        function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten$1(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_m = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_j = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_l = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = defaultKeyValueDiffers;\n    exports.Éµangular_packages_core_core_h = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_i = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_n = wtfEnabled;\n    exports.Éµangular_packages_core_core_p = createScope;\n    exports.Éµangular_packages_core_core_o = detectWTF;\n    exports.Éµangular_packages_core_core_s = endTimeRange;\n    exports.Éµangular_packages_core_core_q = leave;\n    exports.Éµangular_packages_core_core_r = startTimeRange;\n    exports.Éµangular_packages_core_core_w = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_z = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_ba = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_t = _def;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyle;\n    exports.Éµsn = elementStyleNamed;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}