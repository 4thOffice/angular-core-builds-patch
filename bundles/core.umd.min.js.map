{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","isContentQueryHost","tNode","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","lNodeIndex","directiveIndices","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","directivesAcrossView","directiveIndex","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectiveIndices","lNode","getLNodeFromViewData","discoverDirectives","directiveInstances","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","getLElementFromComponent","componentInstance","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentLNode","getHostElementNode","hostTNode","getParentOrContainerNode","parentTNode","getContainerNode","embeddedView","containerHostIndex","dynamicLContainerNode","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","tContainer","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","renderParent","getBeforeNodeForView","ngContainer","parentNative","appendProjectedNode","projectedLNode","projectedTNode","tProjectionNode","projectionView","lContainer","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","nodeInjector","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","lElement","allocStylingContext","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","containerNode","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","_getComponentHostLElementNode","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_appRef","_viewContainerRef","_tViewNode","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","currentTNode","isComponent","getOrCreateHostChangeDetector","hostComponentView","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","hostLNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_tContainerNode","_hostNode","_hostTNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","move","newIndex","shift","TemplateRef$1","getFactoryOf","typeAny","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewAndNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","Version","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","getRootView","Éµi18nApply","i18nApply","instructions","localParentTNode","localPreviousTNode","instruction","elementTNode","textRNode","lastNodeIndex","textTNode","removedNode","removedTNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.5+37.sha-21e566d\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var lNodeIndex = void 0;\n                var component = undefined;\n                var directiveIndices = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    lNodeIndex = findViaComponent(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    lNodeIndex = findViaDirective(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directiveIndices = discoverDirectiveIndices(lViewData, lNodeIndex);\n                    directives = directiveIndices ? discoverDirectives(lViewData, directiveIndices) : null;\n                }\n                else {\n                    lNodeIndex = findViaNativeElement(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, lNodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && directiveIndices && context.directives === undefined) {\n                    context.directiveIndices = directiveIndices;\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            lNodeIndex: lNodeIndex,\n            native: native,\n            component: undefined,\n            directiveIndices: undefined,\n            directives: undefined,\n        };\n    }\n    /**\n     * A utility function for retrieving the matching lElementNode\n     * from a given DOM element, component or directive.\n     */\n    function getLElementNode(target) {\n        var context = getContext(target);\n        return context ? getLNodeFromViewData(context.lViewData, context.lNodeIndex) : null;\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.lNodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. By first checking to see if the instance\n        // is actually present we can narrow down to which lElementNode\n        // contains the instance of the directive and then return the index\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var directiveIndex = directivesAcrossView ? directivesAcrossView.indexOf(directiveInstance) : -1;\n        if (directiveIndex >= 0) {\n            var tNode = lViewData[TVIEW].firstChild;\n            while (tNode) {\n                var directiveIndexStart = getDirectiveStartIndex(tNode);\n                var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n                if (directiveIndex >= directiveIndexStart && directiveIndex < directiveIndexEnd) {\n                    return tNode.index;\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a collection of directive index values that are used on the element\n     * (which is referenced by the lNodeIndex)\n     */\n    function discoverDirectiveIndices(lViewData, lNodeIndex) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n        var tNode = lViewData[TVIEW].data[lNodeIndex];\n        if (lNode && directivesAcrossView && directivesAcrossView.length) {\n            // this check for tNode is to determine if the calue is a LEmementNode instance\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            var directiveIndices = [];\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                // special case since the instance of the component (if it exists)\n                // is stored in the directives array.\n                if (i > directiveIndexStart ||\n                    !isComponentInstance(directivesAcrossView[directiveIndexStart])) {\n                    directiveIndices.push(i);\n                }\n            }\n            return directiveIndices.length ? directiveIndices : null;\n        }\n        return null;\n    }\n    function discoverDirectives(lViewData, directiveIndices) {\n        var directives = [];\n        var directiveInstances = lViewData[DIRECTIVES];\n        if (directiveInstances) {\n            for (var i = 0; i < directiveIndices.length; i++) {\n                var directiveIndex = directiveIndices[i];\n                var directive = directiveInstances[directiveIndex];\n                directives.push(directive);\n            }\n        }\n        return directives;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            readElementValue(currentView[tNode.parent.index]);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            readElementValue(currentView[PARENT][hostTNode.index]) :\n            null;\n    }\n    /**\n     * Gets the parent LNode if it's not a view. If it's a view, it will instead return the view's\n     * parent container node.\n     */\n    function getParentOrContainerNode(tNode, currentView) {\n        var parentTNode = tNode.parent || currentView[HOST_NODE];\n        return parentTNode && parentTNode.type === 2 /* View */ ?\n            getContainerNode(parentTNode, currentView) :\n            getParentLNode(tNode, currentView);\n    }\n    function getContainerNode(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ?\n                embeddedView[PARENT][containerHostIndex].dynamicLContainerNode :\n                null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return getParentLNode(tNode, embeddedView[PARENT]);\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getContainerNode(tViewNode, view);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = readElementValue(currentView[tNode.index]);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, lView, index, containerIndex) {\n        var state = container.data;\n        var views = state[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex, detached) {\n        var views = container.data[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, tContainer, removeIndex) {\n        var view = container.data[VIEWS][removeIndex];\n        destroyLView(view);\n        detachView(container, removeIndex, !!tContainer.detached);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getContainerNode(tNode, state).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getContainerNode(viewTNode, view);\n        if (container == null || container.data[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var container = getContainerNode(parentTNode, currentView);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, container));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, container) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? readElementValue(view[viewTNode.child.index]).native :\n                container.native;\n        }\n        else {\n            return container.native;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedLNode The node to process\n     * @param parentNode The last parent element to be processed\n     * @param tProjectionNode\n     * @param currentView Current LView\n     * @param projectionView Projection view\n     */\n    function appendProjectedNode(projectedLNode, projectedTNode, tProjectionNode, currentView, projectionView) {\n        appendChild(projectedLNode.native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(projectedLNode.native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = projectedLNode.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, projectedLNode.native);\n            }\n        }\n        else if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                var ngContainerChild = readElementValue(projectionView[ngContainerChildTNode.index]);\n                appendProjectedNode(ngContainerChild, ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (projectedLNode.dynamicLContainerNode) {\n            projectedLNode.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(projectedLNode.dynamicLContainerNode.native, tProjectionNode, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            readElementValue(viewData[previousOrParentTNode.index]);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, nodeInjector, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: nodeInjector,\n            data: state,\n            dynamicLContainerNode: null\n        };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, null, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // TODO: temporary, remove this when removing nodeInjector (bringing in fns to hello world)\n        if (index !== -1 && !(viewData[FLAGS] & 64 /* IsRoot */)) {\n            var parentLNode = type === 2 /* View */ ?\n                getContainerNode(tNode, state) :\n                getParentOrContainerNode(tNode, viewData);\n            parentLNode && (node.nodeInjector = parentLNode.nodeInjector);\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode, tNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var node = getPreviousOrParentNode();\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(node, previousOrParentTNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n                var cleanupFn = renderer.listen(node.native, eventName, wrappedListener);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = getTNode(index);\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getPreviousOrParentNode();\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        var isComponent$$1 = directiveDef.template;\n        if (isComponent$$1) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef, hostNode);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def, hostNode) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = getPreviousOrParentTNode();\n        initChangeDetectorIfExisting(hostNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(currentView, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            null // renderParent, set after node creation\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var lContainer = createLContainer(viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(tNode, viewData);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[previousOrParentTNode.index];\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, tContainerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewToRender = scanForView(container, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewToRender, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(lNode, nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lViewData = readPatchedLViewData(component);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lViewData = readPatchedLViewData(component);\n        markViewDirty(lViewData);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = getLElementFromComponent(component);\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at index 0 in directives array\n        var component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n        if (componentDef.hostBindings)\n            queueHostBindingForCheck(0, componentDef.hostVars);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        setHostBindings(rootView[TVIEW].hostBindings);\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        // Directive starting index 0, directive count 1 -> directive flags: 1\n        queueLifecycleHooks(1, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this.context = context;\n            this._view = _view;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode(), getPreviousOrParentTNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node, tNode) {\n        // TODO: remove LNode arg when nodeInjector refactor is done\n        var nodeInjector = node.nodeInjector;\n        var parentLNode = getParentOrContainerNode(tNode, node.view);\n        var parentInjector = parentLNode && parentLNode.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            tNode: tNode,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentTNode = getPreviousOrParentTNode();\n        if (isComponent(currentTNode)) {\n            return di.changeDetectorRef = new ViewRef(di.node.data, context);\n        }\n        else if (currentTNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(_getViewData());\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentView) {\n        var hostComponentView = findComponentView(currentView);\n        var hostNode = getHostElementNode(hostComponentView);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ? existingRef : new ViewRef(hostComponentView, hostComponentView[CONTEXT]);\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.node.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var tNode = injector.tNode;\n                var nodeFlags = tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function (_super) {\n        __extends(ElementRef$$1, _super);\n        function ElementRef$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ElementRef$$1;\n    }(ElementRef));\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var hostLNode = getPreviousOrParentNode();\n            var hostTNode = getPreviousOrParentTNode();\n            ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n            var hostView = hostLNode.view;\n            var lContainer = createLContainer(hostView, true);\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, hostView, hostLNode.nodeInjector, comment, lContainer);\n            lContainer[RENDER_PARENT] = getRenderParent(hostTNode, hostView);\n            appendChild(comment, hostTNode, hostView);\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            hostLNode.dynamicLContainerNode = lContainerNode;\n            addToViewTree(hostView, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, hostTNode.dynamicContainerNode, hostLNode, hostTNode);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function (_super) {\n        __extends(ViewContainerRef$$1, _super);\n        function ViewContainerRef$$1(_lContainerNode, _tContainerNode, _hostNode, _hostTNode) {\n            var _this = _super.call(this) || this;\n            _this._lContainerNode = _lContainerNode;\n            _this._tContainerNode = _tContainerNode;\n            _this._hostNode = _hostNode;\n            _this._hostTNode = _hostTNode;\n            _this._viewRefs = [];\n            return _this;\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode, this._hostTNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode, this._hostTNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostTNode, this._hostNode.view).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, this._tContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lView = viewRef._view;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lView, adjustedIdx, this._tContainerNode.parent.index);\n            var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainerNode.data[VIEWS], this._lContainerNode);\n            addRemoveViewFromContainer(lView, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, this._tContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx, !!this._tContainerNode.detached);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }(ViewContainerRef));\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            var hostNode = getPreviousOrParentNode();\n            var hostTNode = getPreviousOrParentTNode();\n            ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function (_super) {\n        __extends(TemplateRef$$1, _super);\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            var _this = _super.call(this) || this;\n            _this._declarationParentView = _declarationParentView;\n            _this.elementRef = elementRef;\n            _this._tView = _tView;\n            _this._renderer = _renderer;\n            _this._queries = _queries;\n            return _this;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, tContainerNode, index) {\n            var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, lView, index, tContainerNode.parent.index);\n            }\n            renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(lView, context);\n            viewRef._tViewNode = lView[HOST_NODE];\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }(TemplateRef));\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode, tNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode, tNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    // TODO: Remove LNode arg when we remove dynamicContainerNode\n    function appendI18nNode(node, tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(node.native, tNode, viewData);\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(node.dynamicLContainerNode.native, tNode, viewData);\n            return tNode.dynamicContainerNode;\n        }\n        return tNode;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementIndex = instruction & 536870911 /* IndexMask */;\n                    var element$$1 = load(elementIndex);\n                    var elementTNode = getTNode(elementIndex);\n                    localPreviousTNode =\n                        appendI18nNode(element$$1, elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    var node = load(nodeIndex);\n                    localPreviousTNode =\n                        appendI18nNode(node, getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1 - HEADER_OFFSET;\n                    var textTNode = createNodeAtIndex(lastNodeIndex, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(loadElement(lastNodeIndex), textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedTNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(removedTNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedTNode.dynamicContainerNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].directives;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, tNode, currentView, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, tNode, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        // TODO: remove this lookup when nodeInjector is removed from LNode\n        var currentNode = readElementValue(currentView[tNode.index]);\n        var nodeInjector = getOrCreateNodeInjectorForNode(currentNode, tNode);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, tNode, currentView, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, tNode, currentView, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.5+37.sha-21e566d');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (getLElementNode(directive) === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}