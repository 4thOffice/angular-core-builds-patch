{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","canAccessViewProviders","node","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","startInjectables","startDirectives","directiveCount","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","directive","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","getCleanup","getTViewCleanup","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hackSquashDeclaration","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","hackImplementationOfElementStyleProp","valueToAdd","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","createViewRef","componentIndex","hostComponentView","getComponent","Node","loadContext","getComponentAtNodeIndex","getViewComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","rootViewInjector","createChainedInjector","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","notImplemented","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","event","createEvent","initEvent","dispatchEvent","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0+105.sha-d847051\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var injectableIdx = locateDirectiveOrProvider(tNode, injectorView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, injectorView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = getLView();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        return tNode.flags & 4096 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var cleanup = lView[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(lView[cleanup[i + 1]]);\n                    var listener = lView[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lView[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lView[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(lView, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(lView);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(lView).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(lView, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(lView, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, outputs[i]);\n            var subscription = lView[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(lView, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        getCleanup(lView).push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lView[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getLView()[TVIEW]);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode && tNode.type === 3 /* Element */) {\n                setNgReflectProperties(lView, element, propName, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, propName, value) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(propName);\n        var debugValue = normalizeDebugBindingValue(value);\n        isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) :\n            element.setAttribute(attrName, debugValue);\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getLView()[TVIEW];\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive); // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getLView()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        hostStylingHackMap.set(directive, {\n            classDeclarations: hackSquashDeclaration(classDeclarations),\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, previousOrParentTNode.index);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we push `null` to keep indices in sync\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        // check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic)\n        if (expando.length < 2 || expando[expando.length - 2] !== def.hostBindings) {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._lView)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved for.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadContext(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lView = Array.isArray(target) ? target : loadContext(target).lView;\n        var rootLView = getRootView$1(lView);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lView);\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getContext(directive).native;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0+105.sha-d847051');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            var sanitizer = null;\n            if (ngModule) {\n                rendererFactory = ngModule.injector.get(RendererFactory2);\n                sanitizer = ngModule.injector.get(Sanitizer, null);\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    function notImplemented() {\n        throw new Error('Missing proper ivy implementation.');\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                // TODO: add real implementation;\n                // https://angular-team.atlassian.net/browse/FW-719\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                // TODO move to discoverable utils\n                var context = loadContext(this.nativeNode, false);\n                if (!context)\n                    return [];\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var providerTokens = [];\n                var nodeFlags = tNode.flags;\n                var startIndex = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n                var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n                var endIndex = startIndex + directiveCount;\n                for (var i = startIndex; i < endIndex; i++) {\n                    var value = tView.data[i];\n                    if (isDirectiveDefHack(value)) {\n                        // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                        // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                        // is that for Components/Directives we store the def instead the type. The correct behavior\n                        // is that we should always be storing injectable type in this location.\n                        value = value.type;\n                    }\n                    providerTokens.push(value);\n                }\n                return providerTokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            // This is a hack implementation. The correct implementation would bypass the DOM and `TNode`\n            // information to invoke the listeners directly.\n            // https://angular-team.atlassian.net/browse/FW-719\n            var event = document.createEvent('MouseEvent');\n            event.initEvent(eventName, true, true);\n            this.nativeElement.dispatchEvent(event);\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bb = getLView;\n    exports.ɵangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}