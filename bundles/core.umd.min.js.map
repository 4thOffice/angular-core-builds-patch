{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLViewData","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","createViewRef","componentIndex","hostComponentView","getComponent","loadContext","ctx","getHostComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","RAW_ICU_REGEXP","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","SecurityContext","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","Sanitizer","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵEC","elementContainerStart","ɵeC","elementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","VERSION","full","major","minor","patch","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","ɵangular_packages_core_core_p","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_g","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_r","ɵangular_packages_core_core_v","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_z","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵi18nIcuReplaceVars","i18nIcuReplaceVars","replacements","varMatch","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","shift","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,mBACvF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,OAAQ,kBAAmBJ,GAC3GA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,SAAWR,EAAOS,KAAKT,EAAOS,KAAKC,WAHxF,CAIEC,KAAM,SAAWT,EAAQO,EAAKC,GAAa,aAkBzC,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAGpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,IAEjBI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,IACnBK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,KACtB,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;OAUX,SAASK,EAAuBC,GAC5B,IAAK,IAAI/B,KAAO+B,EACZ,GAAIA,EAAyB/B,KAAS8B,EAClC,OAAO9B,EAGf,MAAMgC,MAAM,qDAQhB,SAASC,EAAelC,EAAQmC,GAC5B,IAAK,IAAIlC,KAAOkC,EACRA,EAAOrD,eAAemB,KAASD,EAAOlB,eAAemB,KACrDD,EAAOC,GAAOkC,EAAOlC;;;;;;;OAYjC,IAAImC,EAAmBL,GAAyBM,eAAgBN,IAC5DO,EAAmBP,GAAyBQ,eAAgBR,IAC5DS,EAAoBT,GAAyBU,gBAAiBV,IAC9DW,EAAkBX,GAAyBY,cAAeZ,IAC1Da,EAAcb,GAAyBc,UAAWd,IAClDe,EAAgBf,GAAyBgB,YAAahB,IACtDiB,EAAcjB,GAAyBkB,UAAWlB,IAMlDmB,EAAgBnB,GAAyBoB,kBAAmBpB;;;;;;;;AAyBhE,SAASqB,EAAiBC,GACtB,OACIC,WAAYD,EAAKC,YAAc,KAAM3F,QAAS0F,EAAK1F,QAAS2D,WAAOiC,GAuB3E,SAASC,EAAeC,GACpB,OACI9F,QAAS8F,EAAQ9F,QAAS+F,UAAWD,EAAQC,cAAiBC,QAASF,EAAQE,aAQvF,SAASC,EAAiBC,GACtB,OAAOA,EAAK/E,eAAe0D,GAAqBqB,EAAKrB,GAAqB,KAO9E,SAASsB,EAAeD,GACpB,OAAOA,EAAK/E,eAAe4D,GAAmBmB,EAAKnB,GAAmB;;;;;;;OAkD1E,IAAIqB,EAAgC,WAChC,SAASA,EAAeC,EAAOP,GAC3BpF,KAAK2F,MAAQA,EAEb3F,KAAK4F,eAAiB,iBAElB5F,KAAKoE,qBADOc,IAAZE,EACuBL,GACnBE,WAAYG,EAAQH,YAAc,OAClC3F,QAAS8F,EAAQ9F,eAIE4F,EAI/B,OADAQ,EAAe7E,UAAUgF,SAAW,WAAc,MAAO,kBAAoB7F,KAAK2F,OAC3ED,EAhBwB,GA0B/BI,EAAc,kBACdC,EAAa,iBACbC,EAAgB;;;;;;;OAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAEL,IADA,IAIIC,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgByG,EAEhB,OADAF,EAAShF,KAAKC,MAAM+E,EAAU/C,GAAUxD,MAAO2G,IACxC3G,KAEX,IAAI6G,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAO9E,WAAM,EAAQgC,GAAUwD,GAAML,KAGvBK,EAAIvG,eAAeqF,GACjCkB,EAAIlB,GACJ1F,OAAO+B,eAAe6E,EAAKlB,GAAe7C,WAAa6C,IAC/CxC,KAAKuD,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiB5F,UAAYT,OAAOU,OAAOsF,EAAYvF,YAE3D4F,EAAiB5F,UAAU+E,eAAiBM,EAC5CO,EAAiBQ,cAAgBR,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASe,IAEZ,IADA,IAAIP,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAEzB,GAAIT,EAAO,CACP,IAAIgB,EAAShB,EAAM3E,WAAM,EAAQgC,EAASmD,IAC1C,IAAK,IAAIS,KAAYD,EACjBnH,KAAKoH,GAAYD,EAAOC,KAKxC,SAASC,EAAmBnB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASmB,IAEL,IADA,IAIIZ,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgBsH,EAEhB,OADAf,EAAS/E,MAAMxB,KAAM2G,GACd3G,KAEX,IAAI6G,EAAqB,KAAMH,EAAKY,GAAuBR,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KAE7F,OADAY,EAAeC,WAAaX,EACrBU,EACP,SAASA,EAAeP,EAAKS,EAAWC,GAQpC,IALA,IAAIC,EAAaX,EAAIvG,eAAesF,GAChCiB,EAAIjB,GACJ3F,OAAO+B,eAAe6E,EAAKjB,GAAc9C,WAAa8C,GAGnD4B,EAAWrG,QAAUoG,GACxBC,EAAWrE,KAAK,MAGpB,OADCqE,EAAWD,GAASC,EAAWD,QAAcpE,KAAKuD,GAC5CG,GAQf,OALIZ,IACAkB,EAAsBzG,UAAYT,OAAOU,OAAOsF,EAAYvF,YAEhEyG,EAAsBzG,UAAU+E,eAAiBM,EACjDoB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB1B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS0B,IAEL,IADA,IAIInB,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgB6H,EAEhB,OADAtB,EAAS/E,MAAMxB,KAAM2G,GACd3G,KAEX,IAAI8H,EAAoB,KAAMpB,EAAKmB,GAAsBf,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KAa3F,OAZA,SAASoB,EAAcpG,EAAQuE,GAC3B,IAAItF,EAAce,EAAOf,YAGrBoH,EAAOpH,EAAYH,eAAeuF,GAClCpF,EAAYoF,GACZ5F,OAAO+B,eAAevB,EAAaoF,GAAiB/C,WAAa+C,GACrEgC,EAAK9B,GAAQ8B,EAAKvH,eAAeyF,IAAS8B,EAAK9B,OAC/C8B,EAAK9B,GAAM+B,QAAQH,GACfzB,GACAA,EAAqB7E,WAAM,EAAQgC,GAAU7B,EAAQuE,GAAOS,KASxE,OALIP,IACAyB,EAAqBhH,UAAYT,OAAOU,OAAOsF,EAAYvF,YAE/DgH,EAAqBhH,UAAU+E,eAAiBM,EAChD2B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OA6CX,IAwEWK,EAaAC,EAnEPC,EAlBAC,EAA+B,IAAI3C,EAAe,6BAOlD4C,EAAYjB,EAAmB,YAAa,SAAUkB,GAAiB,OAAUA,cAAeA,KAuBhGC,EAAkBZ,EAAkB,kBAAmB,SAAUa,EAAUC,GAE3E,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAOC,aAAa,GAASH,IAd/FN,EACA,SAASA,OAsBTU,EAAelB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAOC,aAAa,GAAQH,IAC9FN,GAOCW,EAAenB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAMC,aAAa,GAAQH,IAC9FN,GAOCY,EAAYpB,EAAkB,YAAa,SAAUa,EAAUC,GAC/D,OAAQ3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAMC,aAAa,GAAQH,IAC7FN;;;;;;;;AASQF,EAYR3I,EAAQ2I,0BAA4B3I,EAAQ2I,6BANnBA,EAAgC,OAAI,GAAK,SAKjEA,EAAwBA,EAAiC,QAAI,GAAK,WAE3DC,EA+BR5I,EAAQ0J,wBAA0B1J,EAAQ0J,2BA1BpBd,EAAgC,UAAI,GAAK,YAK9DA,EAAqBA,EAA8B,QAAI,GAAK,UAK5DA,EAAqBA,EAAkC,YAAI,GAAK,cAKhEA,EAAqBA,EAA+B,SAAI,GAAK,WAM7DA,EAAqBA,EAA8B,QAAI,GAAK,UAI5DA,EAAqBA,EAAgC,UAAI,GAAK,YA2FlE,IAoBWe,EApBPC,EAAmC,IAAIC,IAM3C,SAASC,EAAyBC,GAC9B,OAAOA,EAAUC,aAAeD,EAAUE,WAAaF,EAAUE,UAAUlI,OAE/E,SAASmI,EAAeC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASC;;;;;;;;;;;;;;;AAUlDT,EA+BR3J,EAAQ2J,oBAAsB3J,EAAQ2J,uBAtBnBA,EAA4B,SAAI,GAAK,WASvDA,EAAkBA,EAA0B,OAAI,GAAK,SAIrDA,EAAkBA,EAAwB,KAAI,GAAK,OAQnDA,EAAkBA,EAA6B,UAAI,GAAK;;;;;;;;AAU5D,IAAIU,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATC,MAAqD,oBAAtBC,mBAC/CD,gBAAgBC,mBAAqBD,KAIrCE,EAH6B,oBAAX5K,QAA0BA,QAGtBuK,GAAYE,EAClCI,EAAUC,QAAQC,QAAQ,GAC1BC,EAAkB,KACtB,SAASC,IACL,IAAKD,EAAiB,CAClB,IAAIE,EAAWN,EAAgB,OAC/B,GAAIM,GAAYA,EAASxH,SACrBsH,EAAkBE,EAASxH,cAK3B,IADA,IAAIyH,EAAOpK,OAAOqK,oBAAoBC,IAAI7J,WACjCM,EAAI,EAAGA,EAAIqJ,EAAKlJ,SAAUH,EAAG,CAClC,IAAIS,EAAM4I,EAAKrJ,GACH,YAARS,GAA6B,SAARA,GACrB8I,IAAI7J,UAAUe,KAAS8I,IAAI7J,UAAmB,UAC9CwJ,EAAkBzI,IAKlC,OAAOyI,EAEX,SAASM,EAAkBC,GACH,oBAATC,KAEPX,EAAQY,KAAK,WAAcF,GAAMA,EAAGpJ,MAAM,KAAM,QAGhDqJ,KAAKE,QAAQJ,kBAAkB,oBAAqBC,GAI5D,SAASI,GAAeC,EAAG9K,GACvB,OAAO8K,IAAM9K,GAAkB,iBAAN8K,GAA+B,iBAAN9K,GAAkB+K,MAAMD,IAAMC,MAAM/K,GAE1F,SAASgL,GAAUC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiB7K,MACjB,MAAO,IAAM6K,EAAMC,IAAIF,IAAWG,KAAK,MAAQ,IAEnD,GAAa,MAATF,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMG,eACN,MAAO,GAAKH,EAAMG,eAEtB,GAAIH,EAAMlF,KACN,MAAO,GAAKkF,EAAMlF,KAEtB,IAAIsF,EAAMJ,EAAMvF,WAChB,GAAW,MAAP2F,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIE,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBD,EAAMA,EAAIG,UAAU,EAAGF;;;;;;;;AAgFxD,IAAIG,MACAC,MAKAC,GAAmB,EAgBvB,SAASC,GAAgBC,GACrB,IAAIxG,EAAOwG,EAAoBxG,KAC3ByG,EAAgBzG,EAAK3E,UACrBqL,KACAC,GACA3G,KAAMA,EACN4G,kBAAmB,KACnBC,OAAQL,EAAoBK,OAC5BC,KAAMN,EAAoBM,KAC1BC,SAAUP,EAAoBO,UAAY,EAC1CjN,QAAS0M,EAAoB1M,QAC7BkN,SAAUR,EAAoBQ,UAAY,KAC1CC,aAAcT,EAAoBS,cAAgB,KAClDC,eAAgBV,EAAoBU,gBAAkB,KACtDC,sBAAuBX,EAAoBW,uBAAyB,KACpEC,WAAYZ,EAAoBY,YAAc,KAC9CV,eAAgBA,EAChBW,OAAQ,KACRC,QAAS,KACTC,SAAUf,EAAoBe,UAAY,KAC1CC,OAAQf,EAAcgB,UAAY,KAClCC,QAASjB,EAAckB,WAAa,KACpCC,iBAAkBnB,EAAcoB,oBAAsB,KACtDC,oBAAqBrB,EAAcsB,uBAAyB,KAC5DC,cAAevB,EAAcwB,iBAAmB,KAChDC,iBAAkBzB,EAAc0B,oBAAsB,KACtDC,UAAW3B,EAAc4B,aAAe,KACxCC,OAAQ9B,EAAoB+B,kBAAoBxO,EAAQ2I,wBAAwB8F,OAChFC,cAAe,KACfC,SAAU,KACVC,UAAWnC,EAAoBmC,UAC/BC,UAAWpC,EAAoBoC,WAAa,KAC5CC,SAAUrC,EAAoBqC,UAAY,KAC1C3F,KAAMsD,EAAoBtD,SAG1B4F,cAAetC,EAAoBsC,eAAiB/O,EAAQ2J,kBAAkBqF,SAC9EC,GAAI,IACJC,OAAQzC,EAAoByC,QAAU5C,GACtC6C,EAAG,MAkBP,OAhBAvC,EAAIuC,EApIR,SAASC,EAAc/D,GACnB,MAAO,IAAO/E,SAAU+E;;;;;;;OAmIhB+D,CAAc,WAClB,IAAIC,EAAiB5C,EAAoB6C,WACrCC,EAAU9C,EAAoBqC,SAC9BU,EAAY/C,EAAoBgD,MACpC7C,EAAIqC,IAAM1C,KACVK,EAAIU,OAASoC,GAAajD,EAAoBa,OAAQX,GAClDC,EAAIW,QAAUmC,GAAajD,EAAoBc,SAC/CgC,GAAWA,EAAQI,QAAQ,SAAUtE,GAAM,OAAOA,EAAGuB,KACzDA,EAAI8B,cAAgBW,EAChB,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3EvD,IAAI8D,KACT,KACJhD,EAAI+B,SAAWa,EACX,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAW1D,IAAI+D,KACrF,OAEDjD,EAEX,SAASgD,GAAoB3J,GAKzB,OAJU6J,GAAgB7J,IAAS8J,GAAgB9J,GAMvD,SAAS4J,GAAe5J,GAKpB,OAJU+J,GAAW/J,GAMzB,SAASgK,GAAerD,GASpB,OAPI3G,KAAM2G,EAAI3G,KACViK,UAAWtD,EAAIsD,WAAa5D,GAC5B6D,aAAcvD,EAAIuD,cAAgB7D,GAClCvG,QAAS6G,EAAI7G,SAAWuG,GACxBtM,QAAS4M,EAAI5M,SAAWsM,GACxB8D,wBAAyB,MAkDjC,SAASV,GAAaW,EAAKC,GACvB,GAAW,MAAPD,EACA,OAAOhE,GACX,IAAIkE,KACJ,IAAK,IAAIC,KAAeH,EACpB,GAAIA,EAAInP,eAAesP,GAAc,CACjC,IAAIC,EAAaJ,EAAIG,GACjBE,EAAeD,EACfzP,MAAM2P,QAAQF,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUI,GAAgBF,GAIvC,OAAOD,EAcX,SAASK,GAAWC,GAChB,IAAIlE,KACJ,OACIW,OAAQoC,GAAamB,EAAevD,OAAQX,GAC5CA,eAAgBA,EAChBY,QAASmC,GAAamB,EAAetD,UAiB7C,IAgDIuD,GAhDAC,GAAkBvE,GAetB,SAASwE,GAAWC,GAChB,OACItK,KAAMsK,EAAQtK,KACd5G,QAASkR,EAAQlR,QACjBmR,MAAuB,IAAjBD,EAAQC,KACd7C,UAAW4C,EAAQhL,KAAK3E,UAAUgN,aAAe,MAQzD,SAASwB,GAAgB7J,GACrB,OAAOA,EAAKzB,IAAqB,KAErC,SAASuL,GAAgB9J,GACrB,OAAOA,EAAKvB,IAAqB,KAErC,SAASsL,GAAW/J,GAChB,OAAOA,EAAKjB,IAAgB,KAEhC,SAASmM,GAAelL,GACpB,OAAOA,EAAKf,IAAkB;;;;;;;;;;;;;;;AAuBlC,SAASkM,KACL,IAAIC,EAAW3G,EAAQrK,GACvB,IAAKgR,IAAaA,EAASC,gBACvB,MAAM,IAAIjN,MAAM,+VAKpB,OAAOgN,EAASC;;;;;;;QApBpB,SAAWR,GACPA,EAAyBA,EAAgC,MAAI,GAAK,QAClEA,EAAyBA,EAAoC,UAAI,GAAK,YAF1E,CAGGA,KAA6BA,QAiChC,IA0DIS,GA1DAC,GAAS1J,EAAmB,SAAU,SAAU+D,GAAS,OAAUA,MAAOA,KAO1E4F,GAAW3J,EAAmB,YAO9B4J,GAAO5J,EAAmB,QAO1B6J,GAAW7J,EAAmB,YAO9B8J,GAAO9J,EAAmB,QAe1B+J,QAAmBlM,EACvB,SAASmM,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAeX,SAASC,GAAwBC,GAC7B,IAAIC,EAAWZ,GAEf,OADAA,GAAwBW,EACjBC,EAEX,SAASC,GAAmBvG,EAAOwG,GAE/B,QADc,IAAVA,IAAoBA,EAAQ,QACP1M,IAArBkM,GACA,MAAM,IAAIxN,MAAM,qDAEf,OAAyB,OAArBwN,GACES,GAAmBzG,OAAOlG,EAAW0M,GAGrCR,GAAiBU,IAAI1G,EAAe,EAARwG,EAA2B,UAAO1M,EAAW0M,GAGxF,SAASG,GAAO3G,EAAOwG,GAEnB,YADc,IAAVA,IAAoBA,EAAQ,IACxBd,IAAyBa,IAAoBvG,EAAOwG,GAShE,SAASC,GAAmBzG,EAAO4G,EAAeJ,GAC9C,IAAIK,EAAgB1M,EAAiB6F,GACrC,GAAI6G,GAA6C,QAA5BA,EAAchN,WAC/B,YAA+BC,IAAxB+M,EAAchP,MAAsBgP,EAAchP,MAAQgP,EAAc3S,UAC3E2S,EAAchP,MAEtB,GAAY,EAAR2O,EACA,OAAO,KACX,QAAsB1M,IAAlB8M,EACA,OAAOA,EACX,MAAM,IAAIpO,MAAM,wBAA0BuH,GAAUC,GAAS,KAEjE,SAAS8G,GAAWC,GAEhB,IADA,IAAIxL,KACKxF,EAAI,EAAGA,EAAIgR,EAAM7Q,OAAQH,IAAK,CACnC,IAAIiR,EAAMD,EAAMhR,GAChB,GAAIZ,MAAM2P,QAAQkC,GAAM,CACpB,GAAmB,IAAfA,EAAI9Q,OACJ,MAAM,IAAIsC,MAAM,wCAIpB,IAFA,IAAI4B,OAAON,EACP0M,EAAQ,EACHS,EAAI,EAAGA,EAAID,EAAI9Q,OAAQ+Q,IAAK,CACjC,IAAIrK,EAAOoK,EAAIC,GACXrK,aAAgBgJ,IAAoC,aAAxBhJ,EAAKpC,eACjCgM,GAAS,EAEJ5J,aAAgBkJ,IAAoC,aAAxBlJ,EAAKpC,eACtCgM,GAAS,EAEJ5J,aAAgBiJ,IAAgC,SAAxBjJ,EAAKpC,eAClCgM,GAAS,EAGTpM,EADKwC,aAAgB+I,GACd/I,EAAKoD,MAGLpD,EAGfrB,EAAKrD,KAAKyO,GAAOvM,EAAMoM,SAGvBjL,EAAKrD,KAAKyO,GAAOK,IAGzB,OAAOzL;;;;;;;;;;;;;;;AA+DX,IAAI2L,GAAwB,gBAUxBC,GAAgB,GAIhBC,GAAQ,EACRC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAO,EACPC,GAAY,EACZC,GAAgB,EAChBC,GAAU,EACVC,GAAU,EACVC,GAAW,GACXC,GAAW,GACXC,GAAY,GACZC,GAAO,GACPC,GAAkB,GAClBC,GAAkB,GAClBC,GAAmB;;;;;;;;;;;;;;;AASvB,SAASC,GAAaxI,EAAG9K,GACrB,IAAIuT,EAAsBC,GAAmB1I,GACzC2I,EAAsBD,GAAmBxT,GAC7C,OAAIuT,GAAuBE,EAyE/B,SAASC,EAAkB5I,EAAG9K,EAAG2T,GAG7B,IAFA,IAAIC,EAAY9I,EAAEX,OACd0J,EAAY7T,EAAEmK,SACL,CACT,IAAI2J,EAAQF,EAAU/Q,OAClBkR,EAAQF,EAAUhR,OACtB,GAAIiR,EAAM/Q,MAAQgR,EAAMhR,KACpB,OAAO,EACX,GAAI+Q,EAAM/Q,MAAQgR,EAAMhR,KACpB,OAAO,EACX,IAAK4Q,EAAWG,EAAMhR,MAAOiR,EAAMjR,OAC/B,OAAO,GAnFJ4Q,CAAkB5I,EAAG9K,EAAGsT,MAK1BC,IAFWzI,GAAmB,iBAANA,GAA+B,mBAANA,GAEZ2I,IAD1BzT,GAAmB,iBAANA,GAA+B,mBAANA,IAK3C6K,GAAeC,EAAG9K,GAwBrC,IAAIgU,GAA8B,WAC9B,SAASA,EAAalR,GAClBjD,KAAKoU,QAAUnR,EAWnB,OARAkR,EAAaE,KAAO,SAAUpR,GAAS,OAAO,IAAIkR,EAAalR,IAK/DkR,EAAaG,OAAS,SAAUrR,GAAS,OAAOkR,EAAaI,UAAUtR,GAASA,EAAMmR,QAAUnR,GAEhGkR,EAAaI,UAAY,SAAUtR,GAAS,OAAOA,aAAiBkR,GAC7DA,EAbsB,GAoB7BK,GAA8B,WAC9B,SAASA,EAAaC,EAAeC,EAAcC,GAC/C3U,KAAKyU,cAAgBA,EACrBzU,KAAK0U,aAAeA,EACpB1U,KAAK2U,YAAcA,EAMvB,OADAH,EAAa3T,UAAU+T,cAAgB,WAAc,OAAO5U,KAAK2U,aAC1DH,EAVsB,GAYjC,SAASb,GAAmB/D,GACxB,QAAKiF,GAAWjF,KAETrP,MAAM2P,QAAQN,MACdA,aAAelF,MACdJ,MAAuBsF,GA8BnC,SAASiF,GAAWjS,GAChB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA;;;;;;;OAe5D,IAgHIkS,GAhHAC,GAAe,EACfC,GAAQ,EAGRC,GAAS,EACTC,GAAgB,EAShBC,GAAQ,EACRC,GAAkB,EAClBC,GAAgB,EAChBC,IAAsB,EAoHtBC,IArBAT,GACA,SAASA,GAITxV,EAIAkW,EAAgBC,GACZzV,KAAKV,QAAUA,EAKfU,KAAK0V,WAAY,EACjB1V,KAAK2V,oBAAsBH,EAC3BxV,KAAK4V,WAAaH,IAIiB5U,UA0B3C,SAASgV,GAAY5S,GACjB,MAAoB,mBAATA,EACAA,EAAMiD,MAAQjD,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACJ,GAAKA,EA2BhB,SAAS6S,GAAapO,EAAOqO,GAEzB,OAAOA,EAAIrO,EAAQ6K,IAgBvB,SAASyD,GAAiB/S,GACtB,KAAO1C,MAAM2P,QAAQjN,IACjBA,EAAQA,EAAM4P,IAElB,OAAO5P,EAMX,SAASgT,GAAiBvO,EAAOqO,GAC7B,OAAOC,GAAiBD,EAAIrO,EAAQ6K,KAExC,SAAS2D,GAAiBC,EAAOC,GAC7B,OAAOJ,GAAiBI,EAASD,EAAMzO,QAE3C,SAAS2O,GAAS3O,EAAO4O,GACrB,OAAOA,EAAK9D,IAAO9J,KAAKhB,EAAQ6K,IAEpC,SAASgE,GAAwBC,EAAWJ,GAExC,IAAIK,EAAYL,EAASI,GACzB,OAAOC,EAAUnV,QAAUiR,GAAgBkE,EAAYA,EAAU5D,IAErE,SAAS6D,GAAmBP,GACxB,OAAuD,IAAjC,MAAdA,EAAMvE,OAElB,SAAS+E,GAAYR,GACjB,OAAkD,OAA5B,KAAdA,EAAMvE,OAElB,SAASgF,GAAezK,GACpB,OAAwB,OAAjBA,EAAIK,SAEf,SAASqK,GAAa5T,GAElB,OAAO1C,MAAM2P,QAAQjN,IAAyC,iBAAxBA,EAAM8R,IAEhD,SAAS+B,GAAWnV,GAChB,OAA6C,IAArB,GAAhBA,EAAO8Q,KAQnB,SAASsE,GAAYpV,GAGjB,IADA,IAAIqV,EAAYzW,MAAM2P,QAAQvO,GAAUA,EAASsV,GAAqBtV,GAC/DqV,KAAkC,GAAnBA,EAAUvE,MAC5BuE,EAAYA,EAAUtE,IAE1B,OAAOsE,EAEX,SAASE,GAAeC,GAIpB,OAHeJ,GAAYI,GAGXlE,IAMpB,SAASmE,GAAgBzV,GACrB,OAAOA,EAAO2Q,IAElB,SAAS2E,GAAqBtV,GAC1B,IAAIsB,EAAQmU,GAAgBzV,GAC5B,OAAIsB,EACO1C,MAAM2P,QAAQjN,GAASA,EAAQA,EAAM+T,UAEzC,KAEX,SAASK,GAAkBC,GACvB,OAAOA,IAAmBhC,GAE9B,SAASiC,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EAAWrE,IACxBoE,IAEJ,OAAOC,EA+BX,IAwdIC,GAKAC,GAeAC,GA6BAC,GAuEAC,GAiBAC,GAQAC,GAKAC,GA4BAC,GAWAC,GArpBAC,IAAqD,oBAA1BC,uBAAyCA,uBACpEC,YACF5R,KAAKmD,GAOP,SAAS0O,GAAcC,EAAO7C,GAC1B,IAAK,IAAI5U,EAAI,EAAGA,EAAIyX,EAAMtX,OAAQH,IAC9B4U,EAAIzS,KAAKsV,EAAMzX;;;;;;;OA4BvB,SAAS0X,GAAWlX,GAChB,IAAImX,EAAU1B,GAAgBzV,GAC9B,GAAImX,GAGA,GAAIvY,MAAM2P,QAAQ4I,GAAU,CACxB,IAAI9B,EAAY8B,EACZtC,OAAY,EACZlN,OAAYpE,EACZ2J,OAAa3J,EACjB,GAAI6T,GAAoBpX,GAAS,CAE7B,IAAkB,IADlB6U,EAAYwC,GAAiBhC,EAAWrV,IAEpC,MAAM,IAAIiC,MAAM,2DAEpB0F,EAAY3H,OAEX,GAqHjB,SAASsX,EAAoBC,GACzB,OAAOA,GAAYA,EAAStY,aAAesY,EAAStY,YAAYsD,eAtH/C+U,CAAoBtX,GAAS,CAElC,IAAkB,IADlB6U,EAgLhB,SAAS2C,EAAiBnC,EAAWoC,GAOjC,IADA,IAAIjD,EAAQa,EAAUxE,IAAO6G,WACtBlD,GAAO,CAGV,IAFA,IAAImD,EAAsBC,GAAuBpD,GAC7CqD,EAAoBC,GAAqBtD,EAAOmD,GAC3CnY,EAAImY,EAAqBnY,EAAIqY,EAAmBrY,IACrD,GAAI6V,EAAU7V,KAAOiY,EACjB,OAAOjD,EAAMzO,MAGrByO,EAAQuD,GAAoBvD,GAEhC,OAAQ,EAjMgBgD,CAAiBnC,EAAWrV,IAEpC,MAAM,IAAIiC,MAAM,2DAEpBiL,EAAa8K,GAAmBnD,EAAWQ,GAAW,QAItD,IAAkB,IADlBR,EAAYoD,GAAqB5C,EAAWrV,IAExC,OAAO,KAOf,IACIkY,EAAczC,GADd0C,EAAS9D,GAAiBgB,EAAUR,KAEpCuD,EAAWF,IAAgBtZ,MAAM2P,QAAQ2J,GACzCA,EACAG,GAAehD,EAAWR,EAAWsD,GAOzC,GALIxQ,QAAmCpE,IAAtB6U,EAAQzQ,YACrByQ,EAAQzQ,UAAYA,EACpB2Q,GAAgBF,EAAQzQ,UAAWyQ,IAGnClL,QAAqC3J,IAAvB6U,EAAQlL,WAA0B,CAChDkL,EAAQlL,WAAaA,EACrB,IAAK,IAAI1N,EAAI,EAAGA,EAAI0N,EAAWvN,OAAQH,IACnC8Y,GAAgBpL,EAAW1N,GAAI4Y,GAGvCE,GAAgBF,EAAQD,OAAQC,GAChCjB,EAAUiB,QASd,IALA,IAAIG,EAAWvY,EAIXwY,EAAWD,EACRC,EAAWA,EAASC,YAAY,CACnC,IAAIC,EAAgBjD,GAAgB+C,GACpC,GAAIE,EAAe,CAUf,GATIrD,OAAY,IAEZA,EADAzW,MAAM2P,QAAQmK,GACFA,EAGAA,EAAcrD,WAK1B,OAAO,KAEX,IAAItP,EAAQkS,GAAqB5C,EAAWkD,GAC5C,GAAIxS,GAAS,EAAG,CACZ,IAAIoS,EAEJG,GAFIH,EAAS9D,GAAiBgB,EAAUtP,IACpCqS,EAAUC,GAAehD,EAAWtP,EAAOoS,IAE/ChB,EAAUiB,EACV,QAKhB,OAAOjB,GAAW,KAKtB,SAASkB,GAAehD,EAAWR,EAAWsD,GAC1C,OACI9C,UAAWA,EACXR,UAAWA,EAAWsD,OAAQA,EAC9BxQ,eAAWpE,EACX2J,gBAAY3J,EACZoV,eAAWpV,GASnB,SAASqV,GAA2BC,GAChC,IACIlE,EADAU,EAAYI,GAAgBoD,GAEhC,GAAIja,MAAM2P,QAAQ8G,GAAY,CAC1B,IAAIR,EAAYwC,GAAiBhC,EAAWwD,IAExCT,EAAUC,GAAehD,EAAWR,GADxCF,EAAOC,GAAwBC,EAAWQ,IACcnE,MAChDvJ,UAAYkR,EACpBP,GAAgBO,EAAmBT,GACnCE,GAAgBF,EAAQD,OAAQC,OAE/B,CACD,IAAIA,EACJzD,EAAOC,IADHwD,EAAU/C,GACyBR,UAAWuD,EAAQ/C,WAE9D,OAAOV,EAMX,SAAS2D,GAAgBtY,EAAQ+G,GAC7B/G,EAAO2Q,IAAyB5J,EAEpC,SAASqQ,GAAoBG,GACzB,OAAOA,GAAYA,EAAStY,aAAesY,EAAStY,YAAYoD,eAQpE,SAAS4V,GAAqB5C,EAAWrV,GAErC,IADA,IAAIwU,EAAQa,EAAUxE,IAAO6G,WACtBlD,GAAO,CAEV,GADaD,GAAiBC,EAAOa,KACtBrV,EACX,OAAOwU,EAAMzO,MAEjByO,EAAQuD,GAAoBvD,GAEhC,OAAQ,EAKZ,SAASuD,GAAoBvD,GACzB,OAAIA,EAAMsE,MACCtE,EAAMsE,MAERtE,EAAMnT,KACJmT,EAAMnT,KAERmT,EAAMuE,QACJvE,EAAMuE,OAAO1X,MAEjB,KAKX,SAASgW,GAAiBhC,EAAWwD,GACjC,IAAIG,EAAmB3D,EAAUxE,IAAOoI,WACxC,GAAID,EACA,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAiBrZ,OAAQH,IAAK,CAC9C,IAAI0Z,EAAwBF,EAAiBxZ,GAE7C,GADoBoV,GAAwBsE,EAAuB7D,GACjD/D,MAAauH,EAC3B,OAAOK,OAOf,GAFwBtE,GAAwBhE,GAAeyE,GACzB/D,MAChBuH,EAGlB,OAAOjI,GAGf,OAAQ,EAmCZ,SAASoH,GAAmBnD,EAAWQ,EAAW8D,GAC9C,IAAI3E,EAAQa,EAAUxE,IAAO9J,KAAK8N,GAC9BuE,EAAsBxB,GAAuBpD,GAC7C6E,EAAoBvB,GAAqBtD,EAAO4E,GAGpD,OAFKD,GAAmC,KAAd3E,EAAMvE,OAC5BmJ,IACG/D,EAAUiE,MAAMF,EAAqBC,GAoBhD,SAASzB,GAAuBpD,GAI5B,OAAOA,EAAMvE,OAAS,GAE1B,SAAS6H,GAAqBtD,EAAO+E,GAIjC,IAAIC,EAAsB,KAAdhF,EAAMvE,MAClB,OAAOuJ,EAASD,EAAaC,GAAU;;;;;;;;;;;;;;;AAwD3C,SAASC,GAAe1T,EAAOsF,EAAQE,EAASkL,GAGxCpL,IACCoL,EAAMiD,YAAcjD,EAAMiD,eAAiB/X,KAAKoE,EAAOsF,GAExDE,KACCkL,EAAMiD,YAAcjD,EAAMiD,eAAiB/X,KAAKoE,EAAOwF,IACvDkL,EAAMkD,aAAelD,EAAMkD,gBAAkBhY,KAAKoE,EAAOwF,IAOlE,SAASqO,GAAoB3J,EAAOwG,GAChC,GAAIA,EAAMoD,kBAON,IANA,IAAIC,EAAQ7J,GAAS,GAEjB8J,EAAMD,GADU,KAAR7J,GAKHzQ,EAAIsa,EAAOta,EAAIua,EAAKva,IAAK,CAC9B,IAAIgL,EAAMiM,EAAM1P,KAAKvH,GACrBwa,GAAkBxP,EAAKiM,EAAOjX,GAC9Bya,GAAezP,EAAKiM,EAAOjX,GAC3B0a,GAAkB1P,EAAKiM,EAAOjX,IAK1C,SAASwa,GAAkBxP,EAAKiM,EAAOjX,GAC/BgL,EAAIiB,mBACHgL,EAAM0D,eAAiB1D,EAAM0D,kBAAoBxY,KAAKnC,EAAGgL,EAAIiB,kBAE9DjB,EAAImB,uBACH8K,EAAM0D,eAAiB1D,EAAM0D,kBAAoBxY,KAAKnC,EAAGgL,EAAImB,sBAC7D8K,EAAM2D,oBAAsB3D,EAAM2D,uBAAyBzY,KAAKnC,EAAGgL,EAAImB,sBAIhF,SAASsO,GAAezP,EAAKiM,EAAOjX,GAC5BgL,EAAIqB,gBACH4K,EAAM4D,YAAc5D,EAAM4D,eAAiB1Y,KAAKnC,EAAGgL,EAAIqB,eAExDrB,EAAIuB,oBACH0K,EAAM4D,YAAc5D,EAAM4D,eAAiB1Y,KAAKnC,EAAGgL,EAAIuB,mBACvD0K,EAAM6D,iBAAmB7D,EAAM6D,oBAAsB3Y,KAAKnC,EAAGgL,EAAIuB,mBAI1E,SAASmO,GAAkB1P,EAAKiM,EAAOjX,GACd,MAAjBgL,EAAIyB,YACHwK,EAAM8D,eAAiB9D,EAAM8D,kBAAoB5Y,KAAKnC,EAAGgL,EAAIyB,WAQtE,SAASuO,GAAiBC,EAAahE,EAAOE,GACjB,GAArB8D,EAAY3J,MACZ4J,GAAaD,EAAahE,EAAMiD,UAAWjD,EAAMkD,WAAYhD,GAC7D8D,EAAY3J,MAAU,IAQ9B,SAAS4J,GAAa3T,EAAM4T,EAAUhB,EAAYhD,GAC9C,IAAIiE,EAAcjE,EAAegE,EAAWhB,EACxCiB,GACAC,GAAU9T,EAAM6T,GAUxB,SAASC,GAAUJ,EAAarG,GAC5B,IAAK,IAAI5U,EAAI,EAAGA,EAAI4U,EAAIzU,OAAQH,GAAK,EACjC4U,EAAI5U,EAAI,GAAGI,KAAK6a,EAAYrG,EAAI5U;;;;;;;OA6BxC,SAASsb,KAEL,OAAO3E,GAGX,SAAS4E,KAEL,OAAO3E,GAKX,SAAS4E,KACL,OAAOpE,IAAYA,GAASnF,IAyDhC,SAASwJ,KACL3E,IAAkB,EAmBtB,SAAS4E,KACL5E,IAAkB,EAStB,SAAS6E,KACL,OAAOvE,GAEX,SAASwE,KACL,OAAOxE,GAWX,SAASyE,GAAYC,GACjBC,GAAkBD,EAItB,SAASE,KAEL,OAAOjF,GAEX,SAASkF,GAAyBjH,GAC9B+B,GAAwB/B,EAE5B,SAASkH,GAAoBlH,EAAOG,GAChC4B,GAAwB/B,EACxBoC,GAAWjC,EAQf,SAASgH,KAEL,OAAOnF,GAEX,SAASoF,GAAYta,GACjBkV,GAAWlV,EAGf,SAASua,KAEL,OAAOpF,GAGX,SAASqF,KAEL,OAAOpF,GAEX,SAASqF,GAAkBC,GACvBtF,GAAiBsF,EAuBrB,SAASC,KAEL,OAAOtF,GAcX,SAASuF,KAEL,OAAOtF,GAQX,IAAI2E,GAAkB,KAKtB,SAASY,GAAWxH,GAEhB,OAAOA,EAAKtD,MAAasD,EAAKtD,QAElC,SAAS+K,GAAgBzH,GACrB,OAAOA,EAAK9D,IAAOwL,UAAY1H,EAAK9D,IAAOwL,YAO/C,IAAIC,IAAqB,EACzB,SAASC,KAEL,OAAOD,GAEX,SAASE,GAAsBC,GAC3BH,GAAqBG,EAGzB,IAAI5C,IAAoB,EACxB,SAAS6C,KACL,OAAO7C,GAEX,SAAS8C,GAAqBrb,GAC1BuY,GAAoBvY,EAOxB,IAAIsb,IAAoB,EAExB,SAASC,KACL,OAAOD,GAEX,SAASE,GAAexb,GACpBsb,GAAmBtb,EAcvB,SAASyb,GAAUC,EAASC,GACxB,IAAIC,EAAUtG,GAWd,OAVAH,GAAQuG,GAAWA,EAAQnM,IAC3B8F,GAAeqG,GAAuD,IAA1B,EAAjBA,EAAQlM,KACnC+I,GAAoBmD,GAAWvG,GAAMoD,kBACrC+C,GAAmBI,GAAWvG,GAAM0G,kBACpChH,GAAW6G,GAAWA,EAAQxL,IAC9B+E,GAAwB0G,EACxBzG,IAAW,EACXI,GAAW2E,GAAkByB,EAC7BE,IAAYA,EAAQjM,IAAWyF,IAC/BA,GAAiBsG,GAAWA,EAAQ/L,IAC7BiM,EAEX,SAASE,GAAgBC,GAGrB,YAFc,IAAVA,IAAoBA,EAAQ,IAChC9B,GAGJ,SAAS+B,EAAYC,EAAc9C,GAC/B,KAAO8C,EAAe,GAElB9C,EAAcA,EAAY5I,IAC1B0L,IAEJ,OAAO9C,EATW6C,CAAYD,EAAO9B,KACdjK,IA2B3B,SAASkM,GAAUR,EAASS,GACnBA,IACInB,IACD5B,GAAa9D,GAAUH,GAAM4D,UAAW5D,GAAM6D,eAAgB3D,IAGlEC,GAAS9F,MAAU,GAEvB8F,GAAS9F,KAAU,GACnB8F,GAASxF,IAAiBqF,GAAM0G,kBAChCJ,GAAUC,EAAS;;;;;;;;AAyDvB,IAAIU,IAAuB,EAC3B,SAASC,GAAwBC,GAC7B,IAAIC,EAAWH,GAEf,OADAA,GAAuBE,EAChBC,EAOX,IACIC,GAAaC,IAEbC,GAAkB,EA8CtB,SAASC,GAA+BzJ,EAAOC,GAC3C,IAAIyJ,EAAwBC,GAAiB3J,EAAOC,GACpD,IAA+B,IAA3ByJ,EACA,OAAOA,EAEX,IAAIzH,EAAQhC,EAAS5D,IACjB4F,EAAMoD,oBACNrF,EAAM4J,cAAgB3J,EAAS9U,OAC/B0e,GAAY5H,EAAM1P,KAAMyN,GACxB6J,GAAY5J,EAAU,MACtB4J,GAAY5H,EAAM6H,UAAW,OAGjC,IAAIC,EAAYC,GAA0BhK,EAAOC,GAC7CgK,EAAc7I,GAAuB2I,GACrCrI,EAAaJ,GAAsByI,EAAW9J,GAC9C2J,EAAgB5J,EAAM4J,cAG1B,GAAI1I,GAAkB6I,GAIlB,IAHA,IAAIG,EAAaxI,EAAWrF,IAAO9J,KAG1BvH,EAAI,EAAGA,EAAI,EAAGA,IACnBiV,EAAS2J,EAAgB5e,GAAK0W,EAAWuI,EAAcjf,GAAKkf,EAAWD,EAAcjf,GAI7F,OADAiV,EAAS2J,EAAgB3K,IAAmB8K,EACrCH,EAEX,SAASC,GAAYjK,EAAKuK,GACtBvK,EAAIzS,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGgd,GAErC,SAASR,GAAiB3J,EAAOC,GAC7B,OAA6B,IAAzBD,EAAM4J,eAGL5J,EAAMuE,QAAUvE,EAAMuE,OAAOqF,gBAAkB5J,EAAM4J,eAGH,MAAnD3J,EAASD,EAAM4J,cAAgB3K,KACvB,EAGDe,EAAM4J,cASrB,SAASI,GAA0BhK,EAAOG,GACtC,GAAIH,EAAMuE,SAA0C,IAAhCvE,EAAMuE,OAAOqF,cAC7B,OAAO5J,EAAMuE,OAAOqF,cAOxB,IAFA,IAAInB,EAAYtI,EAAKxD,IACjB8E,EAAa,EACVgH,IAA0C,IAA7BA,EAAUmB,eAE1BnB,GADAtI,EAAOA,EAAK9C,KACKV,IACjB8E,IAKJ,OAAOgH,EACHA,EAAUmB,cAAiBnI,GAAc,IAJpBgH,GAAgC,IAAnBA,EAAUpZ,KAC5C,MACA,IAIC,EAST,SAAS+a,GAAmBR,EAAezJ,EAAMlL,IAvHjD,SAASoV,EAAST,EAAe3H,EAAO5S,GAEpC,IAAIgJ,EAAKhJ,EAAKX,GAGJ,MAAN2J,IACAA,EAAKhJ,EAAKX,GAAiB8a,MAI/B,IAAIc,EAAWjS,EAAKiR,GAIhBiB,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EACLI,EAAQzI,EAAM1P,KAHE,IAAX+X,EAKLE,EAAMC,EAAMC,EAAMd,EAAgB,IAAMW,EAASG,EAAMd,EAAgB,IAAMW,EACxEE,EAAMC,EAAMd,EAAgB,IAAMW,EAASG,EAAMd,EAAgB,IAAMW,EAG5EC,EAAMC,EAAMC,EAAMd,EAAgB,IAAMW,EAASG,EAAMd,EAAgB,IAAMW,EACxEE,EAAMC,EAAMd,EAAgB,IAAMW,EAASG,EAAMd,IAAkBW,EA6F5EF,CAAST,EAAezJ,EAAK9D,IAAQpH,GAiCzC,SAAS0V,GAAoB3K,EAAO4K,GAGhC,IAAIC,EAAQ7K,EAAM6K,MAClB,GAAIA,EACA,IAAK,IAAI7f,EAAI,EAAGA,EAAI6f,EAAM1f,OAAQH,GAAQ,EAAG,CACzC,IAAI8f,EAAWD,EAAM7f,GACrB,GAAiB,IAAb8f,EACA,MACJ,GAAIA,GAAYF,EACZ,OAAOC,EAAM7f,EAAI,IAiBjC,SAAS+f,GAAsB/K,EAAOa,EAAW5L,EAAOwG,EAAOI,QAC7C,IAAVJ,IAAoBA,EAAQ,GAChC,IAAIuP,EA+KR,SAASC,EAAsBhW,GAE3B,IAAIiW,EAAUjW,EAAMvG,GACpB,MAA0B,iBAAZwc,EAAuBA,EAAU5B,GAAa4B,EAlL5CD,CAAsBhW,GAGtC,GAAyB,mBAAd+V,EAA0B,CACjC,IAAIG,EAA4BnE,KAC5BoE,EAAe1D,KACnBR,GAAoBlH,EAAOa,GAC3B,IACI,IAAI/T,EAAQke,IACZ,GAAa,MAATle,GAA2B,EAAR2O,EAInB,OAAO3O,EAHP,MAAM,IAAIW,MAAM,mBAAqBiS,GAAYzK,IAMzD,QACIiS,GAAoBiE,EAA2BC,SAGlD,GAAwB,iBAAbJ,EAAuB,CAInC,IAAIK,EAAgB,KAChBzB,EAAgBD,GAAiB3J,EAAOa,GACxCM,EAAiBhC,GAgBrB,IAdY,EAAR1D,IAGK6P,GAAmB7P,EAFxB0F,GAAoC,IAAnByI,EAAuBI,GAA0BhK,EAAOa,GACrEA,EAAU+I,EAAgB3K,MAK1BoM,EAAgBxK,EAAUxE,IAC1BuN,EAAgBxI,GAAuBD,GACvCN,EAAYS,GAAsBH,EAAgBN,IALlD+I,GAAiB,IAUC,IAAnBA,GAAsB,CACzBzI,EAAiBN,EAAU+I,EAAgB3K,IAE3C,IAAIgD,EAAQpB,EAAUxE,IACtB,GAAIkP,GAAcP,EAAWpB,EAAe3H,EAAM1P,MAAO,CAIrD,IAAIwQ,EAAWyI,GAAuB5B,EAAe/I,EAAW5L,EAAOoW,GACvE,GAAItI,IAAa0I,GACb,OAAO1I,EAGXuI,GAAmB7P,EAAO0F,IAC1BoK,GAAcP,EAAWpB,EAAe/I,IAGxCwK,EAAgBpJ,EAChB2H,EAAgBxI,GAAuBD,GACvCN,EAAYS,GAAsBH,EAAgBN,IAMlD+I,GAAiB,GAQ7B,GAJY,EAARnO,QAA8C1M,IAAlB8M,IAE5BA,EAAgB,MAE4B,IAAnC,EAARJ,GAA8C,CAC/C,IAAIiQ,EAAiB7K,EAAU9D,IAC/B,OAAI2O,EACOA,EAAe/P,IAAI1G,EAAO4G,EAAuB,EAARJ,GAGzCC,GAAmBzG,EAAO4G,EAAuB,EAARJ,GAGxD,GAAY,EAARA,EACA,OAAOI,EAGP,MAAM,IAAIpO,MAAM,4BAA8BiS,GAAYzK,GAAS,KAG3E,IAAIwW,MACJ,SAASD,GAAuB5B,EAAe+B,EAAc1W,EAAOoW,GAChE,IAAIO,EAAeD,EAAatP,IAC5B2D,EAAQ4L,EAAarZ,KAAKqX,EAAgB5K,IAC1C6M,EAAY7L,EAAMvE,MAClBqQ,EAAsB9L,EAAM+L,gBAC5BC,EAAeJ,EAAarZ,KAE5B0Z,GAAyB,GAUR,MAAjBZ,GAAyB7K,GAAYR,IAAUkJ,IAC9B,MAAjBmC,GAAyBA,GAAiBO,IAChB,MAArBA,EAAaM,MAA2C,IAA3BN,EAAaM,KAAK7c,SACpD4c,GAAyB,GAO7B,IALA,IAAIE,EAAyC,MAAtBL,EACnBM,EAAkBP,GAAa,GAG/BQ,EAA6B,KAAZR,EACZ7gB,EAFWihB,EAAyBE,EAAmBA,GADpCL,GAAuB,IAGvB9gB,EAAIohB,EAAkBC,EAAgBrhB,IAAK,CACnE,IAAIshB,EAAqBN,EAAahhB,GACtC,GAAIA,EAAIohB,GAAmBnX,IAAUqX,GACjCthB,GAAKohB,GAAmBE,EAAmBjd,OAAS4F,EACpD,OAAOsX,GAAkBP,EAAcL,EAAc3gB,EAAGgV,GAGhE,OAAOyL,GASX,SAASc,GAAkB7B,EAAO8B,EAAOjb,EAAOyO,GAC5C,IAAIlT,EAAQ0f,EAAMjb,GAClB,GAv3CJ,SAASkb,EAAUhT,GAEf,OAAc,MAAPA,GAA6B,iBAAPA,GAAmBxP,OAAOyiB,eAAejT,IAAQ2F;;;;;;;OAq3C1EqN,CAAU3f,GAAQ,CAClB,IAAI3D,EAAU2D,EACd,GAAI3D,EAAQoW,UACR,MAAM,IAAI9R,MAAM,oBAAsBiS,GAAYgL,EAAMnZ,KAE5D,IAAIob,EAA+BxD,GAAwBhgB,EAAQqW,qBACnErW,EAAQoW,WAAY,EACpB,IAAIqN,OAA+B,EAC/BzjB,EAAQsW,aACRmN,EAA+BvR,GAAwBlS,EAAQsW,aAEnE,IAAI0L,EAA4BnE,KAC5BoE,EAAe1D,KACnBR,GAAoBlH,EAAOwM,GAC3B,IACI1f,EAAQ0f,EAAMjb,GAASpI,EAAQA,QAAQ,KAAMuhB,EAAO8B,EAAOxM,GAE/D,QACQ7W,EAAQsW,YACRpE,GAAwBuR,GAC5BzD,GAAwBwD,GACxBxjB,EAAQoW,WAAY,EACpB2H,GAAoBiE,EAA2BC,IAGvD,OAAOte,EAkBX,SAASye,GAAcP,EAAWpB,EAAe+B,GAI7C,IAEInB,EAAiB,GAAZQ,EACLP,EAAiB,GAAZO,EAeT,UAjBqB,IAAZA,EAQGR,EAAMC,EAAKkB,EAAa/B,EAAgB,GAAK+B,EAAa/B,EAAgB,GAC7Ea,EAAKkB,EAAa/B,EAAgB,GAAK+B,EAAa/B,EAAgB,GAGjEY,EAAMC,EAAKkB,EAAa/B,EAAgB,GAAK+B,EAAa/B,EAAgB,GAC7Ea,EAAKkB,EAAa/B,EAAgB,GAAK+B,EAAa/B,IAdlD,GAAKoB,GAqBpB,SAASM,GAAmB7P,EAAO0F,GAC/B,QAAiB,EAAR1F,GACI,EAARA,GACqB,MAAjB0F,GAMb,IAAI0L,GAA8B,WAC9B,SAASA,EAAaC,EAAQC,GAC1BljB,KAAKijB,OAASA,EACdjjB,KAAKkjB,UAAYA,EACjBljB,KAAKmjB,eAAiBvD,GAA+BqD,EAAQC,GAMjE,OAJAF,EAAaniB,UAAUiR,IAAM,SAAU1G,GAEnC,OADAiS,GAAoBrd,KAAKijB,OAAQjjB,KAAKkjB,WAC/BhC,GAAsBlhB,KAAKijB,OAAQjjB,KAAKkjB,UAAW9X,IAEvD4X,EAVsB,GAYjC,SAASI,GAAa5d,GAClB,IAAI6d,EAAU7d,EACV2G,EAAMkD,GAAgBgU,IAAY/T,GAAgB+T,IAClD9T,GAAW8T,IAAY9d,EAAiB8d,IAAY5d,EAAe4d,GACvE,OAAKlX,QAAuBjH,IAAhBiH,EAAI7M,QAGT6M,EAAI7M,QAFA,KAIf,SAASgkB,GAAoB9d,GACzB,IACIlG,EAAU8jB,GADFhjB,OAAOyiB,eAAerd,EAAK3E,WAAWD,aAElD,OAAgB,OAAZtB,EACOA,EAOA,SAAU2B,GAAK,OAAO,IAAIA;;;;;;;OAWzC,SAASsiB,KAEL,IADA,IAAI5c,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF;;;;;;;OAY7B,IAAI4c,GAAkB9f,GAAyB8f,gBAAiB9f,IAahE,SAAS+f,GAAWC,GAGhB,OAFAA,EAAaF,gBAAkBC,GAC/BC,EAAa7d,SAAW,WAAc,OAAOsF,GAAUnL,SAChD0jB,EAeX,SAASC,GAAkBne,GACvB,IAAIoF,EAAKpF,EACT,MAAkB,mBAAPoF,GAAqBA,EAAGnK,eAAe+iB,KAC9C5Y,EAAG4Y,kBAAoBC,GAChB7Y,IAGApF;;;;;;;OAWf,IAAIoe,GAAS,WACTC,GAAsB,IAAIzjB,OAC1B0jB,GAAqBD,GASrBE,GAAa,IAAIre,EAAe,YAChCse,GAA8B,WAC9B,SAASA,KAaT,OAXAA,EAAanjB,UAAUiR,IAAM,SAAU1G,EAAO4G,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgB6R,IAC5C7R,IAAkB6R,GAKlB,MAAM,IAAIjgB,MAAM,sCAAwCuH,GAAUC,GAAS,KAE/E,OAAO4G,GAEJgS,EAdsB,GAgC7BC,GAA0B,WAC1B,SAASA,KA2BT,OAjBAA,EAASnjB,OAAS,SAAUsE,EAASsV,GACjC,OAAIna,MAAM2P,QAAQ9K,GACP,IAAI8e,GAAe9e,EAASsV,GAG5B,IAAIwJ,GAAe9e,EAAQC,UAAWD,EAAQsV,OAAQtV,EAAQc,MAAQ,OAGrF+d,EAASH,mBAAqBD,GAC9BI,EAASE,KAAO,IAAIH,GAEpBC,EAAS7f,gBAAkBW,GACvBE,WAAY,MACZ3F,QAAS,WAAc,OAAOyS,GAAOgS,OAGzCE,EAASnf,kBAAoB,WAAc,OAAOsf,MAC3CH,EA5BkB,GAkCzBG,GADoCb,GAEpCc,GAAQ,SAAUphB,GAClB,OAAOA,GAEPqhB,MACAC,GAAWF,GACXG,GAAoB,WACpB,OAAOjkB,MAAMM,UAAUoa,MAAM1Z,KAAKF,YAElCojB,GAAY/gB,GAAyBghB,QAASC,OAAQC,SAAUlhB,IAGhEmhB,GAAgBZ,GAASE,KACzBW,GAAW,OACXC,GAAc,IACdb,GAAgC,WAChC,SAASA,EAAe7e,EAAWqV,EAAQ5W,QACxB,IAAX4W,IAAqBA,EAASmK,SACnB,IAAX/gB,IAAqBA,EAAS,MAClC9D,KAAK0a,OAASA,EACd1a,KAAK8D,OAASA,EACd,IAAIkhB,EAAUhlB,KAAKilB,SAAW,IAAIva,IAClCsa,EAAQE,IAAIjB,IAAY7Y,MAAO6Y,GAAUrZ,GAAIyZ,GAAOc,KAAMb,GAASrhB,MAAOjD,KAAMolB,QAAQ,IACxFJ,EAAQE,IAAInB,IAAc3Y,MAAO2Y,GAAYnZ,GAAIyZ,GAAOc,KAAMb,GAASrhB,MAAOjD,KAAMolB,QAAQ,IAyDpG,SAASC,EAA4BL,EAASM,GAC1C,GAAIA,EAEA,IADAA,EAAW3B,GAAkB2B,cACL/kB,MAEpB,IAAK,IAAIY,EAAI,EAAGA,EAAImkB,EAAShkB,OAAQH,IACjCkkB,EAA4BL,EAASM,EAASnkB,QAGjD,CAAA,GAAwB,mBAAbmkB,EAGZ,MAAMC,GAAY,+BAAgCD,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASZ,QAiC1D,MAAMa,GAAY,sBAAuBD,GA/BzC,IAAIla,EAAQuY,GAAkB2B,EAASZ,SACnCc,EA/ChB,SAASC,EAAgBH,GACrB,IAAIH,EA8IR,SAASO,EAAYJ,GACjB,IAAIH,EAAOb,GACPqB,EAAeL,EAASH,KAC5B,GAAIQ,GAAgBA,EAAarkB,OAAQ,CACrC6jB,KACA,IAAK,IAAIhkB,EAAI,EAAGA,EAAIwkB,EAAarkB,OAAQH,IAAK,CAC1C,IAAIiE,EAAU,EAEd,IADIgG,EAAQuY,GAAkBgC,EAAaxkB,eACtBZ,MACjB,IAAK,IAAI8R,EAAI,EAAGuT,EAAcxa,EAAOiH,EAAIuT,EAAYtkB,OAAQ+Q,IAAK,CAC9D,IAAI7K,EAAaoe,EAAYvT,GACzB7K,aAAsBwJ,IAAYxJ,GAAcwJ,GAChD5L,GAAoB,EAEfoC,aAAsB0J,IAAY1J,GAAc0J,GACrD9L,IAAoB,EAEfoC,aAAsByJ,IAAQzJ,GAAcyJ,GACjD7L,IAAoB,EAGpBgG,EADK5D,aAAsBuJ,GACnBvJ,EAAW4D,MAGXuY,GAAkBnc,GAItC2d,EAAK7hB,MAAO8H,MAAOA,EAAOhG,QAASA,UAGtC,GAAIkgB,EAASO,YAAa,CAC3B,IAAIza,EACJ+Z,IAAU/Z,MADNA,EAAQuY,GAAkB2B,EAASO,aACfzgB,QAAS,SAEhC,KAAKugB,GAAkBlB,MAAaa,GAErC,MAAMC,GAAY,kBAAqBD,GAE3C,OAAOH,EArLIO,CAAYJ,GACnB1a,EAAKyZ,GACLphB,EAAQqhB,GACRc,GAAS,EACTV,EAAUf,GAAkB2B,EAASZ,SACzC,GAAID,MAAaa,EAEbriB,EAAQqiB,EAASV,cAEhB,GAAIU,EAASQ,WACdlb,EAAK0a,EAASQ,gBAEb,GAAIR,EAASO,kBACb,GAAIP,EAASS,SACdX,GAAS,EACTxa,EAAK+Y,GAAkB2B,EAASS,cAE/B,CAAA,GAAsB,mBAAXrB,EAKZ,MAAMa,GAAY,sGAAuGD,GAJzHF,GAAS,EACTxa,EAAK8Z,EAKT,OAASS,KAAMA,EAAMva,GAAIA,EAAIwa,OAAQA,EAAQniB,MAAOA,GAsBrBwiB,CAAgBH,GACvC,IAAuB,IAAnBA,EAASU,MAAgB,CAEzB,IAAIC,EAAgBjB,EAAQlT,IAAI1G,GAChC,GAAI6a,GACA,GAAIA,EAAcrb,KAAO4Z,GACrB,MAAM0B,GAAsB9a,QAKhC4Z,EAAQE,IAAI9Z,EAAO6a,GACf7a,MAAOka,EAASZ,QAChBS,QACAC,QAAQ,EACRxa,GAAI4Z,GACJvhB,MAAOqhB,KAKf2B,EAAcd,KAAK7hB,MAAO8H,MAD1BA,EAAQka,EACgClgB,QAAS,IAErD,IAAI+gB,EAASnB,EAAQlT,IAAI1G,GACzB,GAAI+a,GAAUA,EAAOvb,IAAM4Z,GACvB,MAAM0B,GAAsB9a,GAEhC4Z,EAAQE,IAAI9Z,EAAOoa,IApGvBH,CAA4BL,EAAS3f,GAwBzC,OAtBA6e,EAAerjB,UAAUiR,IAAM,SAAU1G,EAAO4G,EAAeJ,QAC7C,IAAVA,IAAoBA,EAAQ,GAChC,IAAIuU,EAASnmB,KAAKilB,SAASnT,IAAI1G,GAC/B,IACI,OAqGZ,SAASgb,EAAgBhb,EAAO+a,EAAQnB,EAAStK,EAAQ1I,EAAeJ,GACpE,IACI,OAgBR,SAASyU,EAAajb,EAAO+a,EAAQnB,EAAStK,EAAQ1I,EAAeJ,GACjE,IAAIlL,EACAzD,EACJ,IAAIkjB,GAAoB,EAARvU,EAoCG,EAARA,IACP3O,EAAQyX,EAAO5I,IAAI1G,EAAO4G,EAAe,QArCF,CAIvC,IADA/O,EAAQkjB,EAAOljB,QACFshB,GACT,MAAM3gB,MAAMmhB,GAAc,uBAEzB,GAAI9hB,IAAUqhB,GAAS,CACxB6B,EAAOljB,MAAQshB,GACf,IACIa,EAASe,EAAOf,OAChBxa,EAAKub,EAAOvb,GACZ0b,EAAaH,EAAOhB,KACpBA,EAAOb,GACX,GAAIgC,EAAWhlB,OAAQ,CACnB6jB,KACA,IAAK,IAAIhkB,EAAI,EAAGA,EAAImlB,EAAWhlB,OAAQH,IAAK,CACxC,IAAIolB,EAAYD,EAAWnlB,GACvBiE,EAAUmhB,EAAUnhB,QACpBohB,EAAwB,EAAVphB,EAA8B4f,EAAQlT,IAAIyU,EAAUnb,YAASlG,EAC/EigB,EAAK7hB,KAAK8iB,EAEVG,EAAUnb,MAGVob,EAEAxB,EAGCwB,GAA2B,EAAVphB,EAAiDsV,EAAhBmK,GAAkC,EAAVzf,EAA6B,KAAO6e,GAASH,mBAAoB,KAGpJqC,EAAOljB,MAAQA,EAAQmiB,EAAS,KAAM1e,EAAKkE,GAAI9D,KAAKtF,MAAMkF,EAAIlD,QAAU,GAAS2hB,KAAYva,EAAGpJ,WAxBtF0D,EAwBiGigB,IAMnH,OAAOliB,EA1DIojB,CAAajb,EAAO+a,EAAQnB,EAAStK,EAAQ1I,EAAeJ,GAEvE,MAAOxO,GAWH,MATMA,aAAaQ,QACfR,EAAI,IAAIQ,MAAMR,KAEPA,EAAoB,gBAAIA,EAAoB,qBAClD6E,QAAQmD,GACT+a,GAAUA,EAAOljB,OAASshB,KAE1B4B,EAAOljB,MAAQqhB,IAEblhB,GApHKgjB,CAAgBhb,EAAO+a,EAAQnmB,KAAKilB,SAAUjlB,KAAK0a,OAAQ1I,EAAeJ,GAErF,MAAOxO,GACH,IAAIqjB,EAAYrjB,EAAoB,gBAOpC,MANIgI,EAAMwY,KACN6C,EAAUxe,QAAQmD,EAAMwY,KAE5BxgB,EAAEsjB,QAAUC,GAAY,KAAOvjB,EAAEsjB,QAASD,EAAWzmB,KAAK8D,QAC1DV,EAAe,YAAIqjB,EACnBrjB,EAAoB,gBAAI,KAClBA,IAGd8gB,EAAerjB,UAAUgF,SAAW,WAChC,IAAI+gB,KAEJ,OAF2B5mB,KAAKilB,SACxB/V,QAAQ,SAAUqQ,EAAGnU,GAAS,OAAOwb,EAAOtjB,KAAK6H,GAAUC,MAC5D,kBAAoBwb,EAAOtb,KAAK,MAAQ,KAE5C4Y,EAjCwB,GA8DnC,SAASgC,GAAsB9a,GAC3B,OAAOma,GAAY,mDAAoDna,GA4J3E,SAASub,GAAYhd,EAAMiG,EAAK9L,QACb,IAAXA,IAAqBA,EAAS,MAClC6F,EAAOA,GAA2B,OAAnBA,EAAKkd,OAAO,IAAeld,EAAKkd,OAAO,IAAM9B,GAAcpb,EAAKmd,OAAO,GAAKnd,EAC3F,IAAIoQ,EAAU5O,GAAUyE,GACxB,GAAIA,aAAerP,MACfwZ,EAAUnK,EAAIvE,IAAIF,IAAWG,KAAK,aAEjC,GAAmB,iBAARsE,EAAkB,CAC9B,IAAImX,KACJ,IAAK,IAAInlB,KAAOgO,EACZ,GAAIA,EAAInP,eAAemB,GAAM,CACzB,IAAIqB,EAAQ2M,EAAIhO,GAChBmlB,EAAMzjB,KAAK1B,EAAM,KAAwB,iBAAVqB,EAAqB+jB,KAAK7b,UAAUlI,GAASkI,GAAUlI,KAG9F8W,EAAU,IAAMgN,EAAMzb,KAAK,MAAQ,IAEvC,MAAO,uBAAyBxH,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAMiW,EAAU,MAAQpQ,EAAKsd,QAAQnC,GAAU,QAEvH,SAASS,GAAY5b,EAAMiG,GACvB,OAAO,IAAIhM,MAAM+iB,GAAYhd,EAAMiG;;;;;;;OAkBvC,IAAIsX,GACA,SAASA,OAOTC,GACA,SAASA,OAOb,SAASC,GAA4BjR,GACjC,MAAM,IAAIvS,MAAM,+CAAiDuS,EAAMkR;;;;;;;;AAuB3E,IAUIC,GAVAC,GAA0B;;;;;;;OAgB9B,SAASC,GAAqB1P,GAC1B,QAAUA,EAAe,QAN7B,SAAWwP,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,QAK3B,IAAIG,IACAC,eAAgB,SAAUC,EAAaC,GAAgB,OAAOC;;;;;;;;;;;;;;OAmBlE,SAASC,GAAgB3R,EAAOiG,GAC5B,OAAoB,MAAhBjG,EAAMuE,OAsBd,SAASqN,EAAc3L,GACnB,IAAIwC,EAAYxC,EAAYtJ,IAC5B,OAAO8L,GAAgC,IAAnBA,EAAUpZ,KAC1B0Q,GAAiB0I,EAAWxC,EAAY1J,KACxC,KAzBOqV,CAAc3L,GAIdlG,GADW8R,GAAqB7R,GACFiG,GAM7C,SAAS4L,GAAqB7R,GAE1B,IADA,IAAIuE,EAASvE,EAAMuE,OACZA,GAA0B,IAAhBA,EAAOlV,MACpBkV,EAASA,EAAOA,OAEpB,OAAOA,EAYX,SAASuN,GAAc9R,EAAO+R,GAC1B,IAAqB,IAAjB/R,EAAMzO,MAAc,CAGpB,IAAIygB,EAAqBD,EAAa5U,IACtC,OAAO6U,GAAsB,EAAID,EAAaxV,IAAQyV,GAAsB,KAI5E,OAAOD,EAAaxV,IAAQyD,EAAMuE,OAAOhT,OAOjD,SAAS0gB,GAAyBC,EAAW/R,GACzC,IAAIgS,EAAYL,GAAcI,EAAW/R,GACzC,OAAOgS,EAAYA,EAAUpT,IAAiB,KASlD,IAAIqT,MAaJ,SAASC,GAAcC,EAAYC,EAAQ5Q,EAAU6Q,EAAcC,GAK/D,IAJA,IAAIC,EAAYJ,EAAWjW,IAAO6P,KAC9ByG,GAAuB,EACvB1M,EAAcqM,EACdtS,EAAQ0S,EAAUpO,MACftE,GAAO,CACV,IAAI4S,EAAY,KAChB,GAAmB,IAAf5S,EAAM3Q,KAA0B,CAChCwjB,GAAkBN,EAAQ5Q,EAAU6Q,EAAczS,GAAiBC,EAAOiG,GAAcwM,GACxF,IAAIK,EAAkB7M,EAAYjG,EAAMzO,OACpCmP,GAAaoS,IAEbD,GAAkBN,EAAQ5Q,EAAU6Q,EAAcM,EAAgBhU,IAAS2T,QAG9E,GAAmB,IAAfzS,EAAM3Q,KAA4B,CACvC,IAAI0jB,EAAa9M,EAAYjG,EAAMzO,OACnCshB,GAAkBN,EAAQ5Q,EAAU6Q,EAAcO,EAAWjU,IAAS2T,GAClED,IACAO,EAAWhU,IAAiByT,GAC5BO,EAAWlU,IAAO1T,SAElBynB,GADA3M,EAAc8M,EAAWlU,IAAO,IACRxC,IAAO6P,KAG/BuG,EAAaM,EAAWjU,UAG3B,GAAmB,IAAfkB,EAAM3Q,KAA6B,CACxC,IAAI2jB,EAAgBC,GAAkBhN,GAElCiN,EADgBF,EAAcrW,IACTwW,WAAWnT,EAAMmT,YAG1Cf,KAAsBO,GAAuB3S,EAC7CoS,KAAsBO,GAAuB1M,EACzCiN,IAEAN,GADA3M,EAAc+M,EAAczW,KACJF,IAAO9J,KAAK2gB,EAAK3hB,aAK7CqhB,EAAY5S,EAAMsE,MAEtB,GAAkB,OAAdsO,EAcA,IAZmB,OAAf5S,EAAMnT,MAAgC,KAAdmT,EAAMvE,QAC9BwK,EAAcmM,GAAoBO,KAClC3S,EAAQoS,GAAoBO,MAEhCC,EAAY5S,EAAMnT,MAQV+lB,GAAW,CAGf,GAAc,QADd5S,EAAQA,EAAMuE,QAAU0B,EAAY5J,IAAO6P,OACrBlM,IAAU0S,EAC5B,OAAO,KAEQ,IAAf1S,EAAM3Q,OAENojB,GADAxM,EAAcA,EAAY1J,KACDyD,EAAMzO,OAAOuN,KAItC8T,EAFe,IAAf5S,EAAM3Q,MAAyB4W,EAAYzJ,KAC3CyJ,EAAcA,EAAYzJ,KACFH,IAAO6P,KAGnBlM,EAAMnT,KAI9BmT,EAAQ4S,GAShB,SAASK,GAAkBpS,GAEvB,IADA,IAAI6R,EAAY7R,EAAUlE,IACnB+V,GAAgC,IAAnBA,EAAUrjB,MAG1BqjB,GADA7R,EAAYA,EAAUtE,KACAI,IAE1B,OAAOkE,EAMX,SAASgS,GAAkBN,EAAQ5Q,EAAU4C,EAAQ2H,EAAMuG,GACxC,IAAXF,EACAlB,GAAqB1P,GACjBA,EAASyR,aAAa7O,EAAQ2H,EAAMuG,GACpClO,EAAO6O,aAAalH,EAAMuG,GAAY,GAE1B,IAAXF,EACLlB,GAAqB1P,GACjBA,EAAS0R,YAAY9O,EAAQ2H,GAC7B3H,EAAO8O,YAAYnH,GAEP,IAAXqG,GAEL5Q,EAAS2R,YAAYpH,GAG7B,SAASqH,GAAezmB,EAAO6U,GAC3B,OAAO0P,GAAqB1P,GAAYA,EAAS6R,WAAW9T,GAAY5S,IACpE6U,EAAS4R,eAAe7T,GAAY5S,IAE5C,SAAS2mB,GAA2BnB,EAAYoB,EAAYjB,GACxD,IAAID,EAAeP,GAAyBK,EAAWjW,IAAO6P,KAAMoG,GAEhEE,GAEAH,GAAcC,EAAYoB,EAAa,EAAiB,EADzCpB,EAAWtV,IACwDwV,EAAcC,GA+DxG,SAASkB,GAAWC,EAAOb,EAAYrR,EAAYnQ,EAAOsiB,GACtD,IAAIC,EAAQf,EAAWlU,IACnBtN,EAAQ,IAERuiB,EAAMviB,EAAQ,GAAGiL,IAAQoX,GAEzBriB,EAAQuiB,EAAM3oB,QACdyoB,EAAMpX,IAAQsX,EAAMviB,GACpBuiB,EAAMC,OAAOxiB,EAAO,EAAGqiB,KAGvBE,EAAM3mB,KAAKymB,GACXA,EAAMpX,IAAQ,MAIdqX,GAAkB,IAClBD,EAAMzW,IAAmB0W,EACzBD,EAAMrX,IAAUmF,GAGhBkS,EAAMnX,KACNmX,EAAMnX,IAASkX,WAAWpiB,GAG9BqiB,EAAMtX,KAAU,EAYpB,SAAS0X,GAAWjB,EAAYkB,EAAaC,GACzC,IAAIJ,EAAQf,EAAWlU,IACnBsV,EAAeL,EAAMG,GACrBA,EAAc,IACdH,EAAMG,EAAc,GAAGzX,IAAQ2X,EAAa3X,KAEhDsX,EAAMC,OAAOE,EAAa,GACrBC,GACDT,GAA2BU,GAAc,GAEzCA,EAAa1X,KACb0X,EAAa1X,IAAS2X,aAE1BD,EAAahX,KAAoB,EACjCgX,EAAa5X,IAAU,KAEvB4X,EAAa7X,MAAU,EAS3B,SAAS8X,GAAWrB,EAAYsB,EAAeJ,GAC3C,IAAI9T,EAAO4S,EAAWlU,IAAOoV,GAC7BD,GAAWjB,EAAYkB,IAAeI,EAAcH,UACpDI,GAAanU,GAGjB,SAASoU,GAAcnS,GACnB,IAAIoS,EAAapS,EAAS/F,IAAOmY,WACjC,OAAuB,IAAhBA,EAAoB,KAAOpS,EAASoS,GAQ/C,SAASF,GAAanU,GAClB,IAAIwB,EAAWxB,EAAKnD,IAChBqU,GAAqB1P,IAAaA,EAAS2R,aAC3CjB,GAAclS,EAAM,EAAiBwB,EAAU,MAhIvD,SAAS8S,EAAgBC,GAErB,IAAoC,IAAhCA,EAASrY,IAAOmY,WAChB,OAAOG,GAAYD,GAGvB,IADA,IAAIE,EAAkBL,GAAcG,GAC7BE,GAAiB,CACpB,IAAI/nB,EAAO,KAaX,GAZI+nB,EAAgBzpB,QAAUiR,GAEfwY,EACFvY,IAAOmY,YAAc,IAC1B3nB,EAAO0nB,GAFAK,IAMKA,EACF/V,IAAO1T,SACjB0B,EAFY+nB,EAEK/V,IAAO,IAEpB,MAARhS,EAAc,CAGd,KAAO+nB,IAAoBA,EAAgBpY,KAASoY,IAAoBF,GACpEC,GAAYC,GACZA,EAAkBC,GAAeD,EAAiBF,GAEtDC,GAAYC,GAAmBF,GAC/B7nB,EAAO+nB,GAAmBA,EAAgBpY,IAE9CoY,EAAkB/nB,GAoGtB4nB,CAAgBtU,GAEhBA,EAAK7D,KAAU,GAcnB,SAASuY,GAAeC,EAAOJ,GAC3B,IAAI1U,EACJ,OAAI8U,EAAM3pB,QAAUiR,KAAkB4D,EAAQ8U,EAAMnY,MACjC,IAAfqD,EAAM3Q,KAGCyiB,GAAc9R,EAAO8U,GAIrBA,EAAMvY,MAAYmY,EAAW,KAAOI,EAAMvY,IAQzD,SAASoY,GAAYC,GACjB,GAAIA,EAAgBzpB,QAAUiR,GAAe,CACzC,IAAI+D,EAAOyU,GAYnB,SAASG,EAAgB3S,GACrB,IAAIyF,EAAUzF,EAAS/F,IAAOwL,QAC9B,GAAe,MAAXA,EAAiB,CACjB,IAAK,IAAI7c,EAAI,EAAGA,EAAI6c,EAAQ1c,OAAS,EAAGH,GAAK,EACf,iBAAf6c,EAAQ7c,IAEF6U,GAAiBuC,EAASyF,EAAQ7c,EAAI,KAE5CgqB,oBAAoBnN,EAAQ7c,GADpBoX,EAASvF,IAASgL,EAAQ7c,EAAI,IACI6c,EAAQ7c,EAAI,IAC7DA,GAAK,GAEsB,iBAAf6c,EAAQ7c,IAGpBiqB,EADgB7S,EAASvF,IAASgL,EAAQ7c,OAM1C6c,EAAQ7c,GAAGI,KADGgX,EAASvF,IAASgL,EAAQ7c,EAAI,KAIpDoX,EAASvF,IAAW,MAjCpBkY,CAAgB5U,GAqCxB,SAAS+U,EAAkB/U,GACvB,IACI4F,EADA9D,EAAQ9B,EAAK9D,IAEJ,MAAT4F,GAAwD,OAAtC8D,EAAe9D,EAAM8D,eACvCM,GAAUlG,EAAM4F,GAxChBmP,CAAkB/U,GA4C1B,SAASgV,EAAsB/S,GAC3B,IAAIgT,EAAmBhT,EAAS/F,KAAU+F,EAAS/F,IAAO+Y,iBACtDA,GACA/O,GAAUjE,EAAUgT,GA9CpBD,CAAsBhV,IAEE,IAApBA,EAAK9D,IAAOhE,IAAagZ,GAAqBlR,EAAKnD,MAEnDmD,EAAKnD,IAAUqY,WA6C3B,SAASC,GAAgBtV,EAAOiG,GAC5B,GAAIsP,GAAoBvV,EAAOiG,GAAc,CAIzC,GAAItF,GAAWsF,GACX,OAAOuP,GAAiBvP,EAAYjJ,IAAW+C,GAAiBC,EAAOiG,IAE3E,IAAIwC,EAAYxC,EAAYtJ,IACxB8Y,EAAczV,EAAMuE,OAIxB,OAHmB,MAAfkR,GAA4C,IAArBA,EAAYpmB,OACnC2Q,EAAQ0V,GAA2BD,IAEhB,MAAhBzV,EAAMuE,QAAqC,IAAnBkE,EAAUpZ,KACrC4iB,GAAyBxJ,EAAWxC,GACpC0L,GAAgB3R,EAAOiG,GAE/B,OAAO,KA0DX,SAASsP,GAAoBvV,EAAOiG,GAChC,IAAI0P,EAAc3V,EACduE,EAASvE,EAAMuE,OAanB,OAZIvE,EAAMuE,SACoB,IAAtBvE,EAAMuE,OAAOlV,KAEbkV,GADAoR,EAAcD,GAA2B1V,IACpBuE,OAEM,IAAtBvE,EAAMuE,OAAOlV,OAElBkV,GADAoR,EAAc9D,GAAqB8D,IACdpR,SAGd,OAAXA,IACAA,EAAS0B,EAAYtJ,KACrB4H,GAA0B,IAAhBA,EAAOlV,KA7CzB,SAASumB,EAA2BC,EAAW1V,GAE3C,IAAIgS,EAAYL,GAAc+D,EAAW1V,GACzC,OAAiB,MAAbgS,GAAiD,MAA5BA,EAAUpT,IA2CxB6W,CAA2BrR,EAAQ0B,GAxElD,SAAS6P,EAA8B9V,GAInC,OAAoB,MAAhBA,EAAMuE,UAGgB,IAAtBvE,EAAMuE,OAAOlV,MAAmD,KAArB2Q,EAAMuE,OAAO9I,OAqEjDqa,CAA8BH,GAQ7C,SAASI,GAAmBpU,EAAU4C,EAAQD,EAAOmO,GAC7CpB,GAAqB1P,GACrBA,EAASyR,aAAa7O,EAAQD,EAAOmO,GAGrClO,EAAO6O,aAAa9O,EAAOmO,GAAY,GAM/C,SAAS+C,GAAiB7T,EAAUuK,GAChC,OAAQmF,GAAqB1P,GAAYA,EAASsC,WAAWiI,GAAQA,EAAKjI,WAkB9E,SAAS+R,GAAYC,EAASC,EAAYjQ,GAEtC,QADgB,IAAZgQ,IAAsBA,EAAU,MACpB,OAAZA,GAAoBV,GAAoBW,EAAYjQ,GAAc,CAClE,IAAItE,EAAWsE,EAAYjJ,IACvBmZ,EAAWxE,GAAgBuE,EAAYjQ,GACvCmQ,EAAcF,EAAW3R,QAAU0B,EAAYtJ,IACnD,GAAyB,IAArByZ,EAAY/mB,KAAuB,CACnC,IAAI0jB,EAAajB,GAAcsE,EAAanQ,GACxC6N,EAAQf,EAAWlU,IACnBtN,EAAQuiB,EAAMve,QAAQ0Q,GAC1B8P,GAAmBpU,EAAUoR,EAAWhU,IAAgBkX,EAASI,GAAqB9kB,EAAOuiB,EAAOf,EAAWjU,WAErF,IAArBsX,EAAY/mB,KAEjB0mB,GAAmBpU,EADA2T,GAAgBY,EAAYjQ,GACJgQ,EAASE,GAE1B,IAArBC,EAAY/mB,KAEjB0mB,GAAmBpU,EAAUwU,EAAUF,EADnBlW,GAAiBmW,EAAW3R,OAAQ0B,IAIxDoL,GAAqB1P,GAAYA,EAASqU,YAAYG,EAAUF,GAC5DE,EAASH,YAAYC,GAE7B,OAAO,EAEX,OAAO,EAQX,SAASP,GAA2BY,GAChC,KAA6B,MAAtBA,EAAY/R,QAA8C,IAA5B+R,EAAY/R,OAAOlV,MACpDinB,EAAcA,EAAY/R,OAE9B,OAAO+R,EAEX,SAASD,GAAqB9kB,EAAOuiB,EAAOyC,GACxC,GAAIhlB,EAAQ,EAAIuiB,EAAM3oB,OAAQ,CAC1B,IAAIgV,EAAO2T,EAAMviB,EAAQ,GACrBskB,EAAY1V,EAAKxD,IACrB,OAAOkZ,EAAUvR,MAAQvE,GAAiB8V,EAAUvR,MAAOnE,GAAQoW,EAGnE,OAAOA,EAWf,SAASlD,GAAY6C,EAAYD,EAAShQ,GAEtC,GAAgB,OAAZgQ,GAAoBV,GAAoBW,EAAYjQ,GAAc,CAClE,IAAIuQ,EAAe7E,GAAgBuE,EAAYjQ,GAC3CtE,EAAWsE,EAAYjJ,IAG3B,OAFAqU,GAAqB1P,GAAYA,EAAS0R,YAAYmD,EAAcP,GAChEO,EAAanD,YAAY4C,IACtB,EAEX,OAAO,EAWX,SAASQ,GAAoBC,EAAgBC,EAAiB1Q,EAAa2Q,GACvE,IAAIjT,EAAS5D,GAAiB2W,EAAgBE,GAC9CZ,GAAYrS,EAAQgT,EAAiB1Q,GAIrCnC,GAAgBH,EAAQiT,GACxB,IAAIpE,EAAe8C,GAAgBqB,EAAiB1Q,GAChD6M,EAAkB8D,EAAeF,EAAenlB,OACpD,GAA4B,IAAxBmlB,EAAernB,KAA4B,CAM3CyjB,EAAgB/T,IAAiByT,EAEjC,IADA,IAAIsB,EAAQhB,EAAgBjU,IACnB7T,EAAI,EAAGA,EAAI8oB,EAAM3oB,OAAQH,IAC9ByoB,GAA2BK,EAAM9oB,IAAI,EAAM8nB,EAAgBhU,SAG9D,CACD,GAA4B,IAAxB4X,EAAernB,KAEf,IADA,IAAIwnB,EAAwBH,EAAepS,MACpCuS,GACHJ,GAAoBI,EAAuBF,EAAiB1Q,EAAa2Q,GACzEC,EAAwBA,EAAsBhqB,KAGlD6T,GAAaoS,KACbA,EAAgB/T,IAAiByT,EACjCwD,GAAYlD,EAAgBhU,IAAS6X,EAAiB1Q;;;;;;;OAgClE,SAAS6Q,GAAuB9W,EAAO1N,GAQnC,IANA,IAtBwBykB,EAAkBC,EACtCC,EACAC,EACAC,EAmBAlP,EAAO,EACPmP,EAAYpX,EAAM6K,MAClBwM,EAAsBD,EAAYA,EAAU7hB,QAAQ,IAAuB,EAG3E+hB,GAAqB,EAChBtsB,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IAAK,CACtC,IAAI4J,EAAUtC,EAAStH,GACvB,GAAuB,iBAAZ4J,GAaX,IAAI0iB,EAEJ,GAAW,EAAPrP,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZrT,GAAkBA,IAAYoL,EAAMkR,QAAS,CAC7C,GAAIqG,GAAWtP,GACX,OAAO,EACXqP,GAAqB,OAGxB,CACD,IACIE,EAAkBC,GADA,EAAPxP,EAAuB,QAAUrT,EACIwiB,GACpD,IAAyB,IAArBI,EAAwB,CACxB,GAAID,GAAWtP,GACX,OAAO,EACXqP,GAAqB,EACrB,SAEJ,IAEQI,EAFJC,EAA2B,EAAP1P,EAAuBrT,EAAUtC,IAAWtH,GACpE,GAA0B,KAAtB2sB,EAUA,GANID,EADAL,GAAuB,GAAKG,EAAkBH,EAC9B,GAIAD,EAAUI,EAAkB,GAErC,EAAPvP,IAxEZgP,GADoBF,EA0EYW,GAzEEvsB,OAElCgsB,GADAD,EAAaH,EAAiBxhB,QAFQyhB,EA0ESW,IAvEpBX,EAAgB7rB,QAC3B,IAAhB+rB,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,KAoEnC,EAAPlP,GAA4B0P,IAAsBD,EAAe,CACjE,GAAIH,GAAWtP,GACX,OAAO,EACXqP,GAAqB,QAhDjC,CAEI,IAAKA,IAAuBC,GAAWtP,KAAUsP,GAAW3iB,GACxD,OAAO,EAIX,GAAI0iB,GAAsBC,GAAW3iB,GACjC,SACJ0iB,GAAqB,EACrBrP,EAAOrT,EAAkB,EAAPqT,GA2C1B,OAAOsP,GAAWtP,IAASqP,EAE/B,SAASC,GAAWtP,GAChB,OAAgC,IAAjB,EAAPA,GAWZ,SAASwP,GAAoB1nB,EAAM8a,GAC/B,GAAc,OAAVA,EACA,OAAQ,EAGZ,IAFA,IAAI+M,GAAiB,EACjB5sB,EAAI,EACDA,EAAI6f,EAAM1f,QAAQ,CACrB,IAAI0sB,EAAgBhN,EAAM7f,GAC1B,GAAI6sB,IAAkB9nB,EAClB,OAAO/E,EAEgB,IAAlB6sB,EAEL7sB,GAAK,GAGiB,IAAlB6sB,IACAD,GAAiB,GAErB5sB,GAAK4sB,EAAiB,EAAI,GAGlC,OAAQ,EAEZ,SAASE,GAA2B9X,EAAO1N,GACvC,IAAK,IAAItH,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IACjC,GAAI8rB,GAAuB9W,EAAO1N,EAAStH,IACvC,OAAO,EAGf,OAAO,EAqBX,SAAS+sB,GAAsB/X,EAAOhI,EAAWggB,GAE7C,IADA,IAAIC,EApBR,SAASC,EAAsBlY,GAC3B,IAAIoX,EAAYpX,EAAM6K,MACtB,GAAiB,MAAbuM,EAAmB,CACnB,IAAIe,EAAqBf,EAAU7hB,QAAQ6b,IAG3C,GAAiC,IAAP,EAArB+G,GACD,OAAOf,EAAUe,EAAqB,GAG9C,OAAO,KAUkBD,CAAsBlY,GACtChV,EAAI,EAAGA,EAAIgN,EAAU7M,OAAQH,IAGlC,GAAIitB,IAAuBD,EAAchtB,IACd,OAAvBitB,GAA+BH,GAA2B9X,EAAOhI,EAAUhN,IAC3E,OAAOA,EAAI,EAGnB,OAAO;;;;;;;OAWX,IAAIotB,MAqBAC,GACA,SAASA,GAAmB5jB,EAAI3H,GAC5BjD,KAAK4K,GAAKA,EACV5K,KAAKiD,MAAQA,GAKjBwrB,GAAmC,WACnC,SAASA,IACLzuB,KAAK0uB,YAYT,OAVAD,EAAkB5tB,UAAU8tB,aAAe,WACvC,IAAK,IAAIxtB,EAAI,EAAGA,EAAInB,KAAK0uB,SAASptB,OAAQH,IAAK,CAC3C,IAAIytB,EAAS5uB,KAAK0uB,SAASvtB,GACtBytB,EAAOlU,QAA2B,IAAjBkU,EAAO3D,OACzB2D,EAAOC,OAGf7uB,KAAK0uB,SAASptB,OAAS,GAE3BmtB,EAAkB5tB,UAAUiuB,YAAc,SAAUF,GAAU5uB,KAAK0uB,SAASprB,KAAKsrB,IAC1EH,EAd2B;;;;;;;;AAwBtC,SAASM,GAA0BC,EAASC,EAAWC,GACnD,OACI,KACAD,GAAa,KACbC,IAAyB,MACzB,EACA,EACAF,GAAW,KACX,KACA,MA0BR,SAASG,GAAkBznB,EAAO6Q,GAI9B,IAHA,IAAI6W,EAAe1nB,EAAQ6K,GACvBkE,EAAY8B,EAAS6W,GACrBC,EAAU9W,EACPhY,MAAM2P,QAAQuG,IACjB4Y,EAAU5Y,EACVA,EAAYA,EAAU5D,IAE1B,GAcJ,SAASyc,EAAiBrsB,GAEtB,MAA+B,iBAAjBA,EAAMwP,KAAsD,iBAAxBxP,EAAM8R,IAhBpDua,CAAiBD,GACjB,OAAOA,EAIP,IAAIE,EAAkBlZ,GAAS3O,EAAO6Q,GAAUgX,gBAIhD,OAHIF,IAAY9W,IACZ6W,EAAevc,IAEZwc,EAAQD,GAAgBG,EAlCvC,SAASC,EAAoBR,EAASS,GAElC,IAAI1V,EAAU0V,EAAqBxU,QAEnC,OADAlB,EAAQ,GAA2BiV,EAC5BjV,EA+BCyV,CAAoB/Y,EAAW8Y,GAC/BR,GAA0BtY,GAOtC,SAASiZ,GAAkBC,EAAeC,EAAaZ,EAASJ,EAAQiB,EAAoBC,GAQxF,OAPAA,EAAMA,GAAOd,EACTa,EACAF,EAAcE,GAAsBjB,EAGpCe,EAAcrsB,KAAKsrB,KAEnBA,IACAA,EAAOmB,iBAAiB,IAAqB,WACzC,IAAIroB,EAAQioB,EAAcjkB,QAAQkjB,GAM9BlnB,IACIA,EANoBioB,EAAc,GAOlCA,EAAcjoB,GAAS,KAGvBioB,EAAczF,OAAOxiB,EAAO,IAGpCknB,EAAOpD,aAESoE,EAAYI,gBAAkBJ,EAAYI,cAAgB,IAAIvB,KACpEK,YAAYF,EAAQkB,IAC3B,GA8Bf,SAASG,GAAiBC,GACtB,OAAOA,EAAe,GAE1B,SAASC,GAAmBznB,GACxB,OAAOA,EAAK,IACP,EAA2C,KAAM,KAAM,KAAM,MAMtE,IAAI0nB,MACAC,MAsTJ,SAASC,GAAgBvW,EAASrS,EAAO6oB,GACrC,IAAIC,EAAc,EAA4C,EAAR9oB,EAClD+oB,EAAYC,GAAS3W,EAASyW,GAC9BG,EAAWC,GAAY7W,EAASyW,GAGpC,GAAIK,GAAgBF,EAAUF,EAFjBF,aAAiB/B,GAAsB+B,EAAMttB,MAAQstB,GAEjB,CAC7C,IAAIO,EAAgD,IAAnB,EAAXH,GAElBI,EAAgBR,aAAiB/B,GACjC,IAAIwC,GAA2BT,EAFrBxW,EAAQ,GAE6B+W,EAAiB,EAAgB,GAChF,KACAG,EAAWF,EAAgBR,EAAMttB,MAAQstB,EACzCW,EAAkBC,GAAsBpX,EAASyW,GACjDY,GAAyB,EAE7B,GAAIC,GAAwBtX,EAASgX,EAAeG,GAAkB,CAClE,IAAII,EAAWC,GAAiBxX,EAASgX,EAAeG,GAExDM,GAAsBzX,EAASyW,EADVO,EAAgBO,EAAW,GAEhDF,GAAyB,EAG7BK,GAAS1X,EAASyW,EAAaS,GAC/B,IAAIS,EAAgBC,GAAsBhB,GAEtCiB,EAAgBlB,GAAS3W,EAAS2X,GACtC,IAAKE,GAAiBf,GAAgBF,EAAUiB,EAAeX,GAAU,CACrE,IAAIY,GAAa,EACbC,GAAc,GAEbC,GAAYd,EAASH,IAAmBiB,GAAYH,EAAed,KACpEe,GAAa,EACbC,GAAc,GAElBE,GAASjY,EAAS2X,EAAeG,GACjCG,GAASjY,EAASyW,EAAasB,GAC/BG,GAAgBlY,GAAS,GAEzBqX,GACAc,GAAuBnY,GAAS,IAqI5C,SAASoY,GAASrY,EAAQsY,EAAMnvB,EAAO6U,EAAUmX,EAAWoD,EAAOtB,GAC/D9tB,EAAQgsB,GAAahsB,EAAQgsB,EAAUmD,EAAMnvB,GAASA,EAClDovB,GAAStB,GACLsB,GACAA,EAAMZ,SAASW,EAAMnvB,GAErB8tB,GACAA,EAAcU,SAASW,EAAMnvB,IAG5BA,EAELukB,GAAqB1P,GACjBA,EAASqa,SAASrY,EAAQsY,EAAMnvB,EAAOqkB,GAAoBgL,UAC3DxY,EAAc,MAAEyY,YAAYH,EAAMnvB,GAItCukB,GAAqB1P,GACjBA,EAAS0a,YAAY1Y,EAAQsY,EAAM9K,GAAoBgL,UACvDxY,EAAc,MAAE2Y,eAAeL,GAe3C,SAASM,GAAS5Y,EAAQ6Y,EAAWC,EAAK9a,EAAUua,EAAOtB,GACnDsB,GAAStB,GACLsB,GACAA,EAAMZ,SAASkB,EAAWC,GAE1B7B,GACAA,EAAcU,SAASkB,EAAWC,IAGjCA,EAELpL,GAAqB1P,GAAYA,EAAS+a,SAAS/Y,EAAQ6Y,GACvD7Y,EAAkB,UAAE8Y,IAAID,GAI5BnL,GAAqB1P,GAAYA,EAASgb,YAAYhZ,EAAQ6Y,GAC1D7Y,EAAkB,UAAEiZ,OAAOJ,GAGvC,SAASX,GAASjY,EAASrS,EAAOsrB,GAC9B,IAAIC,EAAgBvrB,GAAS,EAAqCA,EAAQ,EAAuBA,EAC7FsrB,EACAjZ,EAAQkZ,IAAkB,EAG1BlZ,EAAQkZ,KAAkB,EAGlC,SAASC,GAAQnZ,EAASrS,GAEtB,OAAmD,IAAlB,EAAzBqS,EADYrS,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASyrB,GAAapZ,EAASrS,GAE3B,OAAmD,IAAlB,EAAzBqS,EADYrS,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS0rB,GAAcrZ,EAASrS,GAE5B,OAAsD,IAArB,EAAzBqS,EADYrS,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS2rB,GAASC,EAAYC,EAAaC,GACvC,OAAqB,GAAbF,EAAkCC,GAAe,EACpDC,GAAgB,GAEzB,SAASC,GAAgB1Z,EAAS2Z,GAC9B,IAAIhsB,EAAQisB,GAAgBD,GAC5B,OAAO3Z,EAAQ,GAA+BrS,GAElD,SAASisB,GAAgBD,GACrB,OAAQA,GAAQ,EAAwB,MAE5C,SAAS/B,GAAsB+B,GAC3B,IAAIhsB,EAASgsB,GAAQ,GAAkD,MACvE,OAAOhsB,GAAS,EAAoCA,GAAS,EAEjE,SAASksB,GAAmB7Z,GACxB,OAAO4X,GAAsB5X,EAAQ,IAEzC,SAAS8Z,GAAkB9Z,GACvB,OAAOA,EAAQ,GAEnB,SAAS+Z,GAAQ/Z,EAASrS,EAAO0qB,GAC7BrY,EAAQrS,EAAQ,GAA0B0qB,EAE9C,SAASX,GAAS1X,EAASrS,EAAOzE,GAC9B8W,EAAQrS,EAAQ,GAAuBzE,EAE3C,SAASouB,GAAwBtX,EAASga,EAASrsB,GAC/C,IAAIioB,EAAgB5V,EAAQ,GAC5B,GAAIga,GACA,IAAKpE,GAA2B,IAAVjoB,EAClB,OAAO,OAGV,IAAKioB,EACN,OAAO,EAEX,OAAOA,EAAcjoB,KAAWqsB,EAEpC,SAASxC,GAAiBxX,EAASga,EAASC,GACxC,IAAIrE,EAAgB5V,EAAQ,IAA0BoW,GAAmBpW,GAUzE,OATIia,EAAiB,EACjBrE,EAAcqE,GAAkBD,GAIhCpE,EAAczF,OADd8J,EAAiBrE,EAAc,GACM,EAAGoE,EAAS,MACjDpE,EAAc,IACV,GAEDqE,EAEX,SAASxC,GAAsBzX,EAASrS,EAAOusB,GAC3Cla,EAAQrS,EAAQ,GAAoCusB,EAExD,SAAS9C,GAAsBpX,EAASrS,GACpC,OAAOqS,EAAQrS,EAAQ,IAAqC,EAEhE,SAASwsB,GAAiBna,EAASrS,GAC/B,IAAIusB,EAAqB9C,GAAsBpX,EAASrS,GACxD,GAAIusB,EAAoB,CACpB,IAAItE,EAAgB5V,EAAQ,GAC5B,GAAI4V,EACA,OAAOA,EAAcsE,GAG7B,OAAO,KAEX,SAASE,GAAQpa,EAASrS,EAAOgsB,GAE7B3Z,EAD8B,IAAVrS,EAAuCA,EAASA,EAAQ,GACnDgsB,EAE7B,SAAS9C,GAAY7W,EAASrS,GAE1B,OAAOqS,EADuB,IAAVrS,EAAuCA,EAASA,EAAQ,GAGhF,SAASgpB,GAAS3W,EAASrS,GACvB,OAAOqS,EAAQrS,EAAQ,GAE3B,SAAS0sB,GAAQra,EAASrS,GACtB,OAAOqS,EAAQrS,EAAQ,GAK3B,SAAS2sB,GAAqBta,GAC1B,OAA6C,GAAtCA,EAAQ,GAEnB,SAASkY,GAAgBlY,EAASiZ,GAC9BhB,GAASjY,EAAS,EAA4BiZ,GAElD,SAASd,GAAuBnY,EAASiZ,GACjCA,EACAjZ,EAAQ,IAA+B,EAGvCA,EAAQ,KAA+B,EAG/C,SAASua,GAAwBva,EAASqY,EAAMlX,GAC5C,IAAK,IAAI/Z,GAAK+Z,GAAc,GAAK,EAAwB/Z,EAAI4Y,EAAQzY,OAAQH,GAAK,EAE9E,GADe4Y,EAAQ5Y,IACPixB,EACZ,OAAOjxB,EAAI,EAGnB,OAAQ,EAEZ,SAASozB,GAAwBxa,EAASya,EAAQC,GAC9C,IAAIC,EAAWhE,GAAS3W,EAASya,GAC7BG,EAAUP,GAAQra,EAASya,GAC3BI,EAAUhE,GAAY7W,EAASya,GAC/BK,EAAwB1D,GAAsBpX,EAASya,GACvDM,EAAQF,EACRG,EAAQnE,GAAY7W,EAAS0a,GAC7BO,EAAerD,GAAsBmD,GACrCE,GAAgB,GAGhBb,GAAQpa,EAASib,EAAc3B,GAF3B4B,EAAQrE,GAAY7W,EAASib,GAClBrB,GAAgBsB,GAC0BR,IAE7D,IAEQQ,EAFJC,EAAevD,GAAsBoD,GACrCG,GAAgB,GAGhBf,GAAQpa,EAASmb,EAAc7B,GAF3B4B,EAAQrE,GAAY7W,EAASmb,GAClBvB,GAAgBsB,GAC0BT,IAE7D/C,GAAS1X,EAASya,EAAQ9D,GAAS3W,EAAS0a,IAC5CX,GAAQ/Z,EAASya,EAAQJ,GAAQra,EAAS0a,IAC1CN,GAAQpa,EAASya,EAAQ5D,GAAY7W,EAAS0a,IAC9CjD,GAAsBzX,EAASya,EAAQrD,GAAsBpX,EAAS0a,IACtEhD,GAAS1X,EAAS0a,EAAQC,GAC1BZ,GAAQ/Z,EAAS0a,EAAQE,GACzBR,GAAQpa,EAAS0a,EAAQG,GACzBpD,GAAsBzX,EAAS0a,EAAQI,GAiB3C,SAASM,GAAuBpb,EAASrS,EAAO0tB,EAAYlvB,EAAMwtB,EAAMzwB,EAAOoyB,GAC3E,IAAIC,EAAU5tB,EAAQqS,EAAQzY,OAE9ByY,EAAQmQ,OAAOxiB,EAAO,EAAU,EAAPgsB,GAAwB0B,EAAa,EAAgB,GAAelvB,EAAMjD,EAAOoyB,GACtGC,GAnBR,SAASC,EAA0Bxb,EAASyb,GACxC,IAAK,IAAIr0B,EAAIq0B,EAAoBr0B,EAAI4Y,EAAQzY,OAAQH,GAAK,EAAc,CACpE,IACIqvB,EAAcmB,GADFf,GAAY7W,EAAS5Y,IAErC,GAAIqvB,EAAc,EAAG,CACjB,IACIiF,EAAwB9B,GADX/C,GAAY7W,EAASyW,IAMtC2D,GAAQpa,EAASyW,EADC6C,IAHDH,GAAQnZ,EAASyW,GAAe,EAAgB,IAC5D2C,GAAapZ,EAASyW,GAAe,EAAgB,IACrD4C,GAAcrZ,EAASyW,GAAe,EAAmB,GACxBiF,EAAuBt0B,MAajEo0B,CAA0Bxb,EAASrS,EAAQ,GAGnD,SAASqqB,GAAY9uB,EAAOkwB,GACxB,OAAIA,IACOlwB,EAEM,OAAVA,EAEX,SAASyyB,GAAmBxvB,EAAMitB,EAAclE,GAC5C,OAAIkE,EACO,EAEFlE,GAAaA,EAAU/oB,GACrB,EAEJ,EAEX,SAAS2qB,GAAgB6C,EAAMzoB,EAAG9K,GAO9B,QAN0B,EAAPuzB,IACHzoB,GAAK9K,GACM,EAAPuzB,EAMTzoB,EAAEpF,aAAe1F,EAAE0F,WAGvBoF,IAAM9K,EAEjB,IAAI6wB,GAA4C,WAC5C,SAASA,EAA2B1xB,EAASq2B,EAAUC,GACnD51B,KAAK21B,SAAWA,EAChB31B,KAAK41B,MAAQA,EACb51B,KAAK61B,WACL71B,KAAK81B,QAAS,EACd91B,KAAK+1B,SAAWz2B,EAoBpB,OAlBA0xB,EAA2BnwB,UAAU4wB,SAAW,SAAUW,EAAMnvB,GACxDjD,KAAK61B,QAAQzD,KAAUnvB,IACvBjD,KAAK61B,QAAQzD,GAAQnvB,EACrBjD,KAAK81B,QAAS,IAGtB9E,EAA2BnwB,UAAUm1B,YAAc,SAAUC,EAAeC,GAIxE,GAAIl2B,KAAK81B,OAAQ,CACb,IAAIlH,EAAS5uB,KAAK+1B,SAASnrB,GAAG5K,KAAK21B,SAAU31B,KAAK41B,MAAO51B,KAAK61B,QAASK,EAAeD,GAAiB,MAGvG,OAFAj2B,KAAK61B,WACL71B,KAAK81B,QAAS,EACPlH,IAIRoC,EA1BoC,GAwC3CmF,GAAiBhsB,QAAQC,QAAQ;;;;;;;OAOrC,SAASgsB,GAAuB7d,EAAU8d,GACtC,IAAIje,EAAQoF,KACR8Y,EAA0BjY,KAO9B,GALAjG,EAAMoD,mBAAoB,EAC1B8C,IAAqB,GAIV,IAAP+X,EAAuB,CACvB,IAAI/d,EAAesF,KACfK,EAAqBC,KACpBD,GACD9B,GAAiB5D,EAAUH,EAAOE,GAk6C9C,SAASie,EAA4Bvf,GACjC,IAAK,IAAIjM,EAAU2f,GAAc1T,GAAwB,OAAZjM,EAAkBA,EAAUA,EAAQ4H,IAI7E,GAAI5H,EAAQzJ,OAASiR,KAA4C,IAA3BxH,EAAQgK,IAE1C,IADA,IAAIyhB,EAAczrB,EACT5J,EAAI,EAAGA,EAAIq1B,EAAYxhB,IAAO1T,OAAQH,IAAK,CAChD,IAAIs1B,EAAkBD,EAAYxhB,IAAO7T,GAGzCu1B,GAAuBD,EAAiBA,EAAgBjkB,IAAQikB,EAAgBxjB,IAAU,IA36ClGsjB,CAA4Bhe,GAiDpC,SAASoe,EAAsBve,GAC3B,GAA4B,MAAxBA,EAAM1L,eACN,IAAK,IAAIvL,EAAI,EAAGA,EAAIiX,EAAM1L,eAAepL,OAAQH,GAAK,EAAG,CACrD,IAAIy1B,EAAkBxe,EAAM1L,eAAevL,GACxBiX,EAAM1P,KAAKkuB,GACjBjqB,sBAAsBiqB,EAAkBrkB,GAAe6F,EAAM1L,eAAevL,EAAI,KApDjGw1B,CAAsBve,GACjB6F,GACD5B,GAAa9D,EAAUH,EAAM0D,aAAc1D,EAAM2D,kBAAmBzD,GAOhF,SAASue,EAAgBze,EAAOG,GAC5B,GAAIH,EAAM0e,oBAAqB,CAC3B,IAAIvY,EAAmBhG,EAASxF,IAAiBqF,EAAM2e,kBACvDtY,GAAeF,GAGf,IAFA,IAAIyY,GAAyB,EACzBC,GAAuB,EAClB91B,EAAI,EAAGA,EAAIiX,EAAM0e,oBAAoBx1B,OAAQH,IAAK,CACvD,IAAI+1B,EAAc9e,EAAM0e,oBAAoB31B,GAC5C,GAA2B,iBAAhB+1B,EAA0B,CACjC,GAAIA,GAAe,EAAG,CAGlBD,GAAuBC,EAEvB,IAAIC,EAAgB/e,EAAM0e,sBAAsB31B,GAEhD61B,EADAzY,GAAoBlJ,GAAgB8hB,OAOpC5Y,GAAoB2Y,EAExBzY,GAAeF,QAIfhG,EAASxF,IAAiBwL,EAG1B2Y,EAAYF,EAAwBzkB,GAAe0kB,GACnDD,MArCRH,CAAgBze,EAAOG,IAqD/B,SAAS6e,EAAuBxc,EAAY0b,EAAyBD,GACjE,GAAkB,MAAdzb,EACA,IAAK,IAAIzZ,EAAI,EAAGA,EAAIyZ,EAAWtZ,OAAQH,IACnCk2B,GAAiBzc,EAAWzZ,GAAIm1B,EAAyBD,GAtDjEe,CAAuBhf,EAAMwC,WAAY0b,EAAyBD,GA0DtE,SAASiB,GAAgBxf,EAAUM,EAAO2B,EAASnI,EAAOqd,GACtD,IAAI1W,EAAWsF,KACX3E,EAAWd,EAAM6H,UAAUhF,QAO/B,OANA/B,EAASzG,IAAiB,GAARb,EAClBsH,EAASxG,IAAUwG,EAAS1F,IAAoB+E,EAChDW,EAASjG,IAAW8G,EACpBb,EAAShG,IAAYqF,EAAWA,EAASrF,IAAY,KACrDgG,EAAS/F,IAAY2E,EACrBoB,EAAS9F,IAAa6b,GAAa,KAC5B/V,EAEX,SAASqe,GAAkB7vB,EAAOlC,EAAMsU,EAAQ5T,EAAM8a,GAClD,IAAIzI,EAAWsF,KACXzF,EAAQoF,KACRyV,EAAgBvrB,EAAQ6K,GAG5BgG,EAAS0a,GAAiBnZ,EAC1B,IAAI3D,EAAQiC,EAAM1P,KAAKuqB,GACvB,GAAa,MAAT9c,EAAe,CACf,IAAI+B,EAAwBiF,KACxBhF,EAAWmF,KACfnH,EAAQiC,EAAM1P,KAAKuqB,GACfuE,GAAYjf,EAAU/S,EAAMytB,EAAe/sB,EAAM8a,EAAO,MAExD9I,KACIC,GAA2C,MAA/BD,EAAsBuC,OAChB,OAAjBtE,EAAMuE,QAAkD,IAA/BxC,EAAsB1S,KAI1C2S,IACND,EAAsBlV,KAAOmT,GAH7B+B,EAAsBuC,MAAQtE,GAY1C,OALwB,MAApBiC,EAAMiB,YAA+B,IAAT7T,IAC5B4S,EAAMiB,WAAalD,GAEvBiH,GAAyBjH,GACzBoH,IAAY,GACLpH,EAEX,SAASshB,GAAe/vB,EAAO4O,GAGH,MAApBA,EAAK9D,IAAO6P,OACZ/L,EAAK9D,IAAO6P,KAAOmV,GAAYlhB,EAAM,EAAc5O,EAAO,KAAM,KAAM,OAE1E6V,IAAY,GACZ,IAAIpH,EAAQG,EAAK9D,IAAO6P,KAExB,OADAjF,GAAyBjH,GAClBG,EAAKxD,IAAaqD,EAO7B,SAASuhB,GAAaphB,GAClB,IAAI8B,EAAQ9B,EAAK9D,IACb4F,EAAMoD,oBACNpD,EAAM2e,oBACN3e,EAAM6H,UAAU3c,KAAK,MACrB8U,EAAM1P,KAAKpF,KAAK,MAChBgT,EAAKhT,KAAK,OAoClB,SAASozB,GAAuBiB,EAAcvf,EAAO2B,EAASsc,GAC1D,IAIIxX,EAJA+Y,EAAYta,KACZua,EAAyB1a,KAI7B,GAHAI,IAAY,GACZH,GAAyB,MAEC,GAAtBua,EAAallB,IAEbqlB,GAAgB5gB,GAAeygB,SAG/B,IACIpa,IAAY,GACZH,GAAyB,MACzByB,EAAUH,GAAUiZ,EAAcA,EAAa7kB,KAC/CilB,KACA3f,EAAM5L,SAAS6pB,EAAItc,GACV,EAALsc,EACAD,GAAuBuB,EAAc,OAOrCA,EAAanlB,IAAOgJ,mBAAoB,EACxC8C,IAAqB,IAG7B,QAIIa,GAAUN,EADqC,IAApB,EAALwX,IAEtB9Y,GAAYqa,GACZxa,GAAyBya,IAcrC,SAASG,GAAYhZ,GAEjB,YADc,IAAVA,IAAoBA,EAAQ,GACzBD,GAAgBC,GAE3B,SAASiZ,GAA0B7hB,EAAU8hB,EAAoB7B,EAAI8B,GACjE,IAAIpgB,EAAkB2E,KAClBmC,EAAUH,GAAUtI,EAAUA,EAAStD,KAC3C,IACQiF,EAAgBqgB,OAChBrgB,EAAgBqgB,QAEhBD,IACAJ,KACAI,EAAW9B,GAAMgC,GAAejiB,GAAW8hB,IAE/C9B,GAAuBhgB,EAAUigB,GAErC,QACQte,EAAgB2D,KAChB3D,EAAgB2D,MAEpByD,GAAUN,IAYlB,SAASwZ,GAAe/hB,GACpB,OAAqB,EAAdA,EAAK7D,IAAgC,EACxC,EAKR,IAAI6lB,GAAoB,KACxB,SAASC,KACLD,GAAoB,8BAExB,SAASE,KACLF,GAAoB,iCAExB,SAASP,KACLO,GAAoB,KAaxB,SAAStJ,GAAQtnB,EAAOxB,EAAM8a,EAAO1G,GACjCme,GAAa/wB,EAAOxB,EAAM8a,EAAO1G,GACjCoe,KAyDJ,SAASD,GAAa/wB,EAAOxB,EAAM8a,EAAO1G,GACtC,IAAI/B,EAAWsF,KACXzF,EAAQoF,KAGR1D,EAAS6e,GAAczyB,GAEvBiQ,EAAQohB,GAAkB7vB,EAAO,EAAiBoS,EAAQ5T,EAAM8a,GAAS,MACzEA,GACA4X,GAAgB9e,EAAQkH,GAE5BmL,GAAYrS,EAAQ3D,EAAOoC,GAC3BsgB,GAA0BzgB,EAAOG,EAAU+B,GAIZ,IAl7GnC,SAASwe,IAEL,OAAO9gB,GAg7GH8gB,IACA7e,GAAgBH,EAAQvB,GA/6GhC,SAASwgB,IACL/gB,KAg7GA+gB,GAQJ,SAASJ,GAAczyB,EAAM8yB,GACzB,IACIC,EAAgBD,GAAsBvc,KAY1C,OAXI+K,GAAqByR,GACZA,EAAcC,cAAchzB,EAAMoyB,IAGjB,OAAtBA,GACSW,EAAcC,cAAchzB,GAG5B+yB,EAAcE,gBAAgBb,GAAmBpyB,GAWtE,SAAS2yB,GAA0BzgB,EAAOG,EAAU+B,EAAW8e,GAE3D,QAD0B,IAAtBA,IAAgCA,EAAoBljB,IAv7G5D,SAASmjB,IAEL,OAAOphB,GAs7GFohB,GAAL,CAEA,IAAInhB,EAAwBiF,KACxBkB,MAsnBR,SAASib,EAAkBlhB,EAAOG,EAAU1J,EAAYsH,EAAOmE,GAG3D,IAAIif,EAAajf,GAAckf,IAAK,GAAM,KACtCC,EAAgB,EACpB,GAAI5qB,EAAY,CACZ6qB,GAAcvjB,EAAOiC,EAAM1P,KAAKpH,OAAQuN,EAAWvN,QAOnD,IAAK,IAAIH,EAAI,EAAGA,EAAI0N,EAAWvN,OAAQH,KAC/BgL,EAAM0C,EAAW1N,IACbiL,mBACJD,EAAIC,kBAAkBD,GAG9B,IADAwtB,GAAgCvhB,EAAOjC,EAAOtH,EAAWvN,QAChDH,EAAI,EAAGA,EAAI0N,EAAWvN,OAAQH,IAAK,CACxC,IAAIgL,EACAyqB,EAAkBxe,EAAM1P,KAAKpH,OACjCs4B,GAAqBxhB,EAAOG,EAFxBpM,EAAM0C,EAAW1N,GAEsBgL,EAAI7M,SAC/Cm6B,GAAiBttB,EAAII,SACrBstB,GAAoBzhB,EAAM1P,KAAKpH,OAAS,EAAG6K,EAAKotB,GAGhDne,GAAewb,EAAiBzqB,EAAIa,OAAQb,EAAIe,QAASkL,IAG7DmhB,GA+HR,SAASO,EAAwB3jB,EAAOmE,EAAWif,GAC/C,GAAIjf,EAKA,IAJA,IAAIyf,EAAa5jB,EAAM4jB,cAId54B,EAAI,EAAGA,EAAImZ,EAAUhZ,OAAQH,GAAK,EAAG,CAC1C,IAAIuG,EAAQ6xB,EAAWjf,EAAUnZ,EAAI,IACrC,GAAa,MAATuG,EACA,MAAM,IAAI9D,MAAM,mBAAqB0W,EAAUnZ,EAAI,GAAK,gBAC5D44B,EAAWz2B,KAAKgX,EAAUnZ,GAAIuG,IAxIlCoyB,CAAwB3jB,EAAOmE,EAAWif,GAC9CS,GAAgB5hB,EAAOG,EAAUkhB,GAppB7BH,CAAkBlhB,EAAOG,EAuuBjC,SAAS0hB,EAAqB7hB,EAAOG,EAAUpC,GAE3C,IAAI+jB,EAAW9hB,EAAM+hB,kBACjBC,EAAU,KACd,GAAIF,EACA,IAAK,IAAI/4B,EAAI,EAAGA,EAAI+4B,EAAS54B,OAAQH,IAAK,CACtC,IAAIgL,EAAM+tB,EAAS/4B,GACf8sB,GAA2B9X,EAAOhK,EAAIgC,aACtCisB,IAAYA,MACZ7Z,GAAmBX,GAA+BzC,KAA4B5E,GAAWA,EAAUpM,EAAI3G,MACnGoR,GAAezK,IACG,KAAdgK,EAAMvE,OACNwV,GAA4BjR,GAChCA,EAAMvE,MAAQ,KAEdwoB,EAAQnyB,QAAQkE,IAGhBiuB,EAAQ92B,KAAK6I,IAK7B,OAAOiuB,EA9vBgCH,CAAqB7hB,EAAOG,EAAUL,GAAwBA,EAAuBoC,GAAa,MAypB7I,SAAS+f,EAAyBjiB,EAAOG,EAAUL,GAC/C,IAAIuD,EAAQvD,EAAsBtG,OAAS,GACvC8J,EAAMD,EAAQvD,EAAsBtG,MAAQ,MAC3CyM,MAA0B5C,EAAQC,GACnCkE,GAA+B1H,EAAuBK,GAE1D,IAAK,IAAIpX,EAAIsa,EAAOta,EAAIua,EAAKva,IAAK,CAC9B,IAAIgL,EAAMiM,EAAM1P,KAAKvH,GACjByV,GAAezK,IACfmuB,GAAkB/hB,EAAUL,EAAuB/L,GAGvDouB,GAAqBhiB,EADLmK,GAAkBtK,EAAM1P,KAAM6P,EAAUpX,EAAG+W,GACjB/L,EAAKhL,IAnqBnDk5B,CAAyBjiB,EAAOG,EAAUL,GAO9C,SAASsiB,EAAyBjiB,EAAUpC,EAAOijB,GAC/C,IAAIW,EAAa5jB,EAAM4jB,WACvB,GAAIA,EAEA,IADA,IAAIU,EAAatkB,EAAMzO,MAAQ,EACtBvG,EAAI,EAAGA,EAAI44B,EAAWz4B,OAAQH,GAAK,EAAG,CAC3C,IAAIuG,EAAQqyB,EAAW54B,EAAI,GACvB8B,GAAmB,IAAXyE,EACR0xB,EAAkBjjB,EAAOoC,GACzBA,EAAS7Q,GACb6Q,EAASkiB,KAAgBx3B,GAfjCu3B,CAAyBjiB,EAAUL,EAAuBkhB,IA8B9D,SAASsB,GAAiBvC,EAAY9rB,EAAQC,EAAMuC,EAAYG,EAAOZ,GAOnE,OAAO+pB,EAAWwC,gBACbxC,EAAWwC,cACRC,IAAa,EAAGzC,EAAY9rB,EAAQC,EAAMuC,EAAYG,EAAOZ,IAWzE,SAASwsB,GAAYC,EAAW1C,EAAY9rB,EAAQC,EAAMuC,EAAYG,EAAOZ,GAEzE,IAAI0Q,EAAoBvM,GAAgBlG,EAIpCyuB,EAAoBhc,EAAoBxS,EACxC2T,EA6BR,SAAS8a,EAAoBjc,EAAmBgc,GAC5C,IAAI7a,EAAY,IAAI1f,MAAMu6B,GACrBE,KAAK,KAAM,EAAGlc,GACdkc,KAAKzM,GAAWzP,GAGrB,OAFAmB,EAAU3M,KAAoB,EAC9B2M,EAAUlN,IAAiB+L,EACpBmB,EAnCS8a,CAAoBjc,EAAmBgc,GACvD,OAAO7a,EAAUzN,KACbhE,GAAIqsB,EACJ5a,UAAWA,EACXzT,SAAU2rB,EACV/pB,UAAWA,EACXiU,KAAM,KACN3Z,KAAMuX,EAAUhF,QAChB0P,YAAa,EACb7L,kBAAmBA,EACnBiY,kBAAmB+D,EACnBhE,oBAAqB,KACrBtb,mBAAmB,EACnBH,UAAW,KACXC,WAAY,KACZQ,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACdqP,iBAAkB,KAClBvN,QAAS,KACTtR,eAAgB,KAChBkO,WAAY,KACZuf,kBAAyC,mBAAftrB,EAA4BA,IAAeA,EACrEosB,aAA+B,mBAAVjsB,EAAuBA,IAAUA,EACtDqK,WAAY,MAWpB,SAASuf,GAAgB9e,EAAQkH,GAI7B,IAHA,IAAIlJ,EAAW2E,KACXye,EAAS1T,GAAqB1P,GAC9B3W,EAAI,EACDA,EAAI6f,EAAM1f,QAAQ,CACrB,IAAI2f,EAAWD,EAAM7f,GACrB,GAAiB,IAAb8f,EACA,MACJ,GAAIA,IAAasG,GACbpmB,GAAK,OAIL,GAAiB,IAAb8f,EAAmC,CAEnC,IAAIka,EAAena,EAAM7f,EAAI,GACzBi6B,EAAapa,EAAM7f,EAAI,GACvBk6B,EAAUra,EAAM7f,EAAI,GACxB+5B,EACIpjB,EACKwjB,aAAaxhB,EAAQshB,EAAYC,EAASF,GAC/CrhB,EAAOyhB,eAAeJ,EAAcC,EAAYC,GACpDl6B,GAAK,OAIDk6B,EAAUra,EAAM7f,EAAI,GACxB+5B,EACIpjB,EACKwjB,aAAaxhB,EAAQmH,EAAUoa,GACpCvhB,EAAOwhB,aAAara,EAAUoa,GAClCl6B,GAAK,GAarB,SAASq6B,GAAkBl8B,EAASm8B,IAlnHpC,SAASC,EAAmBp8B,GACxByY,GAAkBzY,EAmnHlBo8B,CAAmBp8B,GACnB,IAAIq8B,EAAkBr8B,EAAQooB,eAAe,KAAM,MAcnD,MAbyC,iBAAtB+T,EACdjU,GAAqBmU,GAClBA,EAAgBC,kBAAkBH,GAClCE,EAAgBE,cAAcJ,GAClCA,EAqBR,SAASK,GAASC,EAAWC,EAAYC,QAClB,IAAfA,IAAyBA,GAAa,GAC1C,IAAI1jB,EAAWsF,KACX1H,EAAQgH,KAGZ,GAAmB,IAAfhH,EAAM3Q,KAA0B,CAChC,IAAIsU,EAAS5D,GAAiBC,EAAOoC,GAEjCT,EAAW2E,KAGf,GAAI+K,GAAqB1P,GAErBokB,GAAe3jB,EADCT,EAASqkB,OAAOriB,EAAQiiB,EAAWC,QAGlD,CACD,IAAII,EAipChB,SAASC,EAA+BL,GACpC,OAAO,SAASM,EAA8Bl5B,IACpB,IAAlB44B,EAAW54B,KACXA,EAAEm5B,iBAEFn5B,EAAEo5B,aAAc,IAtpCMH,CAA+BL,GACrDliB,EAAOiW,iBAAiBgM,EAAWK,EAAiBH,GACpD,IAAIQ,EAAmB3e,GAAWvF,GAClCkkB,EAAiBn5B,KAAK84B,GAClB/d,MACAN,GAAgBxF,GAAUjV,KAAKy4B,EAAW5lB,EAAMzO,MAAO+0B,EAAiBn7B,OAAS,EAAG26B,SAK1E/2B,IAAlBiR,EAAMrJ,UAGNqJ,EAAMrJ,QAAU4vB,GAAwBvmB,EAAMvE,MAAO,IAEzD,IACI+qB,EADA7vB,EAAUqJ,EAAMrJ,QAEhBA,IAAY6vB,EAAa7vB,EAAQivB,KAQzC,SAASa,EAAarkB,EAAUzL,EAASgvB,GACrC,IAAK,IAAI36B,EAAI,EAAGA,EAAI2L,EAAQxL,OAAQH,GAAK,EAAG,CAExC,IAAI07B,EAAetkB,EAASzL,EAAQ3L,IAAI2L,EAAQ3L,EAAI,IAAI27B,UAAUhB,GAClEiB,GAAwBxkB,EAAUskB,EAAcA,EAAaG,cAX7DJ,CAAarkB,EAAUokB,EAAYX,GAqB3C,SAASe,GAAwBzmB,EAAMyD,EAASqR,GACvC9U,IACDA,EAAOuH,MACXC,GAAWxH,GAAMhT,KAAKyW,GAClBzD,EAAK9D,IAAOgJ,mBACZuC,GAAgBzH,GAAMhT,KAAK8nB,EAAW9U,EAAKtD,IAAS1R,OAAS,GAWrE,SAAS46B,GAAe5lB,EAAM8U,GAC1BtN,GAAWxH,GAAMhT,KAAK8nB,GAClB9U,EAAK9D,IAAOgJ,mBACZuC,GAAgBzH,GAAMhT,KAAKgT,EAAKtD,IAAS1R,OAAS,EAAG,MAI7D,SAASo3B,KACL,IAAIxgB,EAAwBiF,KACxBG,KACAC,IAAY,GAKZH,GADAlF,EAAwBA,EAAsBwC,QAIlD,IAAIrC,EAAiBoF,KACjBpF,GACAqF,GAAkBrF,EAAe4kB,QAAQ/kB,IAE7CqD,GAAoBrD,EAAsBtG,MAAO4L,MA3tHrD,SAAS0f,IACLllB,KA2tHAklB,GAWJ,SAASC,GAAiBz1B,EAAOxB,EAAMjD,EAAOgsB,GAC1C,GAAIhsB,IAAUsrB,GAAW,CACrB,IAAIhW,EAAWsF,KACX/F,EAAW2E,KACX2gB,EAAYnnB,GAAiBvO,EAAO6Q,GACxC,GAAa,MAATtV,EAEAukB,GAAqB1P,GAAYA,EAASulB,gBAAgBD,EAAWl3B,GACjEk3B,EAAUC,gBAAgBn3B,OAE7B,CAED,IAAIo3B,EAAwB,MAAbrO,EAAoBpZ,GAAY5S,GAASgsB,EAAUhsB,GAClEukB,GAAqB1P,GAAYA,EAASwjB,aAAa8B,EAAWl3B,EAAMo3B,GACpEF,EAAU9B,aAAap1B,EAAMo3B,KAiB7C,SAASC,GAAgB71B,EAAON,EAAUnE,EAAOgsB,GAC7C,GAAIhsB,IAAUsrB,GAAd,CAEA,IAIIiP,EAJAjlB,EAAWsF,KACXmR,EAAU/Y,GAAiBvO,EAAO6Q,GAClCpC,EAAQE,GAAS3O,EAAO6Q,GACxBklB,EAAYC,GAAsBvnB,GAEtC,GAAIsnB,IAAcD,EAAYC,EAAUr2B,IACpCu2B,GAAqBplB,EAAUilB,EAAWv6B,GACtC0T,GAAYR,IAwgCxB,SAASynB,EAAkBrlB,EAAUsiB,GACjC,IAAIvkB,EAAOC,GAAwBskB,EAAWtiB,GAC1B,EAAdjC,EAAK7D,MACP6D,EAAK7D,KAAU,GA1gCXmrB,CAAkBrlB,EAAU7Q,EAAQ6K,SAEvC,GAAmB,IAAf4D,EAAM3Q,KAA0B,CACrC,IAAIsS,EAAW2E,KAGfxZ,EAAqB,MAAbgsB,EAAoBA,EAAUhsB,GAASA,EAE/CukB,GAAqB1P,GACjBA,EAASya,YAAYvD,EAAS5nB,EAAUnE,GACvC+rB,EAAQuD,YAAcvD,EAAQuD,YAAYnrB,EAAUnE,GACjD+rB,EAAQ5nB,GAAYnE,IAapC,SAASu0B,GAAYjf,EAAU/S,EAAMytB,EAAe5L,EAASrG,EAAO6c,GAChE,IAAI3lB,EAAwBiF,KAExBzC,EAAS4C,KAAgBpF,EAAwBA,GAAyBA,EAAsBwC,OAIhGojB,EADmBpjB,GAAUnC,GAAYmC,IAAWnC,EAASzF,IAChC4H,EAAS,KAC1C,OACIlV,KAAMA,EACNkC,MAAOurB,EACPlT,cAAe+d,EAAUA,EAAQ/d,eAAiB,EAClDnO,MAAO,EACPsQ,gBAAiB,EACjBmF,QAASA,EACTrG,MAAOA,EACP+Y,WAAY,KACZgE,mBAAe74B,EACf2H,YAAQ3H,EACR4H,aAAS5H,EACT24B,OAAQA,EACR76B,KAAM,KACNyX,MAAO,KACPC,OAAQojB,EACRzT,SAAU,KACVkF,gBAAiB,KACjBjG,WAAY,MAOpB,SAASqU,GAAqBplB,EAAU1L,EAAQ5J,GAC5C,IAAK,IAAI9B,EAAI,EAAGA,EAAI0L,EAAOvL,OAAQH,GAAK,EAEpCoX,EAAS1L,EAAO1L,IAAI0L,EAAO1L,EAAI,IAAM8B,EAU7C,SAASy5B,GAAwBsB,EAAYC,GACzC,IAAI7lB,EAAQoF,KACRrC,EAAqB,KAAb6iB,EACRE,EAAY,KAChB,GAAI/iB,EAAQ,EAKR,IAJA,IAAIM,EAAQuiB,GAAc,GACtBtiB,EAAMD,EAAQN,EACdgjB,EAAwB,IAAdF,EACVG,EAAOhmB,EAAM1P,KACRvH,EAAIsa,EAAOta,EAAIua,EAAKva,IAAK,CAC9B,IAAIk9B,EAAeD,EAAKj9B,GACpBm9B,EAAmBH,EAAUE,EAAaxxB,OAASwxB,EAAavxB,QACpE,IAAK,IAAIkD,KAAcsuB,EACnB,GAAIA,EAAiB79B,eAAeuP,GAAa,CAE7C,IAAIuuB,EAAeD,EAAiBtuB,IADpCkuB,EAAYA,OAEgBz9B,eAAeuP,GAC7BkuB,EAAUluB,GAAY1M,KAAKnC,EAAGo9B,GACvCL,EAAUluB,IAAe7O,EAAGo9B,IAKjD,OAAOL,EAYX,SAASM,GAAiB92B,EAAO+2B,EAAcx7B,GAC3C,IAAIy7B,EAAOz7B,aAAiBurB,GAAsBvrB,IAAWA,GAjvCjE,SAAS07B,EAAgB5kB,EAASrS,EAAOk3B,GAErCtO,GAAgBvW,EADIrS,EAAQqS,EAAQ,GACI6kB,GAgvCxCD,CAAgBxP,GAAkBznB,EAAOmW,MAAgB4gB,EAAcC,GA8B3E,SAASG,GAAeC,EAAmBC,EAAmBC,GAC1D,IAAI7oB,EAAQgH,KACRsgB,EAAYC,GAAsBvnB,GACtC,IAAKA,EAAMoZ,gBAAiB,CACxB,IAAI0P,KAAgBxB,IAAaA,EAAUh9B,eAAe,UACtDw+B,IACA9oB,EAAMvE,OAAS,OAGnBuE,EAAMoZ,gBA7mDd,SAAS2P,EAA6BC,EAA0BC,EAA0BJ,EAAgBK,GACtG,IAAInQ,GAAwB,MACxBnV,EAAUgV,GAA0B,KAAMiQ,EAAgB9P,GAE1DoQ,KACAC,KACAC,EAAyB,EAC7B,GAAIJ,EAEA,IADA,IAAIK,GAAwB,EACnBt+B,EAAI,EAAGA,EAAIi+B,EAAyB99B,OAAQH,IAGjD,GAAU,KAFNoe,EAAI6f,EAAyBj+B,IAG7Bs+B,GAAwB,MAEvB,CACD,IAAIrN,EAAO7S,EACX,GAAIkgB,EAAuB,CACvB,IAAIx8B,EAAQm8B,IAA2Bj+B,GACvC+tB,EAAqB5rB,KAAKL,GAC1Bq8B,EAAalN,GAAQlD,EAAqB5tB,OAAS,OAGnDk+B,IACAF,EAAalN,GAAQ,EAMrCrY,EAAQ,GAA+BylB,EACvC,IAAIE,EAAuBL,KAAgC,KAC3D,GAAIF,EAEA,IADIM,GAAwB,EACnBt+B,EAAI,EAAGA,EAAIg+B,EAAyB79B,OAAQH,IAAK,CACtD,IAAIoe,EAEJ,GAAU,KAFNA,EAAI4f,EAAyBh+B,IAG7Bs+B,GAAwB,MAEvB,CACD,IAAI9M,EAAYpT,EACZkgB,GACIx8B,EAAQk8B,IAA2Bh+B,GACvC+tB,EAAqB5rB,KAAKL,GAC1Bs8B,EAAc5M,GAAazD,EAAqB5tB,OAAS,EACzDo+B,GAAwBA,EAAqBp8B,KAAKqvB,IAGlD4M,EAAc5M,GAAa,GAK3C,IAAIgN,EAAav/B,OAAOoK,KAAK80B,GACzBM,EAAax/B,OAAOoK,KAAK+0B,GACzBM,EAAuBF,EAAWr+B,OAClCw+B,EAAaH,EAAWr+B,OAASs+B,EAAWt+B,OAE5Cy+B,EAAyB,EAAbD,EAA4B,EAAI,EAGhD,IAAS3+B,EAAI,EAAmCA,EAAI4+B,EAAW5+B,IAC3D4Y,EAAQzW,KAAK,MAEjB,IACI08B,EAA0B,EAAbF,EAA4B,EAE7C,IAAS3+B,EAAI,EAAGA,EAAI2+B,EAAY3+B,IAAK,CACjC,IAAI8+B,EAAiB9+B,GAAK0+B,EAEtBK,GADA9N,EAAO6N,EAAiBL,EAAWz+B,EAAI0+B,GAAwBF,EAAWx+B,GACxD8+B,EAAiBV,EAAcnN,GAAQkN,EAAalN,IACtE+N,EAAejR,EAAqBgR,GACpCxO,EAAoB,EAAJvwB,EAAmB6+B,EACnCI,EAAqB,EAAJj/B,EATP,EAUVk/B,EAAc3K,GAAmBtD,EAAM6N,EAAgBjB,GAAkB,MAC7E7K,GAAQpa,EAASqmB,EAAgB/M,GAASgN,EAAaH,EAAiBxO,IACxEoC,GAAQ/Z,EAASqmB,EAAgBhO,GACjCX,GAAS1X,EAASqmB,EAAgB,MAClC5O,GAAsBzX,EAASqmB,EAAgB,GAE/CjM,GAAQpa,EAAS2X,EAAe2B,GADbgN,GAAgC,OAAjBF,EAAwB,EAAgB,GACnBD,EAAiBE,IACxEtM,GAAQ/Z,EAAS2X,EAAeU,GAChCX,GAAS1X,EAAS2X,EAAe,MACjCF,GAAsBzX,EAAS2X,EAAe,GAWlD,OALAyC,GAAQpa,EAAS,EAFAsZ,GAAS,EAAG,EAAG2M,IAC3BX,EAA2B,GAAoC,IAEpEpN,GAAgBlY,EAASmV,EAAqB5tB,OAAS,GACnDo+B,IACA3lB,EAAQ,GAA2C2lB,EAAqBp0B,KAAK,MAE1EyO,EA8gDqBmlB,CAA6BJ,EAAmBC,EAAmBC,EAAgBC,GAE/G,GAAIF,GAAqBA,EAAkBz9B,QACvCw9B,GAAqBA,EAAkBx9B,OAAQ,CAC/C,IAAIoG,EAAQyO,EAAMzO,MAAQ6K,GAC1B,GAAI+tB,GAAqBnqB,GAAQ,CAC7B,IACIoqB,EADiBpR,GAAkBznB,EAAOmW,MACV,GACpC8f,GAAqB9f,KAAe1H,EAAMtJ,OAAc,MAAG0zB,GAE/DC,GAAoB94B,IAiB5B,SAAS84B,GAAoB94B,GACzB,IAAI6Q,EAAWsF,KACXqY,EAA6D,IAA1B,EAAlB3d,EAAS9F,MA/xClC,SAASguB,EAA4B1mB,EAASjC,EAAU4oB,EAAYxK,EAAeyK,EAAcC,GAC7F,IAAIC,EAAqB,EACzB,GA6PJ,SAASC,EAAe/mB,GACpB,OAAOmZ,GAAQnZ,EAAS,GA9PpB+mB,CAAe/mB,GAAU,CAMzB,IALA,IAAIgnB,EAA4D,EAAtChnB,EAAQ,GAC9BD,EAASC,EAAQ,GACjBinB,EAAkBpN,GAAmB7Z,GACrCilB,EAAiBnL,GAAkB9Z,GACnCknB,EAAoB5M,GAAqBta,GACpC5Y,EAAI,EAAmCA,EAAI4Y,EAAQzY,OAAQH,GAAK,EAErE,GAAI+xB,GAAQnZ,EAAS5Y,GAAI,CACrB,IAAIixB,EAAOgC,GAAQra,EAAS5Y,GACxB8B,EAAQytB,GAAS3W,EAAS5Y,GAC1BuyB,EAAO9C,GAAY7W,EAAS5Y,GAC5B4vB,EAAgBmD,GAAiBna,EAAS5Y,GAC1C+/B,KAAwB,EAAPxN,GAEjByN,GAAoBD,IAAmBD,EACvCG,EAAen+B,EAFI9B,EAAI6/B,IAMFjP,GAAYqP,EAAcF,KAG/CE,EAAe1Q,GAAS3W,EADP4X,GAAsB+B,MAStC3B,GAAYqP,EAAcF,IAAmBC,IAC9CC,EAAe3N,GAAgB1Z,EAAS2Z,MAMzBwC,GAAgBkL,KAE3BF,EACAxO,GAAS5Y,EAAQsY,IAAMgP,EAA6BtpB,EAAU6oB,EAAc5P,GAI5EoB,GAASrY,EAAQsY,EAAMgP,EAActpB,EADb,EAAP4b,EAA2BsL,EAAiB,KACH4B,EAAa7P,IAG/EiB,GAASjY,EAAS5Y,GAAG,GAG7B,GAAI4/B,EAAqB,CACrB,IAAInR,EAAcrvB,MAAM2P,QAAQwwB,GAAcxpB,GAAewpB,GAAcA,EACvE/Q,EAAgBM,GAAiBlW,GACjCsnB,EAAoB1R,EAAc,GACtC,IAASxuB,EAAI,EAAqCA,EAAIkgC,EAAmBlgC,GAAK,EAA0C,CACpH,IAAI4yB,EAAUpE,EAAcxuB,GACxBmgC,EAAuBngC,EAAI,EAC3BogC,EAAY5R,EAAc2R,GAC9B,GAAIvN,EAAS,CACT,IAAInF,EAASmF,EAAQiC,YAAYuL,EAAWrL,QAC7BhxB,IAAX0pB,IACc,MAAVA,GACgBc,GAAkBC,EAAeC,EAAa9V,EAAQ8U,EAAQ0S,IACjET,IAEbU,GACAA,EAAU/V,gBAIb+V,GAGLA,EAAU/V,UAGlB0G,GAAuBnY,GAAS,GAEpCkY,GAAgBlY,GAAS,GAE7B,OAAO8mB,GA6sCkBJ,CAA4BtR,GAAkBznB,EAAO6Q,GAAWkE,KAAelE,EAAU2d,GACzF,GAErBsL,GADkBtqB,GAAeqB,GACP,GAuBlC,SAASkpB,GAAiB/5B,EAAOg6B,EAAYz+B,EAAO0+B,GAChD,IAAIC,EAAa,KACb3+B,IAII2+B,EAHAD,EAGa9rB,GAAY5S,GAAS0+B,EAOrB1+B,GAGrBqtB,GAAgBnB,GAAkBznB,EAAOmW,MAAgB6jB,EAAYE,GAuBzE,SAASC,GAAkBn6B,EAAOo6B,EAASrzB,GACvC,IAAI8J,EAAWsF,KACX1H,EAAQE,GAAS3O,EAAO6Q,GACxB2X,EAAiBf,GAAkBznB,EAAO6Q,GAC9C,GAAI+nB,GAAqBnqB,IAAU2rB,IAAYvT,GAAW,CACtD,IAAIgS,EAAiBrQ,EAAe,GAChC6R,GAAiBxB,EAAej/B,OAAUi/B,EAAiB,IAAO,IAAMuB,EAC5EnE,GAAqB9f,KAAe1H,EAAMtJ,OAAc,MAAGk1B,IArmDnE,SAASC,EAAiBjoB,EAASkoB,EAAcC,GAC7CA,EAAcA,GAAe,KAC7B,IAAIlT,EAAUjV,EAAQ,GAClBooB,EAAuBF,aAAwBzT,GAC/C,IAAIwC,GAA2BiR,EAAcjT,EAAS,GACtD,KACAoT,EAAsBF,aAAuB1T,GAC7C,IAAIwC,GAA2BkR,EAAalT,EAAS,GACrD,KACAqT,EAAeF,EACfF,EAAah/B,MACbg/B,EACAK,EAAcF,EAAsBF,EAAYj/B,MAAQi/B,EAExDK,EAAwBlO,GAAqBta,IAAYsoB,IAAiB9T,IAC1E8T,IAAiBtoB,EAAQ,GACzByoB,EAAwBF,IAAgB/T,IAAa+T,IAAgBvoB,EAAQ,GACjF,IAAIwoB,IAAyBC,EAA7B,CAEAzoB,EAAQ,GAA2CsoB,EACnDtoB,EAAQ,GAAmCuoB,EAC3C,IAAI1C,EAAaxP,GACbqS,GAAkB,EAClBrR,GAAyB,EACzBsR,EAA4BP,EAAuB,EAAwC,EAC3F9Q,GAAwBtX,EAASooB,EAAsB,KACvD5Q,GAAiBxX,EAASooB,EAAsB,GAChD/Q,GAAyB,GAE7B,IAAIuR,EAA2BP,EAAsB,EAAwC,EACzF/Q,GAAwBtX,EAASqoB,EAAqB,KACtD7Q,GAAiBxX,EAASqoB,EAAqB,GAC/ChR,GAAyB,GAIxBmR,IAC0B,iBAAhBF,GACPzC,EAAayC,EAAaO,MAAM,OAGhCH,GAAkB,GAGlB7C,EAAayC,EAAejiC,OAAOoK,KAAK63B,GAAgBjS,IAehE,IAZA,IAAI0R,EAAWO,GAAgBhS,GAC3BsP,EAAa2C,EAAcliC,OAAOoK,KAAK83B,GAAelS,GACtD3hB,EAAS6zB,GAAejS,GACxBwS,EAAoBlD,EAAWr+B,OAE/BwhC,GAAQ,EACRC,EAFkBnP,GAAmB7Z,GAGrCipB,EAAY,EACZC,EAAYtD,EAAWr+B,OAASs+B,EAAWt+B,OAIxCyhC,EAAWhpB,EAAQzY,QAAU0hC,EAAYC,GAAW,CACvD,IAAIC,EAAiBF,GAAaH,EAIlC,IAHqBK,IAAmBV,GAA2BU,IAAmBX,EAGpE,CACd,IAAIY,EAAoBD,EAAiBF,EAAYH,EAAoBG,EACrEI,EAAUF,EAAiBtD,EAAWuD,GAAqBxD,EAAWwD,GACtEE,EAAWH,IAAkBT,GAAyBX,EAAQsB,GAAY30B,EAAO20B,GACjFnP,EAAqBiP,EAAiBR,EAA4BC,EAEtE,IADIvQ,EAAOgC,GAAQra,EAASgpB,MACfK,EAAS,CAClB,IAAIngC,EAAQytB,GAAS3W,EAASgpB,GAC1BrP,EAAO9C,GAAY7W,EAASgpB,GAChCvR,GAAsBzX,EAASgpB,EAAU9O,GACrCpD,GAAgB6C,EAAMzwB,EAAOogC,KAC7B5R,GAAS1X,EAASgpB,EAAUM,GAC5BjS,EAAyBA,KAA4B6C,EAIjDpD,GAAgB6C,EAHhByM,EAAe1M,GAAgB1Z,EAAS2Z,GAGJ2P,KACpCrR,GAASjY,EAASgpB,GAAU,GAC5BD,GAAQ,QAIf,CACD,IAAIQ,EAAehP,GAAwBva,EAASqpB,EAASL,GAC7D,GAAIO,EAAe,EAAG,CAElB,IAAIC,EAAiB7S,GAAS3W,EAASupB,GACnCE,EAAgB5S,GAAY7W,EAASupB,GAEzC,GADA/O,GAAwBxa,EAASgpB,EAAUO,GACvCzS,GAAgB2S,EAAeD,EAAgBF,GAAW,CAC1D,IAAIlD,EAAe1M,GAAgB1Z,EAASypB,GAC5C/R,GAAS1X,EAASgpB,EAAUM,GACxBxS,GAAgB2S,EAAerD,EAAckD,KAC7CrR,GAASjY,EAASgpB,GAAU,GAC5B3R,EAAyBA,KAA4B6C,EACrD6O,GAAQ,QAIf,CAED,IAAIW,EAAU/N,GAAmB0N,EAASF,EAAgBrP,GAAkB9Z,IAC5EqX,EAAyBA,KAA4B6C,EACrDkB,GAAuBpb,EAASgpB,EAAUG,EAAgBE,EAASK,EAASJ,EAAUpP,GACtF6O,GAAQ,IAIpBC,GAAY,EACZC,IAKJ,KAAOD,EAAWhpB,EAAQzY,QAAQ,CAC9B,IACIoiC,EAA4C,IAAnB,GADzBhQ,EAAO9C,GAAY7W,EAASgpB,OAEXW,IAAmBlB,GAA2BkB,IAAmBnB,IAG9DxQ,GADhB9uB,EAAQytB,GAAS3W,EAASgpB,GACSW,KAEnC1R,GAASjY,EAASgpB,GAAU,GAC5BtR,GAAS1X,EAASgpB,EAAU,MAK5BvR,GAAsBzX,EAASgpB,EAD3B9O,EAAqByP,EAAiBhB,EAA4BC,GAEtEG,GAAQ,GAGhBC,GAAY,EAMhB,IADA,IAAI9T,EAAY4E,GAAkB9Z,GAC3BipB,EAAYC,GAAW,CAC1B,IAAIU,EAAiBX,GAAaH,EAElC,IADqBc,IAAmBnB,GAA2BmB,IAAmBpB,EACpE,CACVY,EAAoBQ,EAAiBX,EAAYH,EAAoBG,EAAzE,IACI5Q,EAAOuR,EAAiB/D,EAAWuD,GAAqBxD,EAAWwD,GACnElgC,EAAQ0gC,IAAkBlB,GAAyBX,EAAQ1P,GAAS3jB,EAAO2jB,GAC3EsB,EAA6D,EAAtDgC,GAAmBtD,EAAMuR,EAAgB1U,GAEpDlV,EAAQzW,KAAKowB,EAAMtB,EAAMnvB,EADrBgxB,EAAqB0P,EAAiBjB,EAA4BC,GAEtEG,GAAQ,EAEZE,IAEAF,GACA7Q,GAAgBlY,GAAS,GAEzBqX,GACAc,GAAuBnY,GAAS,IAu8CpCioB,CAAiB9R,EAAgB4R,EAASrzB,GAW9C,SAAS9E,GAAKjC,EAAOzE,GACjB,IAAIsV,EAAWsF,KAGX+lB,EAAala,GAAezmB,EAAOwZ,MACnCtG,EAAQohB,GAAkB7vB,EAAO,EAAiBk8B,EAAY,KAAM,MAExErmB,IAAY,GACZ4O,GAAYyX,EAAYztB,EAAOoC,GASnC,SAASsrB,GAAYn8B,EAAOzE,GACxB,GAAIA,IAAUsrB,GAAW,CAErB,IAAIuV,EAAY7tB,GAAiBvO,EAAOmW,MAGpC/F,EAAW2E,KACf+K,GAAqB1P,GAAYA,EAAS2Z,SAASqS,EAAWjuB,GAAY5S,IACtE6gC,EAAUC,YAAcluB,GAAY5S,IAkFhD,SAAS02B,GAAgCvhB,EAAOjC,EAAOqM,GAEnD,IAAIwhB,IAAiB7tB,EAAMzO,MAAQ6K,IAE/B4kB,EAAgB/e,EAAM1P,KAAKpH,QADkB,MAAxB6U,EAAM+L,kBAE9B9J,EAAM0e,sBAAwB1e,EAAM0e,yBAA2BxzB,KAAK0gC,EAAc7M,EAAe3U,GAOtG,SAASwX,GAAgB5hB,EAAOG,EAAUkhB,GACtC,IAAK,IAAIt4B,EAAI,EAAGA,EAAIs4B,EAAet4B,IAC/BoX,EAASjV,KAAKirB,IACdnW,EAAM6H,UAAU3c,KAAKirB,IACrBnW,EAAM1P,KAAKpF,KAAK,MAMxB,SAASi3B,GAAqBhiB,EAAU0rB,EAAW93B,EAAKyqB,GACpD,IAAI1e,EAAwBiF,KAC5B+mB,GAAyB3rB,EAAUL,EAAuB+rB,EAAW93B,GAEjE+L,GAAyBA,EAAsB8I,OAgJvD,SAASmjB,EAAmBC,EAAgBlrB,EAAUrM,EAAQsJ,GAC1D,IAAIkuB,EAAmBluB,EAAM4nB,oBACJ74B,IAArBm/B,GAAkCD,GAAkBC,EAAiB/iC,UACrE+iC,EAwBR,SAASC,EAAsBF,EAAgBv3B,EAAQsJ,GACnD,IAAIkuB,EAAmBluB,EAAM4nB,gBAAkB5nB,EAAM4nB,kBACrDsG,EAAiBD,GAAkB,KAGnC,IAFA,IAAIpjB,EAAQ7K,EAAM6K,MACd7f,EAAI,EACDA,EAAI6f,EAAM1f,QAAQ,CACrB,IAAI2f,EAAWD,EAAM7f,GACrB,GAAiB,IAAb8f,EACA,MACJ,GAAiB,IAAbA,EAAJ,CAKA,IAAIsjB,EAAoB13B,EAAOoU,GAC3BujB,EAAYxjB,EAAM7f,EAAI,QACA+D,IAAtBq/B,IACoBF,EAAiBD,KAAoBC,EAAiBD,QAC5D9gC,KAAKihC,EAAmBC,GAE1CrjC,GAAK,OATDA,GAAK,EAWb,OAAOkjC,EA9CgBC,CAAsBF,EAAgBv3B,EAAQsJ,IAErE,IAAI4nB,EAAgBsG,EAAiBD,GACrC,GAAIrG,EACA,IAAK,IAAI58B,EAAI,EAAGA,EAAI48B,EAAcz8B,OAAQH,GAAK,EAC3C+X,EAAS6kB,EAAc58B,IAAM48B,EAAc58B,EAAI,GAvJnDgjC,CAAmBvN,EAAiBqN,EAAW93B,EAAIU,OAAQqL,GAE3D/L,EAAIO,gBACJP,EAAIO,eAAekqB,GAEnBhgB,GAAezK,KACKoK,GAAwB2B,EAAsBxQ,MAAO6Q,GAC3DtF,IAAWgxB,GAMjC,SAASC,GAAyB3rB,EAAUL,EAAuB+rB,EAAW93B,GAC1E,IAAI2N,EAAS5D,GAAiBgC,EAAuBK,GAGrD0B,GAAgBgqB,EAAW1rB,GACvBuB,GACAG,GAAgBH,EAAQvB,GAGN,MAAlBpM,EAAIS,YAAoD,GAA9BsL,EAAsB1S,MAChDozB,GAAgB9e,EAAQ3N,EAAIS,YAiCpC,SAAS63B,GAA4BvsB,GAGjC,IAAIE,EAAQoF,MACXpF,EAAMwC,aAAexC,EAAMwC,gBAAkBtX,KAAK4U,EAAsBxQ,OA8B7E,SAASmyB,GAAoBnyB,EAAOyE,EAAKotB,GACjCA,IACIptB,EAAIY,WACJwsB,EAAWptB,EAAIY,UAAYrF,GAC3ByE,EAAIK,WACJ+sB,EAAW,IAAM7xB,IAQ7B,SAASgyB,GAAcvjB,EAAOzO,EAAOg9B,GAMjCvuB,EAAMvE,MAAQlK,GAAS,GAA+C,KAJ1DyO,EAAMvE,MAKd8yB,EACJvuB,EAAM+L,gBAAkBxa,EAE5B,SAASkyB,GAAqBxhB,EAAOG,EAAUpM,EAAKw4B,GAChDvsB,EAAM1P,KAAKpF,KAAK6I,GAChB,IAAIy4B,EAAsB,IAAI9vB,GAAoB6vB,EAAkB/tB,GAAezK,GAAM,MACzFiM,EAAM6H,UAAU3c,KAAKshC,GACrBrsB,EAASjV,KAAKshC,GArDlB,SAASC,EAAyBzsB,EAAOjM,GAGrCiM,EAAM0e,oBAAoBxzB,KAAK6I,EAAIM,cAAgB8W,IAC/CpX,EAAII,UACJ6L,EAAM0e,oBAAoBxzB,KAAK6I,EAAII,UAiDvCs4B,CAAyBzsB,EAAOjM,GAEpC,SAASmuB,GAAkB/hB,EAAUL,EAAuB/L,GACxD,IAAI2N,EAAS5D,GAAiBgC,EAAuBK,GACjDH,EAAQsiB,GAAiBvuB,EAAIK,SAAUL,EAAIE,OAAQF,EAAIG,KAAMH,EAAI8B,cAAe9B,EAAI+B,SAAU/B,EAAIiC,WAGlG+a,EAAgB2b,GAAcvsB,EAAUL,EAAsBxQ,MAAO4vB,GAAgB5a,KAAqBgL,eAAe5N,EAAQ3N,GAAMiM,EAAO,KAAMjM,EAAI2B,OAAS,EAAgB,EAAqB6O,OAC1MwM,EAAcrW,IAAaoF,EAG3BiR,EAActW,IAAQ0F,EAASL,EAAsBxQ,OACrD6Q,EAASL,EAAsBxQ,OAASyhB,EACpC9K,MACAomB,GAA4BvsB,GA2EpC,SAAS6sB,GAAiBC,EAAYpmB,EAAWxC,EAAatC,EAAQmrB,GAClE,OACIA,GAAyB,EAAI,KAE7B7oB,EACA,KACA,KACA4oB,EACAlrB,EACA2R,GAAgB7M,EAAWxC,IAoBnC,SAAS5P,GAAS9E,EAAOywB,EAAY9rB,EAAQC,EAAM+a,EAASrG,EAAO1G,EAAW8e,GAC1E,IAAI7gB,EAAWsF,KACXzF,EAAQoF,KAERrH,EAAQ+uB,GAAkBx9B,EAAO2f,GAAW,KAAMrG,GAAS,MAC3D3C,OACAlI,EAAM0nB,OAASjD,IAAa,EAAGzC,EAAY9rB,EAAQC,EAAM8L,EAAM+hB,kBAAmB/hB,EAAM6iB,aAAc,OAE1GpC,GAA0BzgB,EAAOG,EAAU+B,EAAW8e,GACtD,IAAI/gB,EAAiBoF,KACjBvF,EAAwBiF,KACxB9E,GACAqF,GAAkBrF,EAAe4kB,QAAQ/kB,IAE7CqD,GAAoBpF,EAAMvE,MAAOwG,GACjCmF,IAAY,GAWhB,SAAS+K,GAAU5gB,GACf,IAAIyO,EAAQ+uB,GAAkBx9B,EAAO,KAAM,MAC3C2W,OAA2BlI,EAAM0nB,WACjCtgB,IAAY,GAEhB,SAAS2nB,GAAkBx9B,EAAO2f,EAASrG,GACvC,IAAIzI,EAAWsF,KAEXoV,EAAgBvrB,EAAQ6K,GACxB4yB,EAAU1oB,KAAc2oB,cAAwC,IAEhEjvB,EAAQohB,GAAkB7vB,EAAO,EAAmBy9B,EAAS9d,EAASrG,GACtEkI,EAAa3Q,EAAS0a,GACtB8R,GAAiBxsB,EAAS0a,GAAgB9c,EAAOoC,EAAU4sB,GAC/DhZ,GAAYgZ,EAAShvB,EAAOoC,GAG5BusB,GAAcvsB,EAAU7Q,EAAQ6K,GAAe2W,GAC/C,IAAI7Q,EAAiBoF,KAMrB,OALIpF,IAEA6Q,EAAWtW,IAAWyF,EAAeiQ,aAGlCnS,EAOX,SAASkvB,GAAsB39B,GAC3B,IAAI6Q,EAAWsF,KACXzF,EAAQoF,KAEZJ,GAD4BtH,GAAapO,EAAO0Q,EAAM1P,OAGtD6U,IAAY,GACZhF,EAAS7Q,EAAQ6K,IAAewC,IAAgB,EAC3CmJ,MAGD/B,GAAiB5D,EAAUH,EAAOwF,MAQ1C,SAAS0nB,KACL,IAAIptB,EAAwBiF,KACxBG,KACAC,IAAY,GAMZH,GADAlF,EAAwBA,EAAsBwC,QAOlD,IAHA,IAAIwO,EAAarL,KAAc3F,EAAsBxQ,OACjD69B,EAAYrc,EAAWnU,IAEpBwwB,EAAYrc,EAAWlU,IAAO1T,QACjCipB,GAAWrB,EAAYhR,EAAuBqtB,GA2DtD,SAASC,GAAkBC,EAAap5B,EAAQC,GAC5C,IAAIiM,EAAWsF,KACX3F,EAAwBiF,KAExBuoB,EAAgD,IAA/BxtB,EAAsB1S,KACvC0S,EAAsBwC,OACtBxC,EACAgR,EAAa3Q,EAASmtB,EAAeh+B,OAErCiwB,EAnCR,SAASgO,EAAYzc,EAAY0c,EAAgBC,EAAUJ,GAEvD,IADA,IAAIxb,EAAQf,EAAWlU,IACd7T,EAAI0kC,EAAU1kC,EAAI8oB,EAAM3oB,OAAQH,IAAK,CAC1C,IAAI2kC,EAAmB7b,EAAM9oB,GAAGqR,IAAOhE,GACvC,GAAIs3B,IAAqBL,EACrB,OAAOxb,EAAM9oB,GAEZ,KAAI2kC,EAAmBL,GAQxB,MANAlb,GAAWrB,EAAY0c,EAAgBzkC,GAS/C,OAAO,KAiBYwkC,CAAYzc,EAAYwc,EAAgBxc,EAAWnU,IAAe0wB,GAqBrF,OApBI9N,GACApa,IAAY,GACZmB,GAAUiZ,EAAcA,EAAanlB,IAAO6P,QAI5CsV,EAAeL,GAAgB7a,KA6BvC,SAASspB,EAAyBlL,EAAWxuB,EAAQC,EAAMoO,GACvD,IAAItC,EAAQoF,KAERwoB,EAAkBtrB,EAAOmjB,OAM7B,OAHIhD,GAAamL,EAAgB1kC,QAAwC,MAA9B0kC,EAAgBnL,MACvDmL,EAAgBnL,GAAaD,GAAYC,EAAW,KAAMxuB,EAAQC,EAAM8L,EAAM+hB,kBAAmB/hB,EAAM6iB,aAAc,OAElH+K,EAAgBnL,GAtC2BkL,CAAyBN,EAAap5B,EAAQC,EAAMo5B,GAAiB,KAAM,EAAqB/oB,MAC1IuM,EAAWtW,MACX+kB,EAAa/kB,IAAWsW,EAAWtW,IAASqzB,cAEhDxO,GAAegO,EAAa9N,GAC5BjZ,GAAUiZ,EAAcA,EAAanlB,IAAO6P,OAE5C6G,IACItL,MAEAkM,GAAW6N,EAAczO,EAAY3Q,EAAU2Q,EAAWnU,KAAgB,GAE9EmU,EAAWnU,OAERsjB,GAAeV,GA2B1B,SAASuO,KACL,IAAI3tB,EAAWsF,KACXsoB,EAAW5tB,EAASzF,IACxBsjB,GAAuB7d,EAAU,MACjC4G,GAAU5G,EAAS7F,KACnB0K,GAAyB+oB,GACzB5oB,IAAY,GAQhB,SAAS8Z,GAAiB+O,EAAsB9P,EAAyBD,GAErE,IAAIjgB,EAAWG,GAAwB6vB,EAAsBvoB,MAGzDwoB,GAAajwB,IAA+B,EAAlBA,EAAS3D,MACnC6jB,GA8BR,SAASgQ,EAAsBnd,GAE3B,IADA,IAAIod,EAAiBpd,EAAc3W,IAC1BrR,EAAIgoB,EAAc7nB,OAAQH,EAAIolC,EAAetmB,UAAU3e,OAAQH,IACpEgoB,EAAchoB,GAAKolC,EAAetmB,UAAU9e,GAjCjBmlC,CAAsBlwB,GACjDowB,GAAsBpwB,EAAUA,EAASnD,IAAUojB,IAoC3D,SAASgQ,GAAa/vB,GAClB,OAA4C,IAAtB,EAAdA,EAAK7D,KAuBjB,SAASg0B,GAAct4B,EAAWggB,GAC9B,IAAIuY,EAAgBtd,GAAkBvL,MAAe/K,IACrD,IAAK4zB,EAAcpd,WAMf,IALA,IACIqd,EAAQD,EAAcpd,WACtB,IAAI/oB,MAFc4N,EAAYA,EAAU7M,OAAS,EAAI,GAE1B05B,KAAK,MAChC4L,EAAQD,EAAM1rB,QACd4rB,EAAiBH,EAAcjsB,MACT,OAAnBosB,GAAyB,CAC5B,IAAIC,EAAc34B,EAAY+f,GAAsB2Y,EAAgB14B,EAAWggB,GAAiB,EAC5F4Y,EAAWF,EAAe7jC,KAC1B4jC,EAAME,GACNF,EAAME,GAAa9jC,KAAO6jC,GAG1BF,EAAMG,GAAeD,EACrBA,EAAe7jC,KAAO,MAE1B4jC,EAAME,GAAeD,EACrBA,EAAiBE,GAW7B,IAAIC,MAUJ,SAAS1d,GAAW9S,EAAWywB,EAAejmB,QACpB,IAAlBimB,IAA4BA,EAAgB,GAChD,IAAI1uB,EAAWsF,KACXiP,EAAkByK,GAAkB/gB,EAAW,EAAoB,KAAM,KAAMwK,GAAS,MAEzD,OAA/B8L,EAAgBxD,aAChBwD,EAAgBxD,WAAa2d,GAEjC1pB,IAAY,GAOZ,IALA,IAAI4L,EAAgBC,GAAkB7Q,GAElC2uB,EADgB/d,EAAcrW,IACAwW,WAAW2d,GACzCE,EAAgBhe,EAAczW,IAC9BoW,GAAuB,EACpBoe,GAAe,CAClB,GAA2B,IAAvBA,EAAc1hC,KAA6B,CAE3C,IAAI4hC,EAAuBhe,GAAkB+d,GAEzCE,EADuBD,EAAqBt0B,IACFwW,WAAW4d,EAAc5d,YACvE,GAAI+d,EAAoB,CACpBL,KAAwBle,GAAuBoe,EAC/CF,KAAwBle,GAAuBqe,EAC/CD,EAAgBG,EAChBF,EAAgBC,EAAqB10B,IACrC,eAMJw0B,EAAct1B,OAAS,KACvBgb,GAAoBsa,EAAepa,EAAiBvU,EAAU4uB,GAIvC,OAAvBD,EAAclkC,MAAiBmkC,IAAkBhe,EAAczW,MAC/Dy0B,EAAgBH,GAAsBle,KACtCoe,EAAgBF,GAAsBle,MAE1Coe,EAAgBA,EAAclkC,MActC,SAAS8hC,GAAc1oB,EAAakrB,EAAmBrc,GACnD,IAAI7S,EAAQoF,KACRhC,EAAoB6C,KAQxB,OAPIjC,EAAY/I,IACZ+I,EAAY/I,IAAMV,IAAQsY,EAErBzP,IACLpD,EAAMuS,WAAa2c,GAEvBlrB,EAAY/I,IAAQ4X,EACbA,EAuBX,SAASsc,GAAcjxB,GAEnB,IADA,IAAI8F,EAAc9F,EACX8F,KAAsC,GAArBA,EAAY3J,MAChC2J,EAAY3J,KAAU,EACtB2J,EAAcA,EAAY1J,IAE9B0J,EAAY3J,KAAU,EAGtB+uB,GADkBplB,EAAYnJ,IACJ,GAa9B,SAASuuB,GAAa5R,EAAahe,GAC/B,IAGQ41B,EAHJC,EAAyC,IAAtB7X,EAAYhe,MACnCge,EAAYhe,OAASA,EACjB61B,GAAoB7X,EAAY8X,OAASvR,KAEzCvG,EAAY8X,MAAQ,IAAIv9B,QAAQ,SAAUpI,GAAK,OAAOylC,EAAQzlC,IAC9D6tB,EAAY+X,UAAU,WAKlB,GAJwB,EAApB/X,EAAYhe,QACZge,EAAYhe,QAAS,EACrBkmB,GAAgBlI,IAEI,EAApBA,EAAYhe,MAA8B,CAC1Cge,EAAYhe,QAAS,EACrB,IAAIoe,EAAgBJ,EAAYI,cAC5BA,GACAA,EAAcrB,eAGtBiB,EAAY8X,MAAQvR,GACpBqR,EAAM,SAIlB,SAAS1P,GAAgBlI,GACrB,IAAK,IAAIzuB,EAAI,EAAGA,EAAIyuB,EAAYhV,WAAWtZ,OAAQH,IAAK,CACpD,IAAIymC,EAAgBhY,EAAYhV,WAAWzZ,GAC3C82B,GAA0BhhB,GAAqB2wB,GAAgBA,EAAe,IAgBtF,SAASC,GAAcv+B,GACnBk9B,GAAsBjsB,GAA2BjR,GAAYA,EAAW,MAO5E,SAASw+B,GAAwB9wB,GAC7B8gB,GAAgB9gB,EAAU/D,KAoC9B,SAASuzB,GAAsBpwB,EAAU9M,EAAW+sB,GAChD,IAAI0R,EAAY3xB,EAAS5D,IACrBqM,EAAUH,GAAUtI,EAAUA,EAAStD,KACvCqlB,EAAa4P,EAAUv7B,SACvB4B,EAAY25B,EAAU35B,UAC1B,IACI2pB,KAUR,SAASiQ,EAAgB55B,EAAW65B,EAAaC,EAAW5+B,GACpD8E,IAA8B,IAAhB65B,GACG,OAAhBA,GAAqC,EAAZC,IAC1B95B,EAAU,EAAgB9E,GAZ1B0+B,CAAgB55B,EAAWioB,EAAIjgB,EAAS3D,IAAQnJ,GAChD6uB,EAAW9B,GAAMgC,GAAejiB,GAAW9M,GAC3C8sB,GAAuBhgB,EAAUigB,GAazC,SAAS8R,EAAgB/5B,EAAWwD,EAAOtI,GACnC8E,GAAqB,EAARwD,GACbxD,EAAU,EAAgB9E,GAd1B6+B,CAAgB/5B,EAAWgI,EAAS3D,IAAQnJ,GAEhD,QACI6V,GAAUN,EAAgB,IAAPwX,IAwC3B,SAASvvB,GAAK7D,GACV,OAAOmlC,GAAevqB,KAAc9K,MAAkB9P,GAASA,EAAQsrB,GAc3E,SAAS8Z,GAAelhC,GAIpB,IADA,IAAImhC,GAAY,EACPnnC,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,GAAK,EAEpCinC,GAAevqB,KAAc9K,MAAkB5L,EAAOhG,MAAQmnC,GAAY,GAE9E,IAAKA,EACD,OAAO/Z,GAGX,IAAIga,EAAUphC,EAAO,GACrB,IAAShG,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,GAAK,EACpConC,GAAW1yB,GAAY1O,EAAOhG,IAAMgG,EAAOhG,EAAI,GAEnD,OAAOonC,EASX,SAASC,GAAeC,EAAQC,EAAI/G,GAEhC,OADgByG,GAAevqB,KAAc9K,MAAkB21B,GAC5CD,EAAS5yB,GAAY6yB,GAAM/G,EAASpT,GAG3D,SAASoa,GAAeF,EAAQC,EAAIE,EAAIC,EAAIlH,GACxC,IAAIppB,EAAWsF,KACXyqB,EAAYQ,GAAgBvwB,EAASxF,IAAgB21B,EAAIG,GAE7D,OADAtwB,EAASxF,KAAkB,EACpBu1B,EAAYG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMlH,EAASpT,GAGlF,SAASwa,GAAeN,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAItH,GAChD,IAAIppB,EAAWsF,KACXyqB,EAAYY,GAAgB3wB,EAASxF,IAAgB21B,EAAIG,EAAII,GAEjE,OADA1wB,EAASxF,KAAkB,EACpBu1B,EAAYG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMtH,EACxFpT,GAGR,SAAS4a,GAAeV,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAI1H,GACxD,IAAIppB,EAAWsF,KACXyqB,EAAYgB,GAAgB/wB,EAASxF,IAAgB21B,EAAIG,EAAII,EAAII,GAErE,OADA9wB,EAASxF,KAAkB,EACpBu1B,EACHG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMG,EAAKvzB,GAAYwzB,GACtF1H,EACJpT,GAGR,SAASgb,GAAed,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAI9H,GAChE,IAAIppB,EAAWsF,KACXyqB,EAAYgB,GAAgB/wB,EAASxF,IAAgB21B,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYF,GAAe7vB,EAASxF,IAAiB,EAAG02B,IAAOnB,EAC/D/vB,EAASxF,KAAkB,EACpBu1B,EACHG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMG,EAAKvzB,GAAYwzB,GAAMG,EAC5F3zB,GAAY4zB,GAAM9H,EACtBpT,GAGR,SAASmb,GAAejB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIjI,GACxE,IAAIppB,EAAWsF,KACXyqB,EAAYgB,GAAgB/wB,EAASxF,IAAgB21B,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYQ,GAAgBvwB,EAASxF,IAAiB,EAAG02B,EAAIG,IAAOtB,EACpE/vB,EAASxF,KAAkB,EACpBu1B,EACHG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMG,EAAKvzB,GAAYwzB,GAAMG,EAC5F3zB,GAAY4zB,GAAME,EAAK9zB,GAAY+zB,GAAMjI,EAC7CpT,GAGR,SAASsb,GAAepB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIpI,GAChF,IAAIppB,EAAWsF,KACXyqB,EAAYgB,GAAgB/wB,EAASxF,IAAgB21B,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYY,GAAgB3wB,EAASxF,IAAiB,EAAG02B,EAAIG,EAAIG,IAAOzB,EACxE/vB,EAASxF,KAAkB,EACpBu1B,EACHG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMG,EAAKvzB,GAAYwzB,GAAMG,EAC5F3zB,GAAY4zB,GAAME,EAAK9zB,GAAY+zB,GAAME,EAAKj0B,GAAYk0B,GAAMpI,EACpEpT,GAGR,SAASyb,GAAevB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIvI,GACxF,IAAIppB,EAAWsF,KACXyqB,EAAYgB,GAAgB/wB,EAASxF,IAAgB21B,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYgB,GAAgB/wB,EAASxF,IAAiB,EAAG02B,EAAIG,EAAIG,EAAIG,IAAO5B,EAC5E/vB,EAASxF,KAAkB,EACpBu1B,EACHG,EAAS5yB,GAAY6yB,GAAME,EAAK/yB,GAAYgzB,GAAMG,EAAKnzB,GAAYozB,GAAMG,EAAKvzB,GAAYwzB,GAAMG,EAC5F3zB,GAAY4zB,GAAME,EAAK9zB,GAAY+zB,GAAME,EAAKj0B,GAAYk0B,GAAME,EAAKp0B,GAAYq0B,GAAMvI,EAC3FpT,GAGR,SAAS8D,GAAM3qB,EAAOzE,GAClB,IAAImV,EAAQoF,KAGRyV,EAAgBvrB,EAAQ6K,GACxB0gB,GAAiB7a,EAAM1P,KAAKpH,SAC5B8W,EAAM1P,KAAKuqB,GAAiB,MAEhCpV,KAAcoV,GAAiBhwB,EAUnC,SAASknC,GAAUziC,GAEf,OAAOoO,GAAapO,EA/5JxB,SAAS0iC,IAEL,OAAOltB,GA45JektB,IAG1B,SAASC,GAAcC,GAInB,OAHezsB,KAGCtK,IAAiB+2B,GAGrC,SAASC,GAAK7iC,GACV,OAAOoO,GAAapO,EAAOmW,MAG/B,SAAS2sB,GAAWC,GAKhB,OAJe5sB,KAIC4sB,GAGpB,SAASrC,GAAeqC,EAAcxnC,GAClC,IAAIsV,EAAWsF,KACXI,EAAqBC,KAGzB,GAAI3F,EAASkyB,KAAkBlc,GAC3BhW,EAASkyB,GAAgBxnC,MAExB,CAAA,IApyLT,SAASynC,EAAYz/B,EAAG9K,EAAG8d,GAMvB,QAAShT,GAAMA,GAAK9K,GAAMA,IAAM8K,IAAM9K,EA8xL7BuqC,CAAYnyB,EAASkyB,GAAexnC,GAKzC,OAAO,GAz5Hf,SAAS0nC,EAA0BryB,EAAc2F,EAAoBuB,EAAUiR,GAC3E,GAAIxS,EAAoB,CACpB,IAAI2sB,EAAM,8GAAgHprB,EAAW,sBAAwBiR,EAAY,KAOzK,MANInY,IACAsyB,GACI,wJAIF,IAAIhnC,MAAMgnC,IA44HhBD,CAA0B/sB,KAAmBK,EAAoB1F,EAASkyB,GAAexnC,GACzFsV,EAASkyB,GAAgBxnC,EAK7B,OAAO,EAGX,SAAS4nC,GAAcJ,EAAcxnC,GACjC,OAAO4a,KAAc4sB,GAAgBxnC,EAGzC,SAAS6lC,GAAgB2B,EAAcK,EAAMC,GACzC,IAAIzC,EAAYF,GAAeqC,EAAcK,GAC7C,OAAO1C,GAAeqC,EAAe,EAAGM,IAASzC,EAGrD,SAASY,GAAgBuB,EAAcK,EAAMC,EAAMC,GAC/C,IAAI1C,EAAYQ,GAAgB2B,EAAcK,EAAMC,GACpD,OAAO3C,GAAeqC,EAAe,EAAGO,IAAS1C,EAGrD,SAASgB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GACrD,IAAI3C,EAAYQ,GAAgB2B,EAAcK,EAAMC,GACpD,OAAOjC,GAAgB2B,EAAe,EAAGO,EAAMC,IAAS3C,EAE5D,SAAS4C,GAAgB9/B,EAAOwG,GAG5B,YAFc,IAAVA,IAAoBA,EAAQ,GAChCxG,EAAQuY,GAAkBvY,GACnB8V,GAAsB/D,KAA4BU,KAAezS,EAAOwG,GAKnF,SAASu5B,GAAgBpqB,GACrB,OAAOD,GAAoB3D,KAA4B4D,GAM3D,SAASqqB,GAAqBC,EAAWrU,GACrC,IAAIze,EAAWsF,KACXzF,EAAQoF,KACR8tB,GAA6B/yB,EAAShF,MAAqBgF,EAAShF,SAAwBjQ,KAAK+nC,GACrG,GAAIhtB,KAAwB,CACxB,IAAIktB,EAAsBnzB,EAAM1L,iBAAmB0L,EAAM1L,mBAErDsqB,KAD0B5e,EAAM1L,eAAepL,OAAS8W,EAAM1L,eAAe0L,EAAM1L,eAAepL,OAAS,IAAM,IAEjHiqC,EAAoBjoC,KAAK0zB,EAAuBsU,EAA4B,IAIxF,IAAIE,GAAgBrV,GACpB,SAASuH,GAAsBvnB,GAG3B,OAAIA,QACqBjR,IAAjBiR,EAAMtJ,SAENsJ,EAAMtJ,OAAS6vB,GAAwBvmB,EAAMvE,MAAO,IAEjDuE,EAAMtJ,QAEV,KAEX,SAASyzB,GAAqBnqB,GAC1B,OAAqB,MAAdA,EAAMvE;;;;;;;OAUjB,IA4PI65B,GAsBAC,GAuDAC,GAzUAC,GAAyB,WACzB,SAASA,EAAQC,EAAOC,EAAUC,GAC9B/rC,KAAK8rC,SAAWA,EAChB9rC,KAAK+rC,gBAAkBA,EACvB/rC,KAAKgsC,QAAU,KACfhsC,KAAKisC,kBAAoB,KAIzBjsC,KAAKksC,WAAa,KAClBlsC,KAAK6rC,MAAQA,EAoNjB,OAlNAzrC,OAAO+B,eAAeypC,EAAQ/qC,UAAW,WACrCiR,IAAK,WAAc,OAAO9R,KAAK8rC,SAAW9rC,KAAK8rC,SAAW9rC,KAAKmsC,kBAC/DC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeypC,EAAQ/qC,UAAW,aACrCiR,IAAK,WACD,OAAoD,KAAxB,GAApB9R,KAAK6rC,MAAMp5B,MAEvB25B,YAAY,EACZC,cAAc,IAElBT,EAAQ/qC,UAAU2qB,QAAU,WACpBxrB,KAAKisC,mBAAqB5F,GAAarmC,KAAK6rC,SAC5C7rC,KAAKisC,kBAAkBK,OAAOtsC,KAAKisC,kBAAkBvgC,QAAQ1L,OAC7DA,KAAKisC,kBAAoB,MAE7BxhB,GAAazqB,KAAK6rC,QAEtBD,EAAQ/qC,UAAU+M,UAAY,SAAU2+B,GAAYrQ,GAAel8B,KAAK6rC,MAAOU,IAmC/EX,EAAQ/qC,UAAU2rC,aAAe,WAAcjF,GAAcvnC,KAAK6rC,QAsDlED,EAAQ/qC,UAAUyrC,OAAS,WAActsC,KAAK6rC,MAAMp5B,MAAU,GAyD9Dm5B,EAAQ/qC,UAAU4rC,SAAW,WAAczsC,KAAK6rC,MAAMp5B,KAAU,GAsBhEm5B,EAAQ/qC,UAAUgnC,cAAgB,WAC9B,IAAI9vB,EAAkB2E,KAClB3E,EAAgBqgB,OAChBrgB,EAAgBqgB,QAEpByP,GAAc7nC,KAAK+Z,SACfhC,EAAgB2D,KAChB3D,EAAgB2D,OASxBkwB,EAAQ/qC,UAAU6rC,eAAiB,YA1hBvC,SAASA,EAAepjC,GACpB6U,IAAsB,GACtB,IACI0pB,GAAcv+B,GAElB,QACI6U,IAAsB,IAohBuBuuB,CAAe1sC,KAAK+Z,UACrE6xB,EAAQ/qC,UAAU8rC,yBAA2B,SAAUC,GAAS5sC,KAAKisC,kBAAoBW,GACzFhB,EAAQ/qC,UAAUgsC,iBAAmB,WAAc7sC,KAAKgsC,QAAU,MAClEJ,EAAQ/qC,UAAUisC,eAAiB,SAAUC,GAAU/sC,KAAKgsC,QAAUe,GACtEnB,EAAQ/qC,UAAUsrC,eAAiB,WAC/B,OAAOnsC,KAAK8rC,SAAW9rC,KAAK6rC,MAAMn5B,IAAQ1S,KAAK+rC,kBAE5CH,EA9NiB,GAiOxBoB,GAA6B,SAAUC,GAEvC,SAASD,EAAYnB,GACjB,IAAIqB,EAAQD,EAAO1rC,KAAKvB,KAAM6rC,EAAO,MAAO,IAAM7rC,KAElD,OADAktC,EAAMrB,MAAQA,EACPqB,EAIX,OARAxsC,EAAUssC,EAAaC,GAMvBD,EAAYnsC,UAAUgnC,cAAgB,WAAcC,GAAwB9nC,KAAK6rC,QACjFmB,EAAYnsC,UAAU6rC,eAAiB,YA1hB3C,SAASS,EAAyBn2B,GAC9BmH,IAAsB,GACtB,IACI2pB,GAAwB9wB,GAE5B,QACImH,IAAsB,IAohB2BgvB,CAAyBntC,KAAK6rC,QAC5EmB,EATqB,CAU9BpB,IA0BF,SAASwB,GAAiBC,EAAiBl3B,EAAOG,GAW9C,OAVKm1B,KAEDA,GAA8B,SAAUwB,GAEpC,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOzrC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU4sC,EAAaL,GAIhBK,EALkB,CAM3BD,IAEC,IAAI5B,GAAav1B,GAAiBC,EAAOG,IAoBpD,SAASi3B,GAAkBC,EAAkBH,EAAiBzuB,EAAWxI,GA4BrE,GA3BKs1B,KAEDA,GAA+B,SAAUuB,GAErC,SAASQ,EAAaC,EAAwBC,EAAYC,EAAQC,EAAWC,EAAU3qB,GACnF,IAAI+pB,EAAQD,EAAO1rC,KAAKvB,OAASA,KAOjC,OANAktC,EAAMQ,uBAAyBA,EAC/BR,EAAMS,WAAaA,EACnBT,EAAMU,OAASA,EACfV,EAAMW,UAAYA,EAClBX,EAAMY,SAAWA,EACjBZ,EAAM/pB,eAAiBA,EAChB+pB,EAYX,OArBAxsC,EAAU+sC,EAAcR,GAWxBQ,EAAa5sC,UAAUktC,mBAAqB,SAAUh0B,EAASi0B,EAAcpvB,EAAWxI,EAAU1O,GAC9F,IAAIqiB,EA3xEpB,SAASkkB,EAA0B71B,EAAO2B,EAASm0B,EAAiBp2B,EAAU6F,EAASoC,GACnF,IAAI6X,EAAYta,KACZua,EAAyB1a,KAC7BI,IAAY,GACZH,GAAyB,MACzB,IAAI2M,EAAQuN,GAAgBxf,EAAUM,EAAO2B,EAAS,EAAqB4C,MAW3E,OAVAoN,EAAMvW,IAAoB06B,EACtBvwB,IACAoM,EAAMnX,IAAW+K,EAAQsoB,cAE7BxO,IAAgB,EAAG1N,GACf3R,EAAMoD,oBACNpD,EAAMiK,KAAKtC,cAAgBA,GAE/BxC,GAAYqa,GACZxa,GAAyBya,GAClB9N,EA2wEiBkkB,CAA0BjuC,KAAK4tC,OAAQ7zB,EAAS/Z,KAAK0tC,uBAAwB1tC,KAAK6tC,UAAW7tC,KAAK8tC,SAAU9tC,KAAKmjB,gBACzH6qB,GACAlkB,GAAWC,EAAOikB,EAAc53B,EAAU1O,EAAOkX,EAAUlX,OAE/DgvB,GAAuB3M,EAAO/pB,KAAK4tC,OAAQ7zB,EAAS,GACpD,IAAIo0B,EAAU,IAAIvC,GAAQ7hB,EAAOhQ,GAAU,GAE3C,OADAo0B,EAAQjC,WAAaniB,EAAMjX,IACpBq7B,GAEJV,EAtBmB,CAuB5BD,IAEiB,IAAnB5uB,EAAUpZ,KAA4B,CACtC,IAAI4oC,EAAgBh4B,EAASwI,EAAUlX,OAEvC,OAAO,IAAIgkC,GAAct1B,EAAUg3B,GAAiBC,EAAiBzuB,EAAWxI,GAAWwI,EAAUif,OAAQphB,KAAe2xB,EAAcx7B,IAAUgM,EAAUmB,eAG9J,OAAO,KAcf,IAAIsuB,GAAgC,WAChC,SAASC,EAAgBrrB,EAAQC,GAC7BljB,KAAKijB,OAASA,EACdjjB,KAAKkjB,UAAYA,EAKrB,OAHAorB,EAAgBztC,UAAUiR,IAAM,SAAU1G,EAAO4G,GAC7C,OAAOkP,GAAsBlhB,KAAKijB,OAAQjjB,KAAKkjB,UAAW9X,EAAO4G,IAE9Ds8B,EARwB,GA4KnC,SAASC,GAAc3vB,EAAWxI,EAAU2D,GACxC,GAAIpD,GAAYiI,GAAY,CACxB,IAAI4vB,EAAiB5vB,EAAUhN,OAAS,GACpCuX,EAAgB5S,GAAwBqI,EAAUlX,MAAO0O,GAC7D,OAAO,IAAIw1B,GAAQziB,EAAepP,EAASy0B,GAE1C,GAAuB,IAAnB5vB,EAAUpZ,KAA0B,CACzC,IAAIipC,EAAoBrlB,GAAkBhT,GAC1C,OAAO,IAAIw1B,GAAQ6C,EAAmBA,EAAkBx7B,KAAW,GAEvE,OAAO,KAkCX,SAASy7B,GAAa/sC,GAClB,IAAIoY,EAAU40B,GAAYhtC,GAC1B,QAA0BuD,IAAtB6U,EAAQzQ,UAAyB,CAEjC,IADA,IAAI0N,EAAY+C,EAAQ/C,UACjBA,GAAW,CACd,IAAI43B,EAAM53B,EAAU/D,IACpB,GAAI27B,GAAO71B,GAAoB61B,GAAM,CACjC70B,EAAQzQ,UAAYslC,EACpB,MAEJ53B,EAA+B,GAAnBA,EAAUvE,IAA2B,KAAOuE,EAAUtE,SAE5CxN,IAAtB6U,EAAQzQ,YACRyQ,EAAQzQ,UAAY,MAG5B,OAAOyQ,EAAQzQ,UAUnB,SAASulC,GAAiBltC,GACtB,IAAIoY,EAAU40B,GAAYhtC,GAE1B,OAAkB,KADNoY,EAAQ/C,UAAUxE,IAAO9J,KAAKqR,EAAQvD,WACxC5E,MACc2E,GAAwBwD,EAAQvD,UAAWuD,EAAQ/C,WAClD/D,IAElB,KAQX,SAAS67B,GAAiBntC,GAGtB,OAyDJ,SAASotC,EAAcC,GACnB,IAAIh4B,EASJ,IANIA,EAFAzW,MAAM2P,QAAQ8+B,GAEFA,EAIA/3B,GAAqB+3B,GAE9Bh4B,KAAkC,GAAnBA,EAAUvE,MAC5BuE,EAAYA,EAAUtE,IAE1B,OAAOsE,EAvEa+3B,CADJxuC,MAAM2P,QAAQvO,GAAUA,EAASgtC,GAAYhtC,GAAQqV,WAEhD/D,IAQzB,SAASg8B,GAAkBttC,GACvB,OAAO6B,EAASsrC,GAAiBntC,GAAQiZ,YAQ7C,SAASs0B,GAAYvtC,GACjB,IAAIoY,EAAU40B,GAAYhtC,GAE1B,OAAO,IAAI0sC,GADCt0B,EAAQ/C,UAAUxE,IAAO9J,KAAKqR,EAAQvD,WACjBuD,EAAQ/C,WAQ7C,SAASm4B,GAAcxtC,GACnB,IAAIoY,EAAU40B,GAAYhtC,GAI1B,YAH2BuD,IAAvB6U,EAAQlL,aACRkL,EAAQlL,WAAa8K,GAAmBI,EAAQvD,UAAWuD,EAAQ/C,WAAW,IAE3E+C,EAAQlL,eAQnB,SAAS8/B,GAAYhtC,GACjB,IAAIoY,EAAUlB,GAAWlX,GACzB,IAAKoY,EACD,MAAM,IAAInW,MACN,qBAER,OAAOmW,EAiFX,SAASq1B,GAAWtf,GAChB,IAAI/V,EAAUlB,GAAWiX,GACzB,IAAK/V,EAED,SAEJ,IAAImW,EAAiBf,GAAkBpV,EAAQvD,UAAYjE,GAAewH,EAAQ/C,WAC9E2Y,EAAgBO,EAAiBD,GAAiBC,GAAkB,KACxE,OAAOP,EApqHX,SAAS0f,EAAmB1f,GAIxB,IAHA,IAAI2f,KACAC,EAAyB5f,EAAc,GAElCxuB,EAAI,EAAoEA,EAAIouC,EAAwBpuC,GAAK,EAA0C,CACxJ,IAAIytB,EAASe,EAAcxuB,GACvBytB,GACA0gB,EAAQhsC,KAAKsrB,GAIrB,IAASztB,EAAIouC,EAAwBpuC,EAAIwuB,EAAcruB,OAAQH,IAC3DmuC,EAAQhsC,KAAKqsB,EAAcxuB,IAE/B,OAAOmuC,EAspHgBD,CAAmB1f;;;;;;;;;;;;;;OAiC9C,IAAI6f,GAA6B,KAO7BC,IAAa,EAgBjB,SAASC,GAAkBxpC,EAAM0E,GAE7B,GADQX,EACD,CACH,IAAIqe,EAFAre,EAEculC,IACblnB,IACDA,EAJAre,EAIculC,QAElBlnB,EAAUpiB,GAAQ0E;;;;;;;OAqE1B,SAAS+kC,GAAwBC,EAAOzjC,EAAK0e,EAAU/S,EAAUmX,IAxxLjE,SAAS4gB,IACL13B,IAAW,EACXD,GAAwB,KACxBF,GAAoB,EACpBC,IAAkB,EAqxLlB43B,GACA,IAAIz3B,EAAQyS,EAASrY,IACjB2W,EAAgBmO,GAAgBxf,EAAU4iB,GAAiBvuB,EAAIK,SAAUL,EAAIE,OAAQF,EAAIG,KAAMH,EAAI8B,cAAe9B,EAAI+B,SAAU/B,EAAIiC,WAAY,KAAMjC,EAAI2B,OAAS,EAAgB,EAAqBmhB,GACxM9Y,EAAQohB,GAAkB,EAAG,EAAiBqY,EAAO,KAAM,MAU/D,OATIx3B,EAAMoD,oBACN+E,GAAmBX,GAA+BzJ,EAAO0U,GAAWA,EAAU1e,EAAI3G,MAClF2Q,EAAMvE,MAAQ,KACd8nB,GAAcvjB,EAAO0U,EAASvpB,OAAQ,GACtCmjC,GAA4BtuB,IAGhCgT,EAActW,IAAQgY,EAAStY,IAC/B4W,EAAcrW,IAAaqD,EACpB0U,EAAStY,IAAiB4W,EAMrC,SAAS2mB,GAAoB3mB,EAAe4mB,EAAcllB,EAAU+E,EAAaogB,GAC7E,IAAI53B,EAAQyS,EAASrY,IAEjBlJ,EAhgER,SAAS2mC,EAAyB73B,EAAOG,EAAUpM,GAC/C,IAAI0c,EAAY1L,KACZ/E,EAAMoD,oBACFrP,EAAIC,mBACJD,EAAIC,kBAAkBD,GAC1BwtB,GAAgCvhB,EAAOyQ,EAAW,GAClD+Q,GAAqBxhB,EAAOG,EAAUpM,EAAKA,EAAI7M,UAEnD,IAAI2kC,EAAYvhB,GAAkBtK,EAAM1P,KAAM6P,EAAUA,EAASjX,OAAS,EAAGunB,GAE7E,OADAqb,GAAyB3rB,EAAUsQ,EAAWob,EAAW93B,GAClD83B,EAs/DSgM,CAAyB73B,EAAOyS,EAAUklB,GAM1D,OALAngB,EAAYhV,WAAWtX,KAAKgG,GAC5B6f,EAAclW,IAAW3J,EACzB0mC,GAAgBA,EAAa9gC,QAAQ,SAAUJ,GAAW,OAAOA,EAAQxF,EAAWymC,KAChF33B,EAAMoD,mBACNwe,GAAgB5hB,EAAOyS,EAAUklB,EAAaxjC,UAC3CjD,EAEX,SAAS4mC,GAAkBvI,EAAW3X,GAClC,OACIpV,cACA+sB,UAAWA,GAAanvB,GACxBkvB,MAAO8D,GACPxb,cAAeA,GAAiB,KAChCpe,MAAO,GAgBf,SAASu+B,GAAsB7mC,EAAW6C,GACtC,IAAIikC,EAAYn5B,GAAqB3N,GAAWkJ,IAC5C69B,EAAWD,EAAU1nC,KAAKpH,OAAS,EACvC8Z,GAAei1B,EAAUlkC,EAAIa,OAAQb,EAAIe,QAASkjC,GAClD70B,GAAoB80B,GAAY,GAAuC,EAAGD;;;;;;;;AA4C9E,SAASE,GAAiBC,GAEtB,MAA+B,mBADrBA,EACQ/jC,SAStB,SAASgkC,GAAyBD,GAgJ9B,IA/IA,IAAIE,EARR,SAASC,EAAalrC,GAClB,OAAOpF,OAAOyiB,eAAerd,EAAK3E,WAAWD,YAO7B8vC,CAAaH,EAAW/qC,MACpCmrC,EAAU,WACV,IAAIC,EAAKlqC,EACLmqC,OAAW3rC,EACf,GAAIorC,GAAiBC,GAEjBM,EAAWJ,EAAUzsC,gBAAkBysC,EAAUvsC,mBAEhD,CACD,GAAIusC,EAAUzsC,eACV,MAAM,IAAIJ,MAAM,wCAGpBitC,EAAWJ,EAAUvsC,eAEzB,IAAI4sC,EAAUL,EAAU7rC,UAGxB,GAAIksC,GAAWD,EAAU,CACrB,IAAIE,EAAeR,EACnBQ,EAAalkC,OAASmkC,GAAiBT,EAAW1jC,QAClDkkC,EAAa7kC,eAAiB8kC,GAAiBT,EAAWrkC,gBAC1D6kC,EAAajkC,QAAUkkC,GAAiBT,EAAWzjC,SAQvD,GANIgkC,IAEAjtC,EAAe0sC,EAAW1jC,OAAQikC,EAAQjkC,QAC1ChJ,EAAe0sC,EAAWrkC,eAAgB4kC,EAAQ5kC,gBAClDrI,EAAe0sC,EAAWzjC,QAASgkC,EAAQhkC,UAE3C+jC,EAAU,CAEV,IAAII,EAAqBV,EAAW9jC,aAChCykC,EAAsBL,EAASpkC,aAcnC,GAbIykC,IACID,GACAV,EAAW9jC,aAAe,SAAU23B,EAAgBJ,GAChDkN,EAAoB9M,EAAgBJ,GACpCiN,EAAmB7M,EAAgBJ,IAEvCuM,EAAWhkC,UAAYskC,EAAStkC,UAGhCgkC,EAAW9jC,aAAeykC,GAI9BZ,GAAiBC,IAAeD,GAAiBO,GAAW,CAC5D,IAAIM,EAAkBZ,EAAWniC,UAC7BgjC,EAAmBP,EAASziC,UAC5BgjC,IAEIb,EAAWniC,UADX+iC,EACuB,SAAU9a,EAAIuY,GACjCwC,EAAiB/a,EAAIuY,GACrBuC,EAAgB9a,EAAIuY,IAIDwC,GAKnC,IAAIC,EAAuBd,EAAW7jC,eAClC4kC,EAAwBT,EAASnkC,eACjC4kC,IAEIf,EAAW7jC,eADX2kC,EAC4B,SAAUhB,GAClCiB,EAAsBjB,GACtBgB,EAAqBhB,IAIGiB,GAIpC,IAAIC,EAA8BhB,EAAW5jC,sBACzC6kC,EAA+BX,EAASlkC,sBACxC6kC,IAEIjB,EAAW5jC,sBADX4kC,EACmC,SAAUnN,EAAgBqN,GACzDD,EAA6BpN,EAAgBqN,GAC7CF,EAA4BnN,EAAgBqN,IAIbD,GAI3C3tC,EAAe0sC,EAAW1jC,OAAQgkC,EAAShkC,QAC3ChJ,EAAe0sC,EAAWrkC,eAAgB2kC,EAAS3kC,gBACnDrI,EAAe0sC,EAAWzjC,QAAS+jC,EAAS/jC,SAG5CyjC,EAAWjjC,oBACPijC,EAAWjjC,qBAAuBujC,EAASvjC,oBAC/CijC,EAAWnjC,iBAAmBmjC,EAAWnjC,kBAAoByjC,EAASzjC,iBACtEmjC,EAAW7iC,iBAAmB6iC,EAAW7iC,kBAAoBmjC,EAASnjC,iBACtE6iC,EAAW/iC,cAAgB+iC,EAAW/iC,eAAiBqjC,EAASrjC,cAChE+iC,EAAWrjC,QAAUqjC,EAAWrjC,SAAW2jC,EAAS3jC,QACpDqjC,EAAW3iC,UAAY2iC,EAAW3iC,WAAaijC,EAASjjC,UACxD2iC,EAAWvjC,OAASujC,EAAWvjC,QAAU6jC,EAAS7jC,OAElD,IAAIqB,EAAWwiC,EAASxiC,SACxB,GAAIA,EACA,IACI,IAAK,IAAIqjC,EAAa/uC,EAAS0L,GAAWsjC,EAAeD,EAAW1uC,QAAS2uC,EAAazuC,KAAMyuC,EAAeD,EAAW1uC,OAAQ,CAC9H,IAAI8L,EAAU6iC,EAAa1uC,MACvB6L,GAAWA,EAAQ8iC,WACnB9iC,EAAQyhC,IAIpB,MAAOsB,GAASjB,GAAQrtC,MAAOsuC,GAC/B,QACI,IACQF,IAAiBA,EAAazuC,OAASwD,EAAKgrC,EAAWI,SAASprC,EAAGnF,KAAKmwC,GAEhF,QAAU,GAAId,EAAK,MAAMA,EAAIrtC,OAGrC,MAAO,QAIP,IAAIwuC,EAAiBtB,EAAU5vC,UAC3BkxC,IACAxB,EAAWjjC,oBACPijC,EAAWjjC,qBAAuBykC,EAAezkC,oBACrDijC,EAAWnjC,iBACPmjC,EAAWnjC,kBAAoB2kC,EAAe3kC,iBAClDmjC,EAAW7iC,iBACP6iC,EAAW7iC,kBAAoBqkC,EAAerkC,iBAClD6iC,EAAW/iC,cAAgB+iC,EAAW/iC,eAAiBukC,EAAevkC,cACtE+iC,EAAWrjC,QAAUqjC,EAAWrjC,SAAW6kC,EAAe7kC,QAC1DqjC,EAAW3iC,UAAY2iC,EAAW3iC,WAAamkC,EAAenkC,UAC9D2iC,EAAWvjC,OAASujC,EAAWvjC,QAAU+kC,EAAe/kC,QAGhEyjC,EAAYrwC,OAAOyiB,eAAe4tB,IAE/BA,GAEa,UADFE,OAKtB,SAASK,GAAiB/tC,GACtB,OAAIA,IAAU2I,MAGL3I,IAAU4I,MAIR5I;;;;;;;OAWf,IAAI+uC,GAAiB,iBAqBrB,SAASC,GAAmB1B,GACxB,IAAI2B,EAA2B3B,EAAWrkC,eACtCimC,EAAQ5B,EAAW/qC,KAAK3E,UACxB8vC,EAAU,SAAU1gC,GACpB,GAAIiiC,EAAyBzxC,eAAewP,GAAe,CAOvD,IANA,IAAIF,EAAcmiC,EAAyBjiC,GACvCmiC,EAAkBJ,GAAiBjiC,EAGnCsiC,OAAmBntC,EACnBotC,EAAaH,GACTE,GAAoBC,GACxBlyC,OAAOyiB,eAAeyvB,KAAgBlyC,OAAOyiB,eAAeziB,OAAOS,YACnEwxC,EAAmBjyC,OAAO4B,yBAAyBswC,EAAYviC,GAC/DuiC,EAAalyC,OAAOyiB,eAAeyvB,GAEvC,IACIC,EAAWF,GAAoBA,EAAiBntB,IAEpD9kB,OAAO+B,eAAegwC,EAAOpiC,GACzB+B,IAJSugC,GAAoBA,EAAiBvgC,MAKzCygC,OAAWrtC,EAAY,WAAc,OAAOlF,KAAKoyC,KACtDltB,IAAK,SAAUjiB,GACX,IAAIuvC,EAAgBxyC,KAAKgyC,IACpBQ,IACDA,KAEApyC,OAAO+B,eAAenC,KAAMgyC,IAAkB/uC,MAAOuvC,EAAeC,UAAU,KAElF,IAAI79B,GAAiB5U,KAAKS,eAAe2xC,GACrCM,EAAgBF,EAAcviC,GAC9ByiC,EACAA,EAAch+B,aAAezR,EAG7BuvC,EAAcviC,GACV,IAAIuE,GAAaxU,KAAKoyC,GAAkBnvC,EAAO2R,GAEnDA,EAEAxU,OAAO+B,eAAenC,KAAMoyC,GAAmBnvC,MAAOA,EAAOwvC,UAAU,IAGvEzyC,KAAKoyC,GAAmBnvC,EAExBsvC,GACAA,EAAShxC,KAAKvB,KAAMiD,IAG5BopC,cAAc,MAI1B,IAAK,IAAIp8B,KAAgBiiC,EACrBvB,EAAQ1gC,GAKa,MAArBsgC,EAAWvjC,SACXujC,EAAWvjC,OAAS2lC,GAAiBpC,EAAWvjC,SAEpDujC,EAAWrjC,QAAUylC,GAAiBpC,EAAWrjC,SAKrD,SAASylC,GAAiBC,GACtB,OAAO,WACH,IAAIJ,EAAgBxyC,KAAKgyC,IACJ,MAAjBQ,IACAxyC,KAAK6yC,YAAYL,GACjBxyC,KAAKgyC,IAAkB,MAEvBY,GACAA,EAAapxC,MAAMxB;;;;;;;OAT/BiyC,GAAmBL,WAAY,EAyB/B,IAAIkB,GAAW,IAAIptC,EAAe,4EAY9BqtC,MAQAC,MACAC,MAIAC,QAAkBhuC;;;;;;;OACtB,SAASiuC,KAIL,YAHwBjuC,IAApBguC,KACAA,GAAkB,IAAIlvB,IAEnBkvB,GAOX,SAASE,GAAeC,EAAS34B,EAAQ44B,GAIrC,YAHe,IAAX54B,IAAqBA,EAAS,WACN,IAAxB44B,IAAkCA,EAAsB,MAC5D54B,EAASA,GAAUy4B,KACZ,IAAII,GAAWF,EAASC,EAAqB54B,GAExD,IAAI64B,GAA4B,WAC5B,SAASA,EAAWpnC,EAAKmnC,EAAqB54B,GAC1C,IAAIwyB,EAAQltC,KACZA,KAAK0a,OAASA,EAId1a,KAAKglB,QAAU,IAAIta,IAInB1K,KAAKwzC,iBAAmB,IAAIpqC,IAI5BpJ,KAAK4N,UAAY,IAAIxE,IAIrBpJ,KAAKyzC,WAAY,EAGjBC,IAAavnC,GAAM,SAAUwnC,GAAe,OAAOzG,EAAM0G,oBAAoBD,EAAa,IAAIvqC,OAC9FkqC,GACII,GAAYJ,EAAqB,SAAUhuB,GAAY,OAAO4nB,EAAM2G,gBAAgBvuB,KAExFtlB,KAAKglB,QAAQE,IAAInB,GAAY+vB,QAAW5uC,EAAWlF,OAGnDA,KAAK+zC,eAAiB/zC,KAAKglB,QAAQgvB,IAAIlB,IAEvC9yC,KAAKwzC,iBAAiBtkC,QAAQ,SAAUmkC,GAAW,OAAOnG,EAAMp7B,IAAIuhC,KAwLxE,OAhLAE,EAAW1yC,UAAU2qB,QAAU,WAC3BxrB,KAAKi0C,qBAELj0C,KAAKyzC,WAAY,EACjB,IAEIzzC,KAAK4N,UAAUsB,QAAQ,SAAUglC,GAAW,OAAOA,EAAQrmC,gBAE/D,QAEI7N,KAAKglB,QAAQmvB,QACbn0C,KAAK4N,UAAUumC,QACfn0C,KAAKwzC,iBAAiBW,UAG9BZ,EAAW1yC,UAAUiR,IAAM,SAAU1G,EAAO4G,EAAeJ,QACjC,IAAlBI,IAA4BA,EAAgB8R,SAClC,IAAVlS,IAAoBA,EAAQ,GAChC5R,KAAKi0C,qBAEL,IAAIG,EAAmB/iC,GAAmBrR,MAC1C,IAEI,KAAc,EAAR4R,GAA2B,CAE7B,IAAIuU,EAASnmB,KAAKglB,QAAQlT,IAAI1G,GAC9B,QAAelG,IAAXihB,EAAsB,CAGtB,IAAIha,EAyOxB,SAASkoC,EAAsBpxC,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiByC;;;;;;;OA3OzB2uC,CAAsBjpC,IAAU7F,EAAiB6F,GACvDe,GAAOnM,KAAKs0C,qBAAqBnoC,KAGjCga,EAAS2tB,GAAWS,GAAqBnpC,GAAQ2nC,IACjD/yC,KAAKglB,QAAQE,IAAI9Z,EAAO+a,IAIhC,QAAejhB,IAAXihB,EACA,OAAOnmB,KAAKw0C,QAAQppC,EAAO+a,GAMnC,OAD6B,EAARvU,EAAsCuhC,KAAdnzC,KAAK0a,QAC9B5I,IAAI1G,EAAO4G,GAEnC,QAEIX,GAAmB+iC,KAG3Bb,EAAW1yC,UAAUozC,mBAAqB,WACtC,GAAIj0C,KAAKyzC,UACL,MAAM,IAAI7vC,MAAM,yCAOxB2vC,EAAW1yC,UAAU+yC,oBAAsB,SAAUa,EAAiBC,GAClE,IAAIxH,EAAQltC,KAMRmM,EAAM1G,EALVgvC,EAAkB9wB,GAAkB8wB,IAOhCE,EAAmB,MAAPxoC,GAAgBsoC,EAAgBE,eAAYzvC,EAIxDmuC,OAAwBnuC,IAAbyvC,EAA0BF,EAAkBE,EAGvDtvC,OAA0BH,IAAbyvC,GAA2BF,EAAgBpvC,WACxD4tC,GAOJ,QAJiB/tC,IAAbyvC,IACAxoC,EAAM1G,EAAekvC,IAGd,MAAPxoC,EAAJ,CAIA,GAAIuoC,EAAQV,IAAIX,GACZ,MAAM,IAAIzvC,MAAM,6BAA+BuH,GAAUkoC,GAAW,8BAOxE,GAJArzC,KAAKwzC,iBAAiB5gB,IAAIygB,GAC1BrzC,KAAKglB,QAAQE,IAAImuB,EAASS,GAAW3nC,EAAI7M,UAGtB,MAAf6M,EAAI7G,QAAiB,CAGrBovC,EAAQ9hB,IAAIygB,GACZ,IACIK,GAAYvnC,EAAI7G,QAAS,SAAUsvC,GAAY,OAAO1H,EAAM0G,oBAAoBgB,EAAUF,KAE9F,QAEIA,EAAQG,OAAOxB,IAIF,MAAjBlnC,EAAI9G,WACJquC,GAAYvnC,EAAI9G,UAAW,SAAUigB,GAAY,OAAO4nB,EAAM2G,gBAAgBvuB,KAGlFouB,GAAYruC,EAAW,SAAUigB,GAAY,OAAO4nB,EAAM2G,gBAAgBvuB,OAK9EiuB,EAAW1yC,UAAUgzC,gBAAkB,SAAUvuB,GAI7C,IAAIla,EAAQ0pC,GADZxvB,EAAW3B,GAAkB2B,IACUA,EAAW3B,GAAkB2B,EAASZ,SAEzEyB,EAiEZ,SAAS4uB,EAAiBzvB,GACtB,IAAIhmB,EAAU01C,GAAkB1vB,GAChC,OAAI2vB,GAAgB3vB,GACTwuB,QAAW5uC,EAAWogB,EAASV,UAG/BkvB,GAAWx0C,EAASyzC,IAvEdgC,CAAiBzvB,GAC9B,GAAKwvB,GAAexvB,KAAgC,IAAnBA,EAASU,MAkBrC,CACD,IAAIkvB,EAAWl1C,KAAKglB,QAAQlT,IAAI1G,GAChC,GAAI8pC,QAA+BhwC,IAAnBgwC,EAASlvB,MACrB,MAAM,IAAIpiB,MAAM,4BAA8BuH,GAAUC,QArBN,CAGtD,IAAI+pC,EAAgBn1C,KAAKglB,QAAQlT,IAAI1G,GACrC,GAAI+pC,GAEA,QAA4BjwC,IAAxBiwC,EAAcnvB,MACd,MAAM,IAAIpiB,MAAM,4BAA8BwH,EAAQ,UAI1D+pC,EAAgBrB,QAAW5uC,EAAW6tC,IAAS,IACjCzzC,QAAU,WAAc,OAAO4S,GAAWijC,EAAcnvB,QACtEhmB,KAAKglB,QAAQE,IAAI9Z,EAAO+pC,GAE5B/pC,EAAQka,EACR6vB,EAAcnvB,MAAM1iB,KAAKgiB,GAQ7BtlB,KAAKglB,QAAQE,IAAI9Z,EAAO+a,IAE5BotB,EAAW1yC,UAAU2zC,QAAU,SAAUppC,EAAO+a,GAC5C,GAAIA,EAAOljB,QAAU+vC,GACjB,MAAM,IAAIpvC,MAAM,oBAAsBuH,GAAUC,IASpD,OAPS+a,EAAOljB,QAAU8vC,KACtB5sB,EAAOljB,MAAQ+vC,GACf7sB,EAAOljB,MAAQkjB,EAAO7mB,WAEE,iBAAjB6mB,EAAOljB,OAAsBkjB,EAAOljB,OAkGvD,SAASmyC,EAAanyC,GAClB,MAAwB,iBAAVA,GAA+B,MAATA,GAAiBA,EAAM4K,aAC1B,mBAAtB5K,EAAM4K,YApG2CunC,CAAajvB,EAAOljB,QACxEjD,KAAK4N,UAAUglB,IAAIzM,EAAOljB,OAEvBkjB,EAAOljB,OAElBswC,EAAW1yC,UAAUyzC,qBAAuB,SAAUnoC,GAClD,QAAKA,EAAIlH,aAG0B,iBAAnBkH,EAAIlH,WACU,QAAnBkH,EAAIlH,YAA4C,SAAnBkH,EAAIlH,YAAyBjF,KAAK+zC,eAG/D/zC,KAAKwzC,iBAAiBQ,IAAI7nC,EAAIlH,cAGtCsuC,EAvNoB,GAyN/B,SAASgB,GAAqBnpC,GAC1B,IAAI6G,EAAgB1M,EAAiB6F,GACrC,GAAsB,OAAlB6G,EAAwB,CACxB,GAAI7G,aAAiB1F,EACjB,MAAM,IAAI9B,MAAM,SAAWuH,GAAUC,GAAS,8CAIlD,OAAO,WAAc,OAAO,IAAIA,GAEpC,OAAO6G,EAAc3S,QAgBzB,SAAS01C,GAAkB1vB,GACvB,IAAIhmB,OAAU4F,EACd,GAAI4vC,GAAexvB,GACf,OAAOivB,GAAqB5wB,GAAkB2B,IAG9C,GAAI2vB,GAAgB3vB,GAChBhmB,EAAU,WAAc,OAAOqkB,GAAkB2B,EAASV,gBAEzD,GAiCb,SAASywB,EAAmBpyC,GACxB,QAASA,EAAM4iB,YAlCFwvB,CAAmB/vB,GACxBhmB,EAAU,WAAc,OAAOyS,GAAO4R,GAAkB2B,EAASO,oBAEhE,GAiCb,SAASyvB,EAAkBryC,GACvB,QAASA,EAAM6iB,WAlCFwvB,CAAkBhwB,GACvBhmB,EAAU,WAAc,OAAOgmB,EAASQ,WAAWtkB,MAAM8jB,EAAU9hB,EAAS0O,GAAWoT,EAASH,iBAE/F,CACD,IAAIowB,EAAa5xB,GAAkB2B,EAASS,UAAYT,EAASZ,SACjE,IAkCZ,SAAS8wB,EAAQvyC,GACb,QAASA,EAAMkiB,KAnCHqwB,CAAQlwB,GAIR,OAAOivB,GAAqBgB,GAH5Bj2C,EAAU,WAAc,OAAO,IAAK,EAAawH,KAAKtF,MAAM,EAAcgC,QAAU,GAAS0O,GAAWoT,EAASH,UAO7H,OAAO7lB,EAEX,SAASw0C,GAAWx0C,EAAS2D,EAAO+iB,GAGhC,YAFc,IAAV/iB,IAAoBA,EAAQ8vC,SAClB,IAAV/sB,IAAoBA,GAAQ,IAE5B1mB,QAASA,EACT2D,MAAOA,EACP+iB,MAAOA,UAAa9gB,GAG5B,SAASwuC,GAAYnjB,EAAO3lB,GACxB2lB,EAAMrhB,QAAQ,SAAUjM,GAAS,OAAO1C,MAAM2P,QAAQjN,GAASywC,GAAYzwC,EAAO2H,GAAMA,EAAG3H,KAE/F,SAASgyC,GAAgBhyC,GACrB,OAAOwhB,MAAaxhB,EAQxB,SAAS6xC,GAAe7xC,GACpB,MAAwB,mBAAVA,EAqDlB,SAASwyC,GAAkBnwB,EAAUnD,EAAcuzB,EAAuBC,EAAgBngC,GAEtF,GADA8P,EAAW3B,GAAkB2B,GACzB/kB,MAAM2P,QAAQoV,GAId,IAAK,IAAInkB,EAAI,EAAGA,EAAImkB,EAAShkB,OAAQH,IACjCs0C,GAAkBnwB,EAASnkB,GAAIghB,EAAcuzB,EAAuBC,EAAgBngC,OAGvF,CACD,IAAI+C,EAAWsF,KACXzS,EAAQ0pC,GAAexvB,GAAYA,EAAW3B,GAAkB2B,EAASZ,SACzEkxB,EAAkBZ,GAAkB1vB,GACpCpN,EAAwBiF,KACxB04B,EAAqD,MAAxC39B,EAAsBgK,gBACnC4zB,EAAW59B,EAAsBtG,OAAS,GAC1CmkC,EAAwB79B,EAAsBgK,iBAAmB,GACrE,GAAI4yB,GAAexvB,KAAcA,EAASU,MAAO,CAE7C,IAAI1mB,EAAU,IAAIwV,GAAoB8gC,EAAiBpgC,EAAgB01B,IACnE8K,EAAuBtqC,GAAQN,EAAO+W,EAAc3M,EAAiBqgC,EAAaA,EAAaE,EAAuBD,IAC7F,GAAzBE,GACAz1B,GAAmBX,GAA+B1H,EAAuBK,GAAWA,EAAUnN,GAC9F+W,EAAa7e,KAAK8H,GAClB8M,EAAsBtG,OAAS,MAC3B4D,IACA0C,EAAsBgK,iBAClB,OAERwzB,EAAsBpyC,KAAKhE,GAC3BiZ,EAASjV,KAAKhE,KAGdo2C,EAAsBM,GAAwB12C,EAC9CiZ,EAASy9B,GAAwB12C,OAGpC,CAqBD,IAAI22C,EAAgCvqC,GAAQN,EAAO+W,EAAc0zB,EAAaE,EAAuBD,GACjGI,EAAoCxqC,GAAQN,EAAO+W,EAAc0zB,EAAYA,EAAaE,GAG1FI,EAAgCD,GAAqC,GACrER,EAAsBQ,GACtB1gC,IAAmB2gC,IAClB3gC,KAL2BygC,GAAiC,GAC7DP,EAAsBO,KAMtB11B,GAAmBX,GAA+B1H,EAAuBK,GAAWA,EAAUnN,GAC1F9L,EAwFpB,SAAS82C,EAAaC,EAAW3uC,EAAO8N,EAAgBmgC,EAAgBW,GACpE,IAAIh3C,EAAU,IAAIwV,GAAoBuhC,EAAW7gC,EAAgB01B,IAKjE,OAJA5rC,EAAQ0mB,SACR1mB,EAAQoI,MAAQA,EAChBpI,EAAQi3C,mBAAqB,EAC7BC,GAAgBl3C,EAASg3C,EAAGX,IAAmBngC,GACxClW,EA9FmB82C,CAAa5gC,EAAiBihC,GAAoCC,GAA+BhB,EAAsBp0C,OAAQkU,EAAgBmgC,EAAgBC,IACxKpgC,GAAkB2gC,IACnBT,EAAsBQ,GAAmCN,gBAAkBt2C,GAE/E6iB,EAAa7e,KAAK8H,GAClB8M,EAAsBtG,OAAS,MAC3B4D,IACA0C,EAAsBgK,iBAClB,OAERwzB,EAAsBpyC,KAAKhE,GAC3BiZ,EAASjV,KAAKhE,IAIdk3C,GAAgBd,EAAsBlgC,EAAiB0gC,EAAoCD,GAAgCL,GAAkBpgC,GAAkBmgC,IAE9JngC,GAAkBmgC,GAAkBQ,GACrCT,EAAsBQ,GAAmCK,uBAQzE,SAASC,GAAgBJ,EAAc92C,EAASq3C,GAC5CP,EAAapwB,MAAM1iB,KAAKhE,GACpBq3C,GACAP,EAAaG,qBAMrB,SAAS7qC,GAAQkrC,EAAM7gC,EAAKqiB,EAAO1c,GAC/B,IAAK,IAAIva,EAAIi3B,EAAOj3B,EAAIua,EAAKva,IACzB,GAAI4U,EAAI5U,KAAOy1C,EACX,OAAOz1C,EAEf,OAAQ,EAKZ,SAASu1C,GAA8BhoC,EAAGmS,EAAO8B,EAAOxM,GACpD,OAAO0gC,GAAa72C,KAAKgmB,UAO7B,SAASywB,GAAkC/nC,EAAGmS,EAAO8B,EAAOxM,GACxD,IACI2gC,EADAC,EAAY/2C,KAAKgmB,MAErB,GAAIhmB,KAAK41C,gBAAiB,CACtB,IAAIoB,EAAiBh3C,KAAK41C,gBAAgBW,mBACtCU,EAAiBv0B,GAAkB7B,EAAO8B,EAAO3iB,KAAK41C,gBAAgBluC,MAAOyO,GAIjF0gC,GAAaE,EAFbD,EAASG,EAAeh8B,MAAM,EAAG+7B,IAIjC,IAAK,IAAI71C,EAAI61C,EAAgB71C,EAAI81C,EAAe31C,OAAQH,IACpD21C,EAAOxzC,KAAK2zC,EAAe91C,SAM/B01C,GAAaE,EAFbD,MAIJ,OAAOA,EAKX,SAASD,GAAaE,EAAWD,GAC7B,IAAK,IAAI31C,EAAI,EAAGA,EAAI41C,EAAUz1C,OAAQH,IAElC21C,EAAOxzC,MAAKhE,EADEy3C,EAAU51C,OAG5B,OAAO21C,EA0CX,SAASI,GAAiB7xC,EAAW8xC,GAEjC,YADsB,IAAlBA,IAA4BA,MACzB,SAAU5G,GACbA,EAAWnkC,kBAAoB,SAAUD,GACrC,OApNZ,SAASC,EAAkBD,EAAK9G,EAAW8xC,GACvC,IACI/+B,EADWyF,KACMrL,IACrB,GAAI4F,EAAMoD,kBAAmB,CACzB,IAAIm6B,EAAiB/+B,GAAezK,GAEpCspC,GAAkB0B,EAAe/+B,EAAM1P,KAAM0P,EAAM6H,UAAW01B,GAAgB,GAE9EF,GAAkBpwC,EAAW+S,EAAM1P,KAAM0P,EAAM6H,UAAW01B,GAAgB,IA4M/DvpC,CAAkBD,EAAK9G,EAAW8xC;;;;;;;OAmBrD,IAAIC,GACA,SAASA,OAOTC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBhuC,GAC7B,IAAI/F,EAAQK,MAAM,kCAAoCuH,GAAU7B,GAAa,kDAE7E,OADA/F,EAAMg0C,IAAmBjuC,EAClB/F,EAEX,IAmKWi0C,GAnKPD,GAAkB,cAClBE,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8B52C,UAAU62C,wBAA0B,SAAUpuC,GACxE,MAAMguC,GAAwBhuC,IAE3BmuC,EANuC,GAW9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBxzB,KAAO,IAAIszB,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCb,EAAWc,EAASC,GACzD93C,KAAK63C,QAAUA,EACf73C,KAAK83C,UAAYA,EACjB93C,KAAK+3C,WAAa,IAAIrtC,IACtB,IAAK,IAAIvJ,EAAI,EAAGA,EAAI41C,EAAUz1C,OAAQH,IAAK,CACvC,IAAI7B,EAAUy3C,EAAU51C,GACxBnB,KAAK+3C,WAAW7yB,IAAI5lB,EAAQ04C,cAAe14C,IAanD,OAVAs4C,EAAgC/2C,UAAU62C,wBAA0B,SAAUpuC,GAC1E,IAAIhK,EAAUU,KAAK+3C,WAAWjmC,IAAIxI,GAIlC,IAHKhK,GAAWU,KAAK63C,UACjBv4C,EAAUU,KAAK63C,QAAQH,wBAAwBpuC,KAE9ChK,EACD,MAAMg4C,GAAwBhuC,GAElC,OAAO,IAAI2uC,GAA8B34C,EAASU,KAAK83C,YAEpDF,EApByC,GAsBhDK,GAA+C,SAAUhL,GAEzD,SAASgL,EAA8B34C,EAASq1C,GAC5C,IAAIzH,EAAQD,EAAO1rC,KAAKvB,OAASA,KAQjC,OAPAktC,EAAM5tC,QAAUA,EAChB4tC,EAAMyH,SAAWA,EACjBzH,EAAMzkC,SAAWnJ,EAAQmJ,SACzBykC,EAAM8K,cAAgB14C,EAAQ04C,cAC9B9K,EAAMgL,mBAAqB54C,EAAQ44C,mBACnChL,EAAMrgC,OAASvN,EAAQuN,OACvBqgC,EAAMpgC,QAAUxN,EAAQwN,QACjBogC,EAKX,OAfAxsC,EAAUu3C,EAA+BhL,GAYzCgL,EAA8Bp3C,UAAUC,OAAS,SAAUwQ,EAAU6mC,EAAkBC,EAAoBzD,GACvG,OAAO30C,KAAKV,QAAQwB,OAAOwQ,EAAU6mC,EAAkBC,EAAoBzD,GAAY30C,KAAK20C,WAEzFsD,EAhBuC,CAiBhDZ,IAwBEgB,GAA4B,WAC5B,SAASA,EAAWC,GAChBt4C,KAAKs4C,cAAgBA,EAIzB,OADAD,EAAWvzC,kBAAoB,WAAc,OAAOyzC,GAA2BF,IACxEA,EANoB,GAU3BE,GADuCh1B,GAcvCi1B,GACA,SAASA,GAAoBhqC,EAAIjF,EAAakvC,EAAWnqC,EAAeG,EAAQiqC,GAC5E14C,KAAKwO,GAAKA,EACVxO,KAAKuJ,YAAcA,EACnBvJ,KAAKy4C,UAAYA,EACjBz4C,KAAKsO,cAAgBA,EACrBtO,KAAKyO,OAASA,EACdzO,KAAK04C,WAAaA,GAOtBC,GACA,SAASA,OAQTC,GACA,SAASA,OAoBTC,IAhBuB,IAAInzC,EAAe,wBAiB1C,SAASmzC,QASTC,GACA,SAASA,QAIFtB,GASRj4C,EAAQi4C,sBAAwBj4C,EAAQi4C,yBALnBA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAAIuB,GAA2B,WAC3B,SAASA,KAIT,OADAA,EAAUj0C,kBAAoB,WAAc,OAAOk0C,MAC5CD,EALmB,GAS1BC,GADqCz1B,GAUrC01B,GAA4C,SAAUhM,GAEtD,SAASiM,IACL,OAAkB,OAAXjM,GAAmBA,EAAOzrC,MAAMxB,KAAMqB,YAAcrB,KAO/D,OATAU,EAAUw4C,EAA6BjM,GAIvCiM,EAA4Br4C,UAAU62C,wBAA0B,SAAUpuC,GAEtE,IAAIymC,EAAe1gC,GAAgB/F,GACnC,OAAO,IAAI6vC,GAAmBpJ,IAE3BmJ,EAVoC,CAW7CvB,IACF,SAASyB,GAAW/tC,GAChB,IAAIguC,KACJ,IAAK,IAAIC,KAAejuC,EAChBA,EAAI5K,eAAe64C,IAEnBD,EAAM/1C,MAAO8D,SADEiE,EAAIiuC,GACcC,aAAcD,IAGvD,OAAOD,EAKX,IAAIG,GAAe,IAAI9zC,EAAe,sBAAwBT,WAAY,OAAQ3F,QAAS,WAAc,OAAO4wC,GAAkBn+B,GAAO0nC,QAKrIA,GAAY,IAAI/zC,EAAe,mBAC/BT,WAAY,OACZ3F,QAAS,WAAc,OAAOkZ,MAM9BkhC,GAAyB,IAAIh0C,EAAe,0BAI5CyzC,GAAoC,SAAUlM,GAE9C,SAAS0M,EAAoB5J,GACzB,IAAI7C,EAAQD,EAAO1rC,KAAKvB,OAASA,KAKjC,OAJAktC,EAAM6C,aAAeA,EACrB7C,EAAM8K,cAAgBjI,EAAavqC,KACnC0nC,EAAMzkC,SAAWsnC,EAAa5hC,UAAU,GAAG,GAC3C++B,EAAMgL,sBACChL,EA2FX,OAlGAxsC,EAAUi5C,EAAqB1M,GAS/B7sC,OAAO+B,eAAew3C,EAAoB94C,UAAW,UACjDiR,IAAK,WACD,OAAOsnC,GAAWp5C,KAAK+vC,aAAaljC,SAExCu/B,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAew3C,EAAoB94C,UAAW,WACjDiR,IAAK,WACD,OAAOsnC,GAAWp5C,KAAK+vC,aAAajjC,UAExCs/B,YAAY,EACZC,cAAc,IAElBsN,EAAoB94C,UAAUC,OAAS,SAAUwQ,EAAU6mC,EAAkBC,EAAoBzD,GAC7F,IACI58B,EADA6hC,OAA4C10C,IAAvBkzC,EAIrBrgC,EAFA48B,EACcA,EAASrjC,SAASQ,IAAI4nC,GAAwB,SAAUn6B,GAAK,OAAOA,GAChE8P,CAAQslB,EAASrjC,SAASQ,IAAIgnC,KAG9BrxB,GAEtB,IAAIoyB,EAAYD,EACZjhB,GAAc34B,KAAKyI,SAAUsP,EAAgB2P,eAAe,KAAM1nB,KAAK+vC,eACvEvU,GAAkBzjB,EAAiBqgC,GACnC0B,EAAY95C,KAAK+vC,aAAajiC,OAAS,GACvC,GACA8hB,EAAc+kB,IAAaiF,EAAqBjF,EAASrjC,SAASQ,IAAI0nC,IAAgBtJ,KACtFp4B,EAAWC,EAAgB2P,eAAemyB,EAAW75C,KAAK+vC,cAE1DllB,EAAWyM,GAAgBxf,EAAU8iB,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,MAAOhL,EAAakqB,GACrGjvB,EAAS3X,IAAYyhC,GAAYA,EAASrjC,UAAY,KAEtD,IACIhI,EACAywC,EAFAl7B,EAAUH,GAAUmM,EAAU,MAGlC,IACQ9S,EAAgBqgB,OAChBrgB,EAAgBqgB,QACpB,IAAIjP,EAAgBwmB,GAAwBkK,EAAW75C,KAAK+vC,aAAcllB,EAAU/S,GAIpF,GAHAiiC,EAAe1jC,GAAS,EAAGwU,GAGvBstB,EAIA,IAHA,IAAIzwC,EAAQ,EACR0Q,EAAQyS,EAASrY,IACjBwnC,EAAgBD,EAAazwB,cACxBnoB,EAAI,EAAGA,EAAIg3C,EAAiB72C,OAAQH,IAAK,CAI9C,IAHA,IAAI84C,EAAW9B,EAAiBh3C,GAC5B+4C,EAAa,KACbC,EAAgB,KACX9nC,EAAI,EAAGA,EAAI4nC,EAAS34C,OAAQ+Q,IAAK,CAClC+F,EAAMoD,oBAKNpD,EAAM2e,oBACN3e,EAAM6H,UAAUiK,SAASxiB,EAAQ6K,GAAe,EAAG,MACnD6F,EAAM1P,KAAKwhB,OAAOxiB,EAAQ6K,GAAe,EAAG,MAC5CsY,EAASX,OAAOxiB,EAAQ6K,GAAe,EAAG,OAE9C,IAAI4D,EAAQohB,GAAkB7vB,EAAO,EAAiBuyC,EAAS5nC,GAAI,KAAM,MACzE8nC,EAAiBA,EAAcn3C,KAAOmT,EAAU+jC,EAAa/jC,EAC7DgkC,EAAgBhkC,EAEpB6jC,EAAc12C,KAAK42C,GAM3B5wC,EAAYwmC,GAAoB3mB,EAAenpB,KAAK+vC,aAAcllB,EAAU+E,GAAcugB,KAC1F/Z,GAAuBvL,EAAU,GAErC,QACI1L,GAAUN,GAAS,GACf9G,EAAgB2D,KAChB3D,EAAgB2D,MAExB,IAAI0+B,EAAe,IAAIC,GAAer6C,KAAKg4C,cAAe1uC,EAAWuhB,EAAUvZ,EAAU87B,GAAiBiL,GAAY0B,EAAclvB,IAKpI,OAJI+uB,IAEAQ,EAAahkC,SAAS81B,WAAWzxB,MAAQs/B,GAEtCK,GAEJT,EAnG4B,CAoGrCtC,IAUEgD,IAT2B,IAAIpB,GASC,SAAUhM,GAE1C,SAASqN,EAAgBtC,EAAe9+B,EAAU2R,EAAUvZ,EAAUoG,GAClE,IAAIw1B,EAAQD,EAAO1rC,KAAKvB,OAASA,KAQjC,OAPAktC,EAAMx1B,SAAWA,EACjBw1B,EAAMqN,cACNrN,EAAMh0B,SAAWA,EACjBg0B,EAAM92B,SAAW82B,EAAMsN,kBAAoB,IAAIxN,GAAYniB,GAC3DqiB,EAAM92B,SAAS81B,WAAazU,IAAgB,EAAG5M,GAC/CqiB,EAAM57B,SAAWA,EACjB47B,EAAM8K,cAAgBA,EACf9K,EAWX,OArBAxsC,EAAU45C,EAAiBrN,GAY3BqN,EAAgBz5C,UAAU2qB,QAAU,WAEhCxrB,KAAKu6C,WAAWrrC,QAAQ,SAAUtE,GAAM,OAAOA,MAC/C5K,KAAKu6C,WAAa,MAEtBD,EAAgBz5C,UAAU+M,UAAY,SAAU2+B,GAE5CvsC,KAAKu6C,WAAWj3C,KAAKipC,IAElB+N,EAtBwB,CAuBjClD,KAeEqD,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAkCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHA76C,KAAK66C,WAAaA,EAClB76C,KAAK86C,cAAgB96C,KAAK66C,WAAWE,eAAeC,mBAAmB,sBACvEh7C,KAAKi7C,iBAAmBj7C,KAAK86C,cAAcI,KACd,MAAzBl7C,KAAKi7C,iBAA0B,CAG/B,IAAIE,EAAYn7C,KAAK86C,cAAc5hB,cAAc,QACjDl5B,KAAK86C,cAAc3uB,YAAYgvB,GAC/Bn7C,KAAKi7C,iBAAmBj7C,KAAK86C,cAAc5hB,cAAc,QACzDiiB,EAAUhvB,YAAYnsB,KAAKi7C,kBAE/Bj7C,KAAKi7C,iBAAiBG,UAAY,wDAC9Bp7C,KAAKi7C,iBAAiBpf,eAAkB77B,KAAKi7C,iBAAiBpf,cAAc,QAMhF77B,KAAKi7C,iBAAiBG,UAClB,mEAOIp7C,KAAKq7C,oBANTr7C,KAAKi7C,iBAAiBpf,eAAiB77B,KAAKi7C,iBAAiBpf,cAAc,YAkHvF,SAASyf,IACL,IACI,QAASzxC,OAAO0xC,UAEpB,MAAOn4C,GACH,OAAO;;;;;;;OAlHCk4C,GAC2Bt7C,KAAKw7C,8BAKbx7C,KAAKy7C,mCAhB5Bz7C,KAAKq7C,oBAAsBr7C,KAAK07C,wBA8GxC,OAvFAd,EAAgB/5C,UAAU66C,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAOv4C,GACH,OAAO,KAEX,IAAIy4C,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAK/2C,GACT,IAAIg2C,EAAOW,EAAInyC,SAASwxC,KAExB,OADAA,EAAK1xB,YAAY0xB,EAAK7hC,YACf6hC,GAOXN,EAAgB/5C,UAAU26C,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAIT,GAAO,IAAIrxC,OACV0xC,WACAW,gBAAgBP,EAAM,aACtBT,KAEL,OADAA,EAAK1xB,YAAY0xB,EAAK7hC,YACf6hC,EAEX,MAAO93C,GACH,OAAO,OASfw3C,EAAgB/5C,UAAU46C,kCAAoC,SAAUE,GAEpE,IAAIQ,EAAan8C,KAAK86C,cAAc5hB,cAAc,YAClD,MAAI,YAAaijB,GACbA,EAAWf,UAAYO,EAChBQ,IAEXn8C,KAAKi7C,iBAAiBG,UAAYO,EAG9B37C,KAAK66C,WAAWuB,cAChBp8C,KAAKq8C,mBAAmBr8C,KAAKi7C,kBAE1Bj7C,KAAKi7C,mBAUhBL,EAAgB/5C,UAAUw7C,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAG1vC,WAERzL,EAAIo7C,EAAQj7C,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACI8f,EADSs7B,EAAQ3F,KAAKz1C,GACJ+E,KACL,cAAb+a,GAAyD,IAA7BA,EAASvV,QAAQ,SAC7C4wC,EAAGjf,gBAAgBpc,GAI3B,IADA,IAAIu7B,EAAYF,EAAGjjC,WACZmjC,GACCA,EAAUC,WAAaC,KAAKC,cAC5B38C,KAAKq8C,mBAAmBG,GAC5BA,EAAYA,EAAUI,aAGvBhC,EA/HyB,GAkLhCiC,GAAmB,8DAEnBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMr4B,OAAOq4B,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACPrC,MACAuC,QAAQC,KAAK,wCAA0CH,EAAM,sCAE1D,UAAYA,GAEvB,SAASI,GAAeC,GAEpB,OADAA,EAAS14B,OAAO04B,IACFza,MAAM,KAAKv3B,IAAI,SAAUgyC,GAAU,OAAON,GAAaM,EAAOC,UAAYhyC,KAAK;;;;;;;OAUjG,SAASiyC,GAAOC,GACZ,IAAI5M,EAAKlqC,EACL8E,KACJ,IACI,IAAK,IAAIiyC,EAAK96C,EAAS66C,EAAK5a,MAAM,MAAO8a,EAAKD,EAAGz6C,QAAS06C,EAAGx6C,KAAMw6C,EAAKD,EAAGz6C,OAEvEwI,EADQkyC,EAAGz6C,QACF,EAGjB,MAAO4uC,GAASjB,GAAQrtC,MAAOsuC,GAC/B,QACI,IACQ6L,IAAOA,EAAGx6C,OAASwD,EAAK+2C,EAAG3L,SAASprC,EAAGnF,KAAKk8C,GAEpD,QAAU,GAAI7M,EAAK,MAAMA,EAAIrtC,OAEjC,OAAOiI,EAEX,SAASmyC,KAEL,IADA,IAIIC,EAAKl3C,EAJLm3C,KACKj3C,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCi3C,EAAKj3C,GAAMvF,UAAUuF,GAGzB,IAAI4E,KACJ,IACI,IAAK,IAAIsyC,EAASn7C,EAASk7C,GAAOE,EAAWD,EAAO96C,QAAS+6C,EAAS76C,KAAM66C,EAAWD,EAAO96C,OAAQ,CAClG,IAAI9B,EAAI68C,EAAS96C,MACjB,IAAK,IAAIsc,KAAKre,EACNA,EAAET,eAAe8e,KACjB/T,EAAI+T,IAAK,IAIzB,MAAOy+B,GAASJ,GAAQr6C,MAAOy6C,GAC/B,QACI,IACQD,IAAaA,EAAS76C,OAASwD,EAAKo3C,EAAOhM,SAASprC,EAAGnF,KAAKu8C,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIr6C,OAEjC,OAAOiI,EAOX,IA0JIyyC,GA1JAC,GAAgBX,GAAO,0BAGvBY,GAAkCZ,GAAO,kDACzCa,GAAmCb,GAAO,SAC1Cc,GAA4BV,GAAMS,GAAkCD,IAEpEG,GAAiBX,GAAMQ,GAAiCZ,GAAO,oMAI/DgB,GAAkBZ,GAAMS,GAAkCb,GAAO,+LAGjEiB,GAAiBb,GAAMO,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYlB,GAAO,gEAEnBmB,GAAenB,GAAO,UACtBoB,GAAapB,GAAO,idAWpBqB,GAAcjB,GAAMc,GAAWC,GAAcC,IAK7CE,GAA0C,WAC1C,SAASA,IAGL7+C,KAAK8+C,oBAAqB,EAC1B9+C,KAAK++C,OA2FT,OAzFAF,EAAyBh+C,UAAUm+C,iBAAmB,SAAU1C,GAM5D,IAFA,IAAIvxC,EAAUuxC,EAAGjjC,WACb4lC,GAAe,EACZl0C,GAWH,GAVIA,EAAQ0xC,WAAaC,KAAKC,aAC1BsC,EAAej/C,KAAKk/C,aAAan0C,GAE5BA,EAAQ0xC,WAAaC,KAAKyC,UAC/Bn/C,KAAKo/C,MAAMr0C,EAAQs0C,WAInBr/C,KAAK8+C,oBAAqB,EAE1BG,GAAgBl0C,EAAQsO,WACxBtO,EAAUA,EAAQsO,gBAGtB,KAAOtO,GAAS,CAERA,EAAQ0xC,WAAaC,KAAKC,cAC1B38C,KAAKs/C,WAAWv0C,GAEpB,IAAI/H,EAAOhD,KAAKu/C,sBAAsBx0C,EAASA,EAAQ6xC,aACvD,GAAI55C,EAAM,CACN+H,EAAU/H,EACV,MAEJ+H,EAAU/K,KAAKu/C,sBAAsBx0C,EAASA,EAAQqP,YAG9D,OAAOpa,KAAK++C,IAAIzzC,KAAK,KAUzBuzC,EAAyBh+C,UAAUq+C,aAAe,SAAUlwB,GACxD,IAAI3H,EAAU2H,EAAQwwB,SAASC,cAC/B,IAAKjB,GAAe/9C,eAAe4mB,GAE/B,OADArnB,KAAK8+C,oBAAqB,GACnB,EAEX9+C,KAAK++C,IAAIz7C,KAAK,KACdtD,KAAK++C,IAAIz7C,KAAK+jB,GAEd,IADA,IAAIk1B,EAAUvtB,EAAQpiB,WACbzL,EAAI,EAAGA,EAAIo7C,EAAQj7C,OAAQH,IAAK,CACrC,IAAIu+C,EAASnD,EAAQ3F,KAAKz1C,GACtB8f,EAAWy+B,EAAOx5C,KAClBy5C,EAAQ1+B,EAASw+B,cACrB,GAAKb,GAAYn+C,eAAek/C,GAAhC,CAIA,IAAI18C,EAAQy8C,EAAOz8C,MAEfw7C,GAAUkB,KACV18C,EAAQ85C,GAAa95C,IACrBy7C,GAAaiB,KACb18C,EAAQm6C,GAAen6C,IAC3BjD,KAAK++C,IAAIz7C,KAAK,IAAK2d,EAAU,KAAM2+B,GAAe38C,GAAQ,UATtDjD,KAAK8+C,oBAAqB,EAYlC,OADA9+C,KAAK++C,IAAIz7C,KAAK,MACP,GAEXu7C,EAAyBh+C,UAAUy+C,WAAa,SAAUv0C,GACtD,IAAIsc,EAAUtc,EAAQy0C,SAASC,cAC3BjB,GAAe/9C,eAAe4mB,KAAa62B,GAAcz9C,eAAe4mB,KACxErnB,KAAK++C,IAAIz7C,KAAK,MACdtD,KAAK++C,IAAIz7C,KAAK+jB,GACdrnB,KAAK++C,IAAIz7C,KAAK,OAGtBu7C,EAAyBh+C,UAAUu+C,MAAQ,SAAUA,GAASp/C,KAAK++C,IAAIz7C,KAAKs8C,GAAeR,KAC3FP,EAAyBh+C,UAAU0+C,sBAAwB,SAAUl9B,EAAM0kB,GACvE,GAAIA,IACC1kB,EAAKw9B,wBAAwB9Y,GAC1B2V,KAAKoD,kCAAoCpD,KAAKoD,+BAClD,MAAM,IAAIl8C,MAAM,6DAA+Dye,EAAK09B,WAExF,OAAOhZ,GAEJ8X,EAhGkC,GAmGzCmB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASL,GAAe38C,GACpB,OAAOA,EAAMgkB,QAAQ,KAAM,SACtBA,QAAQ+4B,GAAuB,SAAU/C,GAG1C,MAAO,MAAyB,MAFvBA,EAAMiD,WAAW,GAEJ,QADZjD,EAAMiD,WAAW,GACqB,OAAU,OAAW,MAEpEj5B,QAAQg5B,GAAyB,SAAUhD,GAAS,MAAO,KAAOA,EAAMiD,WAAW,GAAK,MACxFj5B,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAASk5B,GAActF,EAAYuF,GAC/B,IAAInF,EAAmB,KACvB,IACIgD,GAAkBA,IAAmB,IAAIrD,GAAgBC,GAEzD,IAAIwF,EAAaD,EAAkBz7B,OAAOy7B,GAAmB,GAC7DnF,EAAmBgD,GAAgB5C,oBAAoBgF,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAI18C,MAAM,yDAEpB08C,IACAD,EAAaE,EACbA,EAAatF,EAAiBG,UAC9BH,EAAmBgD,GAAgB5C,oBAAoBgF,SAClDA,IAAeE,GACxB,IAAItxB,EAAY,IAAI4vB,GAChB2B,EAAWvxB,EAAU+vB,iBAAiByB,GAAmBxF,IAAqBA,GAIlF,OAHIN,MAAe1rB,EAAU6vB,oBACzB5B,QAAQC,KAAK,qFAEVqD,EAEX,QAEI,GAAIvF,EAEA,IADA,IAAI9gC,EAAWsmC,GAAmBxF,IAAqBA,EAChD9gC,EAASd,YACZc,EAASqP,YAAYrP,EAASd,aAK9C,SAASonC,GAAmBnE,GACxB,MAAO,YAAaA,GAIxB,SAASoE,EAAkBpE,GACvB,OAAOA,EAAGG,WAAaC,KAAKC,cAAgC,aAAhBL,EAAGkD;;;;;;;OALakB,CAAkBpE,GAC1EA,EAAG/T,QACH,KAkBR,IAAIoY,IACAC,OAAQ,WAORC,IACAD,OAAQ,WAURE,GAAS,IACTC,GAAkB,wCAClBC,GAAqB,qBACrBC,GAAY,wBACZC,GAAiB,iBACjBC,GAAa,wCAUjB,SAASC,GAAaC,GAClB,IAAKA,EACD,SAEJ,IAMIpE,EANAqE,EAAU,EACVC,KACAC,KACAC,EAAS,QAIb,IAFAA,EAAOC,UAAY,EAEZzE,EAAQwE,EAAOE,KAAKN,IAAU,CACjC,IAAIO,EAAM3E,EAAMv1C,MAChB,GAAgB,KAAZu1C,EAAM,IAEN,GADAsE,EAAWM,MACc,GAArBN,EAAWjgD,OAAa,CAExB,IAAIwgD,EAAQT,EAAQ11C,UAAU21C,EAASM,GACnCb,GAAgBgB,KAAKD,GACrBN,EAAQl+C,KAAK0+C,GAAcF,IAEtBA,GACLN,EAAQl+C,KAAKw+C,GAEjBR,EAAUM,EAAM,OAGnB,CACD,GAAyB,GAArBL,EAAWjgD,OAAa,CACxB,IAAI2gD,EAAcZ,EAAQ11C,UAAU21C,EAASM,GAC7CJ,EAAQl+C,KAAK2+C,GACbX,EAAUM,EAAM,EAEpBL,EAAWj+C,KAAK,MAGxB,IAAIqI,EAAY01C,EAAQ11C,UAAU21C,GAIlC,MAHiB,IAAb31C,GACA61C,EAAQl+C,KAAKqI,GAEV61C,EASX,SAASQ,GAAcX,GAiBnB,IAhBA,IAAIa,KACA/6C,KACAg7C,EAAU,EACVC,EAAc,EAWdr7B,EAAQq6B,GAVZC,EAAUA,EAAQp6B,QAAQ85B,GAAiB,SAAUsB,EAAKC,EAAS98C,GAQ/D,OANI28C,EADS,WAAT38C,EACU,EAGA,EAEd48C,EAAcG,SAASD,EAAQx7B,OAAO,GAAI,IACnC,MAIF86B,EAAM,EAAGA,EAAM76B,EAAMzlB,QAAS,CACnC,IAAIM,EAAMmlB,EAAM66B,KAAOtE,OACP,IAAZ6E,IAEAvgD,EAAMA,EAAIqlB,QAAQ,oBAAqB,OAEvCrlB,EAAIN,QACJ4gD,EAAM5+C,KAAK1B,GAEf,IAAI4gD,EAASpB,GAAar6B,EAAM66B,MAC5BY,EAAOlhD,QACP6F,EAAO7D,KAAKk/C,GAKpB,OApjSJ,SAASC,EAAkBC,EAAQC,EAAU/X,GACrC8X,GAAUC,GAqBlB,SAASC,EAAWhY,GAGhB,MAAM,IAAIhnC,MAAM,oBAAsBgnC,GAvBlCgY,CAAWhY,GAgjSf6X,CAAkBP,EAAMx2C,QAAQ,UAAW,EAAG,0CAErClG,KAAM28C,EAASC,YAAaA,EAAaF,MAAOA,EAAO/6C,OAAQA,GAK5E,SAAS07C,GAA+Bn8B,GAMpC,IALA,IAAIu2B,EAIA6F,EAHAt3C,EAAM,GACN9D,EAAQ,EACRq7C,GAAa,EAEqC,QAA9C9F,EAAQ+D,GAAmBW,KAAKj7B,KAC/Bq8B,EAMG9F,EAAM,KAAO6D,GAAS,KAAOgC,EAAahC,KAC1Cp5C,EAAQu1C,EAAMv1C,MACdq7C,GAAa,IAPjBv3C,GAAOkb,EAAQ/a,UAAUjE,EAAOu1C,EAAMv1C,MAAQu1C,EAAM,GAAG37C,QACvDwhD,EAAa7F,EAAM,GACnB8F,GAAa,GAYrB,OADAv3C,EAAOkb,EAAQI,OAAOpf,GAsC1B,SAASs7C,GAA6BX,EAAKY,EAAiBhiC,EAAUiiC,QAC/C,IAAfA,IAAyBA,EAAa,MAI1C,IAHA,IAAIC,GAAiB,KAAM,MACvBC,EAAYf,EAAIzf,MAAMse,IACtBxgC,EAAO,EACFrO,EAAI,EAAGA,EAAI+wC,EAAU9hD,OAAQ+Q,IAAK,CACvC,IAAIgxC,EAAYD,EAAU/wC,GAC1B,GAAQ,EAAJA,EAAO,CAEP,IAAIo4B,EAAe8X,SAASc,EAAW,IACvCF,EAAc7/C,MAAM,EAAImnC,GACxB/pB,GAAc4iC,GAAU7Y,OAEL,KAAd4Y,GAELF,EAAc7/C,KAAK+/C,GAU3B,OAPAF,EAAc7/C,KAAK2/C,GAAmB,GACjChiC,EAAW,EAAe,IAC3BA,GACAkiC,EAAc7/C,KAAK2d,EAAUiiC,GAEjCC,EAAc,GAAKziC,EACnByiC,EAAc,GAAKA,EAAc7hD,OAAS,EACnC6hD,EAEX,SAASI,GAAeC,EAAe9iC,GAGnC,IAAIu8B,OAFS,IAATv8B,IAAmBA,EAAO,GAC9BA,GAAc4iC,GAAUE,EAAcpB,aAEtC,IAAK,IAAIjhD,EAAI,EAAGA,EAAIqiD,EAAcr8C,OAAO7F,OAAQH,IAE7C,IADA,IAAIsiD,EAAWD,EAAcr8C,OAAOhG,GAC3BkR,EAAI,EAAGA,EAAIoxC,EAASniD,OAAQ+Q,IAAK,CACtC,IAAIpP,EAAQwgD,EAASpxC,GACrB,GAAqB,iBAAVpP,EACP,KAAOg6C,EAAQiE,GAAeS,KAAK1+C,IAC/Byd,GAAc4iC,GAAUf,SAAStF,EAAM,GAAI,UAI/Cv8B,EAAO6iC,GAAetgD,EAAOyd,GAIzC,OAAOA,EAEX,IAAIgjC,MACAC,IAAyB,EAS7B,SAASL,GAAU7Y,GACf,OAAO,GAAKmZ,KAAKC,IAAIpZ,EAAc,IAEvC,IAAIqZ,MAwBJ,SAASC,GAAUr8C,EAAOgf,EAASs9B,GAC/B,IAAI5rC,EAAQoF,KAIRpF,EAAMoD,mBAA2D,OAAtCpD,EAAM1P,KAAKhB,EAAQ6K,KAOtD,SAAS0xC,EAAmB7rC,EAAO1Q,EAAOgf,EAASs9B,GAC/CN,KAAiBC,IAAyBj8C,EAC1C,IAAI6Q,EAAWwE,KACXga,EAAoB3e,EAAM6H,UAAU3e,OAASiR,GAC7C2F,EAAwBiF,KACxBoP,EAAcjP,KAAgBH,KAC9BjF,GAAyBA,EAAsBwC,OAC/C0F,EAAcmM,GAAeA,IAAgBhU,EAASzF,IACtDyZ,EAAY7kB,MAAQ6K,GACpB7K,EACAw8C,EAAqB,EACzBJ,GAAiBI,GAAsB9jC,EACvC,IAAI+jC,KAGAz8C,EAAQ,GAAKwQ,IAA0BqU,GAEvC43B,EAAc7gD,KAAK4U,EAAsBxQ,OAAS,EAAoB,GAM1E,IAJA,IAAIy7C,KACAiB,KAEAC,EA1IR,SAASC,EAA0B59B,EAASs9B,GACxC,GAAgC,iBAArBA,EAEP,OAAOnB,GAA+Bn8B,GAItC,IAAIjL,EAAQiL,EAAQhb,QAAQ,IAAMs4C,EAAmBlD,IAAU,EAAIkD,EAAiBn+C,WAAWvE,OAC3Foa,EAAMgL,EAAQ69B,OAAO,IAAIC,OAAO1D,GAAS,cAAgBkD,EAAmBlD,KAChF,OAAO+B,GAA+Bn8B,EAAQ/a,UAAU8P,EAAOC,IAgIzC4oC,CAA0B59B,EAASs9B,GAC1BphB,MAAMqe,IAChC9/C,EAAI,EAAGA,EAAIkjD,EAAS/iD,OAAQH,IAAK,CACtC,IAAI8B,EAAQohD,EAASljD,GACrB,GAAQ,EAAJA,EAEA,GAAwB,MAApB8B,EAAM4jB,OAAO,IAEb,GAAwB,MAApB5jB,EAAM4jB,OAAO,GAAY,CACzB,IAAI49B,EAAUlC,SAASt/C,EAAM6jB,OAAO,GAAI,IACxC1G,EAAc0jC,KAAmBI,GACjCC,EAAc7gD,KAAKmhD,GAAW,EAAoB,SAIlDA,EAAUlC,SAASt/C,EAAM6jB,OAAO,GAAI,IAExCq9B,EAAc7gD,KAAKmhD,GAAW,EAAoB,EAAgBrkC,GAAe,GAAwB,GACjF,MAApBnd,EAAM4jB,OAAO,KACbi9B,KAAmBI,GAAsB9jC,EAAcqkC,QAO/D,IADA,IAAI19B,EAAQ9jB,EAAM2/B,MAAMue,IACf9uC,EAAI,EAAGA,EAAI0U,EAAMzlB,OAAQ+Q,IAE9B,GADApP,EAAQ8jB,EAAM1U,GACN,EAAJA,EAAO,CAGPqlB,GAAanf,GACb,IAAImsC,EAAetsC,EAAM6H,UAAU3e,OAAS,EAAIiR,GAChD4xC,EAAc7gD,KAAKu9C,GAAoD,GAAIzgC,GAAe,GAAwB,GAElH,IAAIojC,EAAgBxB,GAAc/+C,EAAM6jB,OAAO,EAAG7jB,EAAM3B,OAAS,IAC7Dof,EAAO6iC,GAAeC,GAC1BmB,GAASP,EAAgBZ,EAAekB,EAAcA,GAEtD,IAAIE,EAAYR,EAAe9iD,OAAS,EACxC6hD,EAAc7/C,KAAKggD,GAAUE,EAAcpB,aAC3C,GACC,EAAIoB,EAAcpB,YAAasC,GAAgB,EAAoB,EAAmBE,EAAWlkC,EAClG,EACAgkC,GAAgB,EAAoB,EAAmBE,QAEtD,GAAc,KAAV3hD,EAAc,CAEnB,IAAI4hD,EAAa5hD,EAAMg6C,MAAMiE,IAE7BxpB,GAAanf,GACb4rC,EAAc7gD,KAEduhD,EAAa,GAAK5hD,EAAOmd,GAAe,GAAwB,GAC5DykC,GACAlsC,GAAcqqC,GAA6B//C,EAAOmV,EAAM6H,UAAU3e,OAAS,EAAIiR,IAAgB4wC,IAcnH/qC,EAAM1P,KAAKhB,EAAQ6K,KANfjG,KAAM8L,EAAM6H,UAAU3e,OAASiR,GAAgBwkB,EAC/CA,kBAAmBA,EACnBj2B,OAAQqjD,EACRW,OAAQ3B,EACR4B,KAAMX,EAAe9iD,OAAS8iD,EAAiB,MA9F/CH,CAAmB7rC,EAAO1Q,EAAOgf,EAASs9B,GAkGlD,SAASgB,GAAe7uC,EAAOoW,EAAa4tB,GAExC,IAAI5hC,EAAWwE,KACVo9B,IACDA,EAAgB5tB,GAGhB4tB,IAAkB5tB,GAAepW,IAAUoW,EAAY9R,OACvDtE,EAAMnT,KAAOupB,EAAY9R,MACzB8R,EAAY9R,MAAQtE,GAEfgkC,IAAkB5tB,GAAepW,IAAUgkC,EAAcn3C,MAC9DmT,EAAMnT,KAAOm3C,EAAcn3C,KAC3Bm3C,EAAcn3C,KAAOmT,GAGrBA,EAAMnT,KAAO,KAEbupB,IAAgBhU,EAASzF,MACzBqD,EAAMuE,OAAS6R,GAEnBJ,GAAYjW,GAAiBC,EAAOoC,GAAWpC,EAAOoC,GACtD,IAAI9B,EAAY8B,EAASpC,EAAMzO,OAK/B,OAJmB,IAAfyO,EAAM3Q,MAA8BqR,GAAaJ,IAEjD0V,GAAY1V,EAAUxB,IAASkB,EAAOoC,GAEnCpC,EAMX,SAAS8uC,KACL,IAAI7sC,EAAQoF,KAIRpF,EAAMoD,mBAOd,SAAS0pC,EAAiB9sC,GAWtB,IAVA,IAAIG,EAAWwE,KAEXooC,EAAYzB,GAAeC,MAC3ByB,EAAQhtC,EAAM1P,KAAKy8C,EAAY5yC,IAG/B2F,EAAwBiF,KACxBkoC,EAAsBC,GAAkBH,EAAWC,EAAMtkD,OAAQskD,EAAMruB,kBAAmBxe,GAGrFpX,EAAIgkD,EAAY,EAAGhkD,GAAK+W,EAAsBxQ,MAAQ6K,GAAepR,KAClC,IAApCkkD,EAAoB35C,QAAQvK,IAC5BokD,GAAWpkD,EAAGoX,GAnBlB2sC,CAAiB9sC,GAuBzB,SAASktC,GAAkB59C,EAAOy8C,EAAeptB,EAAmBxe,GAKhE,IAJA,IAAIT,EAAW2E,KACX+oC,EAAe,KACfrL,EAAgB,KAChBkL,KACKlkD,EAAI,EAAGA,EAAIgjD,EAAc7iD,OAAQH,IAAK,CAC3C,IAAIskD,EAAStB,EAAchjD,GAC3B,GAAqB,iBAAVskD,EAGPtL,EAAgBqL,EAChBA,EACIjuB,GAAkBR,IAAqB,EAJ3BrN,GAAe+7B,EAAQ3tC,GAIgC,KAAM,MAC7EyF,IAAY,QAEX,GAAqB,iBAAVkoC,EACZ,OAAiB,EAATA,GACJ,KAAK,EACD,IAAIC,EAAuBD,IAAW,GAClCE,OAAmB,EAWvBxL,EAAgB6K,GAAeQ,EAP3BG,EAHAD,IAAyBh+C,EAGN6Q,EAASzF,IAGTuD,GAASqvC,EAAsBntC,GAIS4hC,GAC/DwL,EAAiB3iD,KAAO,KACxB,MACJ,KAAK,EACD,IAAIwT,EAAYivC,IAAW,EAC3BJ,EAAoB/hD,KAAKkT,GACzB2jC,EAAgBqL,GAChBA,EAAenvC,GAASG,EAAW+B,MAE/B6E,GAAyBooC,GACC,IAAtBA,EAAahgD,MACb+X,IAAY,IAGpB,MACJ,KAAK,EAED48B,EAAgBqL,EAAenvC,GADZovC,IAAW,EACwBltC,GACtD6E,GAAyBooC,GACzBjoC,IAAY,GACZ,MACJ,KAAK,EAID4f,GAHuBsoB,IAAW,EACnBtB,IAAgBhjD,GACfgjD,IAAgBhjD,IAEhC,MACJ,QACI,MAAM,IAAIyC,MAAM,yDAA4D6hD,EAAS,UAI7F,OAAQA,GACJ,KAAK5E,GACD,IAAI+E,EAAezB,IAAgBhjD,GAInCg5C,EAAgBqL,GAChBA,EAAejuB,GAAkBR,IAAqB,EAHnCjf,EAASstB,cAAcwgB,GAGgD,KAAM,OACnFC,gBAAkB,KAE/BtoC,IAAY,GACZ,MACJ,KAAKojC,GACD,IAAImF,EAAe3B,IAAgBhjD,GAInCg5C,EAAgBqL,EAChBA,EAAejuB,GAAkBR,IAAqB,EAHnCjf,EAASohB,cAAc4sB,GAG2CA,EAAc,MACnG,MACJ,QACI,MAAM,IAAIliD,MAAM,yDAA4D6hD,EAAS,MAKrG,OADAloC,IAAY,GACL8nC,EAkFX,SAASE,GAAW79C,EAAO6Q,GACvB,IAAIwtC,EAAiB1vC,GAAS3O,EAAO6Q,GAErCiR,GAAYu8B,EADS9vC,GAAiBvO,EAAO6Q,IACC,KAAMA,GACpDwtC,EAAe17B,UAAW,EAE1B,IAAI5T,EAAY8zB,GAAK7iC,GACrB,GAAImP,GAAaJ,GAAY,CACzB,IAAIyS,EAAazS,EACW,IAAxBsvC,EAAevgD,MACfgkB,GAAYu8B,EAAgB78B,EAAWjU,KAAW,KAAMsD,GAE5D2Q,EAAWhU,IAAiB,MASpC,SAAS8wC,GAAet+C,EAAOP,GAC3B,IAAIiR,EAAQoF,KAIRpF,EAAMoD,mBAA2D,OAAtCpD,EAAM1P,KAAKhB,EAAQ6K,KAOtD,SAAS0zC,EAAwB7tC,EAAO1Q,EAAOP,GAI3C,IAHA,IACI++C,EADkB/oC,KACqBzV,MAAQ6K,GAC/C4wC,KACKhiD,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,GAAK,EAIpC,IAHA,IAAI8f,EAAW9Z,EAAOhG,GAElB4lB,EADU5f,EAAOhG,EAAI,GACLyhC,MAAMue,IACjB9uC,EAAI,EAAGA,EAAI0U,EAAMzlB,OAAQ+Q,IAAK,CACnC,IAAIpP,EAAQ8jB,EAAM1U,GACV,EAAJA,GACe,KAAVpP,IAEcA,EAAMg6C,MAAMiE,IAE3BvoC,GAAcqqC,GAA6B//C,EAAOijD,EAAsBjlC,GAAWkiC,GAGnFhmB,GAAiB+oB,EAAsBjlC,EAAUhe,IAKjEmV,EAAM1P,KAAKhB,EAAQ6K,IAAiB4wC,EA7BhC8C,CAAwB7tC,EAAO1Q,EAAOP,GA+B9C,IA0CIg/C,GA1CAC,GAAa,EACbC,GAAgB,EAOpB,SAASC,GAAQC,GACTA,IAAeh4B,KACf63B,IAA2B,GAAKC,IAEpCA,KAQJ,SAASG,GAAU9+C,GACf,GAAI2+C,GAAe,CACf,IAAIjuC,EAAQoF,KAERjF,EAAWwE,KACXqoC,EAAQhtC,EAAM1P,KAAKhB,EAAQ6K,IAC3B4wC,OAAgB,EAChB4B,EAAO,KACPxkD,MAAM2P,QAAQk1C,GACdjC,EAAgBiC,GAGhBjC,EAAgBiC,EAAMN,OACtBC,EAAOK,EAAML,MA3KzB,SAAS0B,EAAkBtD,EAAe4B,EAAM2B,EAAoBN,EAAY7tC,EAAUouC,QAC/D,IAAnBA,IAA6BA,GAAiB,GAElD,IADA,IAAIC,GAAc,EACTzlD,EAAI,EAAGA,EAAIgiD,EAAc7hD,OAAQH,IAAK,CAE3C,IAAI0lD,EAAW1D,EAAchiD,GAEzB2lD,EAAY3D,IAAgBhiD,GAChC,GAAIwlD,GAAmBE,EAAWT,EAG9B,IADA,IAAInjD,EAAQ,GACHoP,EAAIlR,EAAI,EAAGkR,GAAMlR,EAAI2lD,EAAYz0C,IAAK,CAC3C,IAAIozC,EAAStC,EAAc9wC,GAC3B,GAAqB,iBAAVozC,EACPxiD,GAASwiD,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAETxiD,GAAS4S,GAAY0C,EAASmuC,EAAqBjB,QAElD,CACD,IAAIjvC,EAAYivC,IAAW,EAC3B,OAAiB,EAATA,GACJ,KAAK,EAGDtoB,GAAiB3mB,EAFF2sC,IAAgB9wC,GAEOpP,EADrBkgD,IAAgB9wC,IAEjC,MACJ,KAAK,EACDwxB,GAAYrtB,EAAWvT,GACvB,MACJ,KAAK,EACD,IAAI2hD,EAAYzB,IAAgB9wC,GAC5B00C,EAAOhC,EAAKH,GACZoC,EAAW3wC,GAASG,EAAW+B,GAEnC,GAAiC,OAA7ByuC,EAASnB,gBAET,IADA,IAAIoB,EAAcF,EAAKh0B,OAAOi0B,EAASnB,iBAC9BqB,EAAI,EAAGA,EAAID,EAAY3lD,OAAQ4lD,IAAK,CACzC,IAAIC,EAAeF,EAAYC,GAC/B,OAAuB,EAAfC,GACJ,KAAK,EAED5B,GADkB4B,IAAiB,EACX5uC,GACxB,MACJ,KAAK,EACD,IAEI6uC,EADiB/wC,GADI4wC,EAAYC,EAAI,KAAO,EACE3uC,GACjBstC,gBACb,OAAhBuB,GAGAzuC,GADiBosC,EADKoC,IAAiB,GAEdp0B,OAAOq0B,GAAcH,IAOlE,IAAII,EAAYC,GAAaP,EAAM9jD,GACnC+jD,EAASnB,iBAAiC,IAAfwB,EAAmBA,EAAY,KAE1D/B,IAAmB,EAAGyB,EAAKjmD,OAAOumD,GAAYN,EAAKhwB,kBAAmBxe,GACtEquC,GAAc,EACd,MACJ,KAAK,EAEDG,EAAOhC,EADPH,EAAYzB,IAAgB9wC,IAE5B20C,EAAW3wC,GAASG,EAAW+B,GAC/BkuC,EAAkBM,EAAKjC,OAAOkC,EAASnB,iBAAkBd,EAAM2B,EAAoBN,EAAY7tC,EAAUquC,KAOjIzlD,GAAK2lD,GAiGLL,CAAkBtD,EAAe4B,EADRxsC,EAASxF,IAAiBszC,GAAgB,EACRD,GAAY7tC,GAEvE6tC,GAAa,EACbC,GAAgB,GAwZxB,SAASiB,GAAa9D,EAAe+D,GACjC,IAAI7/C,EAAQ87C,EAActB,MAAMx2C,QAAQ67C,GACxC,IAAe,IAAX7/C,EACA,OAAQ87C,EAAch+C,MAClB,KAAK,EAED,IACIgiD,EA9BpB,SAASC,EAAkBxkD,EAAOykD,GAE9B,OAhXJ,SAASC,EAAcD,EAAQE,GACN,iBAAVA,IACPA,EAAQrF,SAASqF,EAAO,KAE5B,IAAIxmD,EAAIwmD,EACJC,EAAWzmD,EAAEyE,WAAWohB,QAAQ,YAAa,IAC7C9lB,EAAIyiD,KAAKkE,MAAMlE,KAAKmE,IAAI3mD,IACxBme,EAAIsoC,EAASvmD,OACbg1C,EAAIiM,SAASsF,EAAU,IACvB5mD,EAAIshD,SAASnhD,EAAEyE,WAAWohB,QAAQ,iBAAkB,IAAK,KAAO,EAEpE,OADWygC,EAAO9kB,MAAM,KAAK,GAAG6c,er+C,EACO+kD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAI7mD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,EAC/B+kD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN9mD,GAAiB,IAANC,EACJ+kD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,EACO+kD,GAAO+B,KACR,IAAN9mD,EACO+kD,GAAO6B,IACR,IAAN5mD,EACO+kD,GAAOgC,IACd/mD,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACvD+kD,GAAOiC,IACdhnD,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxD+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN9mD,GAAiB,IAANoe,EACJ4mC,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAI7mD,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvB+kD,GAAO6B,IACd5mD,EAAI,KAAOwiD,KAAKkE,MAAM1mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvB+kD,GAAOiC,IACdhnD,EAAI,IAAO,GAAKA,EAAI,KAAOwiD,KAAKkE,MAAM1mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC1EA,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxD+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAI7mD,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3D+kD,GAAO6B,IACd5mD,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3D+kD,GAAOgC,IACd/mD,EAAI,KAAOwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,IAAO,MACzEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC5DA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzB+kD,GAAOiC,IACN,IAANhnD,GAAYA,EAAI,KAAQ,EACnB+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN1oC,GAAWpe,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAOm1C,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvE6P,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,KAC9Bm1C,EAAI,KAAOsN,KAAKkE,MAAMxR,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACpDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC3B6P,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAAN9mD,GAAiB,IAANoe,EACJ4mC,GAAO6B,IACd7mD,IAAMyiD,KAAKkE,MAAM3mD,IAAMA,GAAK,GAAKA,GAAK,GAAW,IAANoe,EACpC4mC,GAAOiC,IACN,IAAN7oC,EACK4mC,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,EACO+kD,GAAO+B,KACR,IAAN9mD,EACO+kD,GAAO6B,IACR,IAAN5mD,EACO+kD,GAAOgC,IACR,IAAN/mD,EACO+kD,GAAOiC,IACR,IAANhnD,EACO+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,GAAmB,IAANH,IAAmB,IAANE,GAAiB,IAANA,GAC9BglD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,MACL,IAAK,MACD,OAAU,IAAN1oC,GAAWpe,EAAI,KAAQ,GAAKm1C,EAAI,KAAQ,EACjC6P,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,KAAQ,GAAKm1C,EAAI,KAAQ,EACjC6P,GAAOgC,IACR,IAAN5oC,GAAWpe,EAAI,MAAQyiD,KAAKkE,MAAM3mD,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACzEm1C,EAAI,MAAQsN,KAAKkE,MAAMxR,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,EACvD6P,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACD,OAAU,IAAN9mD,GAAiB,IAANA,EACJglD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,MACD,OAAU,IAAN1oC,IAAkB,IAANpe,GAAiB,IAANA,GAAiB,IAANA,IAC5B,IAANoe,GAAape,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,GAChD,IAANoe,GAAc+2B,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,EACpD6P,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,EACO+kD,GAAO6B,IACR,IAAN5mD,EACO+kD,GAAOgC,IACd/mD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,EAC/B+kD,GAAOiC,IACdhnD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,GAC/B+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,GAAiB,KAANA,EACJ+kD,GAAO6B,IACR,IAAN5mD,GAAiB,KAANA,EACJ+kD,GAAOgC,IACd/mD,IAAMwiD,KAAKkE,MAAM1mD,KAAOA,GAAK,GAAKA,GAAK,IAAMA,GAAK,IAAMA,GAAK,IACtD+kD,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN1oC,GAAWpe,EAAI,IAAO,EACfglD,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,IAAO,EACfglD,GAAOgC,IACR,IAAN5oC,GACCpe,EAAI,KAAQ,GAAKA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAE5E,IAANoe,EACK4mC,GAAOkC,KACXlC,GAAO8B,MAHH9B,GAAOiC,IAItB,IAAK,KACD,OAAU,IAANjnD,GAAiB,IAANoe,EACJ4mC,GAAO6B,IACR,IAAN7mD,GAAiB,IAANoe,EACJ4mC,GAAOgC,IACR,IAAN5oC,GAAane,GAAK,GAAKA,GAAK,IAAOA,EAAI,IAAO,EAE3C+kD,GAAO8B,MADH9B,GAAOkC,KAEtB,IAAK,KACD,OAAU,IAANpnD,GAAWE,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAe,IAANF,EAC3CklD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,MACD,OAAU,IAAN7mD,EACO+kD,GAAO+B,KACR,IAAN9mD,EACO+kD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACD,OAAU,IAAN7mD,EACO+kD,GAAO6B,IACR,IAAN5mD,EACO+kD,GAAOgC,IACXhC,GAAO8B,MAClB,IAAK,MACD,OAAU,IAAN7mD,EACO+kD,GAAO+B,KACP,IAAN/mD,GAAiB,IAANA,GAAoB,IAANC,EAEvB+kD,GAAO8B,MADH9B,GAAO6B,IAEtB,IAAK,KACD,OAAI5mD,EAAI,IAAO,GAAOA,EAAI,KAAO,IAAMA,EAAI,KAAO,GAE9CA,EAAI,KAAOwiD,KAAKkE,MAAM1mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvB+kD,GAAOiC,IACN,IAAN9R,EACK6P,GAAOkC,KACXlC,GAAO8B,MANH9B,GAAO6B,IAOtB,IAAK,KACL,IAAK,MACD,OAAI5mD,EAAI,IAAO,GAAKA,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzE,IAANme,GAAW+2B,EAAI,MAAQsN,KAAKkE,MAAMxR,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnE6P,GAAO+B,KACd9mD,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAa,IAANme,GAAW+2B,EAAI,IAAO,GAAOA,EAAI,KAAQ,IACtE,IAAN/2B,GAAY+2B,EAAI,IAAO,EAClB6P,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN1oC,GAAWpe,EAAI,IAAO,GAAKm1C,EAAI,IAAO,EAC/B6P,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,EACO+kD,GAAO6B,IACR,IAAN5mD,GAAWA,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAClE+kD,GAAOiC,IACdhnD,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxD+kD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN9mD,GAAiB,IAANoe,EACJ4mC,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBglD,GAAOiC,IACR,IAAN7oC,GAAmB,IAANpe,GAAYA,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC7E,IAANoe,GAAWpe,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANoe,GAAWpe,EAAI,MAAQyiD,KAAKkE,MAAM3mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEglD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,KACD,OAAI7mD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,GAAa,IAANA,EACtC+kD,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN9mD,GAAiB,IAANoe,EACJ4mC,GAAO6B,IACN,IAANzoC,GAAkB,IAANne,GACN,IAANA,GAAYA,EAAI,MAAQwiD,KAAKkE,MAAM1mD,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACrE+kD,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAAN1oC,GAAWpe,EAAI,IAAO,GAAOA,EAAI,KAAQ,GAClCglD,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBglD,GAAOiC,IACR,IAAN7oC,GAAWpe,EAAI,IAAO,GAChB,IAANoe,GAAWpe,EAAI,KAAOyiD,KAAKkE,MAAM3mD,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANoe,GAAWpe,EAAI,MAAQyiD,KAAKkE,MAAM3mD,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEglD,GAAOkC,KACXlC,GAAO8B,MAClB,IAAK,MACD,OAAU,IAAN9mD,GAAiB,IAANC,EACJ+kD,GAAO6B,IACd5mD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,GAC/B+kD,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN7mD,GAAiB,IAANA,GAAiB,IAAND,GAAiB,IAANm1C,EAC1B6P,GAAO6B,IACX7B,GAAO8B,MAClB,IAAK,KACD,OAAU,IAAN1oC,GAAWpe,EAAI,KAAQ,EAChBglD,GAAO6B,IACR,IAANzoC,GAAWpe,EAAI,KAAQ,EAChBglD,GAAOgC,IACR,IAAN5oC,GAAWpe,EAAI,MAAQyiD,KAAKkE,MAAM3mD,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAAa,IAANoe,EACzE4mC,GAAOiC,IACXjC,GAAO8B,MAClB,IAAK,MACD,OAAI7mD,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,GAAKA,GAAK,GAAKA,IAAMwiD,KAAKkE,MAAM1mD,IAAMA,GAAK,IAAMA,GAAK,GAC3E+kD,GAAO6B,IACX7B,GAAO8B,MAIlB,QACI,OAAO9B,GAAO8B,OAITN,CAAcD,EAAQzkD,IAE/B,KAAKkjD,GAAO+B,KACR,MAAO,OACX,KAAK/B,GAAO6B,IACR,MAAO,MACX,KAAK7B,GAAOgC,IACR,MAAO,MACX,KAAKhC,GAAOiC,IACR,MAAO,MACX,KAAKjC,GAAOkC,KACR,MAAO,OACX,QACI,MAAO,SAgBgBZ,CAAkBF,EADxB,UAGE,KADf7/C,EAAQ87C,EAActB,MAAMx2C,QAAQ87C,KACC,UAAjBA,IAChB9/C,EAAQ87C,EAActB,MAAMx2C,QAAQ,UAExC,MAEJ,KAAK,EACDhE,EAAQ87C,EAActB,MAAMx2C,QAAQ,SAKhD,OAAOhE,EAUX,SAASi9C,GAAS2D,EAAO9E,EAAetoC,EAAY6b,GAMhD,IALA,IAAIwxB,KACAtB,KACAuB,KACAl8C,KACAm8C,KACKtnD,EAAI,EAAGA,EAAIqiD,EAAcr8C,OAAO7F,OAAQH,IAAK,CAIlD,IAFA,IAAIsiD,EAAWD,EAAcr8C,OAAOhG,GAChCunD,KACKr2C,EAAI,EAAGA,EAAIoxC,EAASniD,OAAQ+Q,IAAK,CACtC,IAAIpP,EAAQwgD,EAASpxC,GACrB,GAAqB,iBAAVpP,EAAoB,CAE3B,IAAI0lD,EAAWD,EAAWplD,KAAKL,GAAS,EAExCwgD,EAASpxC,GAAK,WAAes2C,EAAW,WAGhD,IAAIC,EAAUC,GAAapF,EAASn4C,KAAK,IAAK4P,EAAYwtC,EAAYJ,EAAOvxB,GAC7EwxB,EAAYjlD,KAAKslD,EAAQ9nD,QACzBmmD,EAAY3jD,KAAKslD,EAAQ71B,QACzBy1B,EAAYllD,KAAKslD,EAAQ9D,QACzBx4C,EAAKhJ,KAAKslD,EAAQt8C,MAClBm8C,EAAUnlD,KAAKslD,EAAQH,WAW3BH,EAAMhlD,MARFkC,KAAMg+C,EAAch+C,KACpB8G,KAAMA,EACNyqB,kBAAmBA,EAAoB,EAAG0xB,UAAWA,EACrDvG,MAAOsB,EAActB,MACrBphD,OAAQynD,EACRx1B,OAAQk0B,EACRnC,OAAQ0D,IAGZ,IAAIxxC,EAAY+F,KACZ+rC,EAAgBlF,KAAKmF,IAAIvnD,MAAMoiD,KAAMpgD,EAAS8I,IAClD,IAASnL,EAAI,EAAGA,EAAI2nD,EAAe3nD,IAC/Bu2B,GAAa1gB,GAarB,SAAS6xC,GAAaxI,EAAYjgC,EAAasoC,EAAYJ,EAAOvxB,GAC9D,IACIkkB,EADkB,IAAIL,GAAgB/yB,UACHwzB,oBAAoBgF,GAC3D,IAAKpF,EACD,MAAM,IAAIr3C,MAAM,yCAEpB,IACIolD,GAAY18C,KAAM,EAAGm8C,aAAe3nD,UAAYiyB,UAAY+xB,WAEhE,OAaJ,SAASmE,EAAWn9B,EAAa88B,EAASxoC,EAAasoC,EAAYJ,EAAOvxB,GACtE,GAAIjL,EAAa,CAEb,IADA,IAAIo9B,KACGp9B,GAAa,CAChB,IAAIib,EAAWjb,EAAY8wB,YACvBtrB,EAAWyF,KAAsB6xB,EAAQt8C,KAC7C,OAAQwf,EAAY2wB,UAChB,KAAKC,KAAKC,aACN,IAAIwM,EAAar9B,EACbzE,EAAU8hC,EAAW9hC,QAAQo4B,cACjC,GAAKjB,GAAe/9C,eAAe4mB,GAI9B,CACDuhC,EAAQ9nD,OAAOwC,KAAKq9C,GAAgBt5B,EAASjH,GAAe,GAAwB,GAEpF,IADA,IAAIm8B,EAAU4M,EAAWv8C,WAChBzL,EAAI,EAAGA,EAAIo7C,EAAQj7C,OAAQH,IAAK,CACrC,IAAIioD,EAAO7M,EAAQ3F,KAAKz1C,GACpBkoD,EAAgBD,EAAKljD,KAAKu5C,cACT2J,EAAKnmD,MAAMg6C,MAAMiE,IAG9BtC,GAAYn+C,eAAe4oD,IAEvB1wC,GADA8lC,GAAU4K,GACIrG,GAA6BoG,EAAKnmD,MAAOquB,EAAU83B,EAAKljD,KAAM62C,IAEvE2B,GAAa2K,GACJrG,GAA6BoG,EAAKnmD,MAAOquB,EAAU83B,EAAKljD,KAAMk3C,IAG9D4F,GAA6BoG,EAAKnmD,MAAOquB,EAAU83B,EAAKljD,MANqB0iD,EAAQ9D,QAe3G8D,EAAQ9nD,OAAOwC,KAAKguB,GAAY,EAAoB,EAAc83B,EAAKljD,KAAMkjD,EAAKnmD,OAI1FgmD,EAAWn9B,EAAYzS,WAAYuvC,EAASt3B,EAAUo3B,EAAYJ,EAAOvxB,GAEzE6xB,EAAQ71B,OAAOzvB,KAAKguB,GAAY,EAAoB,QAlCpDs3B,EAAQt8C,OAoCZ,MACJ,KAAKowC,KAAKyC,UACN,IAAIl8C,EAAQ6oB,EAAYiY,aAAe,GACnC8gB,EAAa5hD,EAAMg6C,MAAMiE,IAC7B0H,EAAQ9nD,OAAOwC,KAAKuhD,EAAa,GAAK5hD,EAAOmd,GAAe,GAAwB,GACpFwoC,EAAQ71B,OAAOzvB,KAAKguB,GAAY,EAAoB,GAChDuzB,GACAlsC,GAAcqqC,GAA6B//C,EAAOquB,GAAWs3B,EAAQ9D,QAEzE,MACJ,KAAKpI,KAAK4M,aAEN,IAAIrM,EAAQsM,GAAW5H,KAAK71B,EAAYiY,aAAe,IACvD,GAAIkZ,EAAO,CACP,IAAIuM,EAAiBjH,SAAStF,EAAM,GAAI,IAGxC2L,EAAQ9nD,OAAOwC,KAAKu9C,GAFwC,GAEdzgC,GAAe,GAAwB,GAErF8oC,EAAmB5lD,MADfmmD,EAAYf,EAAWc,GACSl4B,SAIpCs3B,EAAQt8C,OAEZ,MACJ,QAEIs8C,EAAQt8C,OAEhBwf,EAAcib,EAElB,IAAS5lC,EAAI,EAAGA,EAAI+nD,EAAmB5nD,OAAQH,IAAK,CAChD,IAAIsoD,EACAC,EAAqBR,EAAmB/nD,GAAG,GAC/CwjD,GAAS2D,EAFLmB,EAAYP,EAAmB/nD,GAAG,GAEXuoD,EAAoB3yB,EAAoB6xB,EAAQt8C,MAE3E,IAAIq9C,EAAgBrB,EAAMhnD,OAAS,EACnCsnD,EAAQt8C,MAAQs3C,KAAKmF,IAAIvnD,MAAMoiD,KAAMpgD,EAAS8kD,EAAMqB,GAAer9C,OACnEs8C,EAAQH,UAAUnlD,KAAKqmD,GACvB,IAAIjpC,EAAO6iC,GAAekG,GAC1Bb,EAAQ9D,OAAOxhD,KAAKggD,GAAUmG,EAAUrH,aACxC,GACC,EAAIqH,EAAUrH,YAAasH,GAAsB,EAAoB,EAAmBC,EAAejpC,EACxG,EACAgpC,GAAsB,EAAoB,EAAmBC,GAC7Df,EAAQ71B,OAAOzvB,KAAKqmD,GAAiB,EAAoB,EAAyBD,GAAsB,EAAoB,KA5GpIT,EAFcxI,GAAmBxF,IAAqBA,GAEnC5hC,WAAY2vC,EAAS5oC,EAAasoC,EAAYJ,EAAOvxB,GACjEiyB,GA/eX,SAAW7C,GACPA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAc,MAAI,GAAK,QANlC,CAOGA,KAAWA,QA0ed,IAAIoD,GAAa,UA6GbK,GAAiB,sCA+BjBC,IACAnlC,QAASizB,GACT7xB,WAAY,WAAc,OAAO,IAAImzB,IACrC9zB,SAEA2kC,GAA+B,SAAU7c,GAEzC,SAAS8c,EAAeC,EAAcC,GAClC,IAAI/c,EAAQD,EAAO1rC,KAAKvB,OAASA,KAEjCktC,EAAMgd,wBACNhd,EAAMqN,cACN,IAAI71C,EAAcgM,GAAes5C,GAYjC,OAVA9c,EAAMgd,qBAAuBxlD,EAAY+K,UAOzCy9B,EAAM57B,SAAW8hC,GAAe4W,EAAcC,GAL1CJ,IACInlC,QAASwC,GACTtC,SAAUsoB,KAIlBA,EAAMh0B,SAAWg0B,EAAM57B,SAASQ,IAAIk4C,GACpC9c,EAAMid,yBAA2B,IAAIlR,GAC9B/L,EAWX,OA7BAxsC,EAAUqpD,EAAgB9c,GAoB1B8c,EAAelpD,UAAU2qB,QAAU,WAE/BxrB,KAAKu6C,WAAWrrC,QAAQ,SAAUtE,GAAM,OAAOA,MAC/C5K,KAAKu6C,WAAa,MAEtBwP,EAAelpD,UAAU+M,UAAY,SAAU2+B,GAE3CvsC,KAAKu6C,WAAWj3C,KAAKipC,IAElBwd,EA9BuB,CA+BhC7iC,IACEkjC,GAAmC,SAAUnd,GAE7C,SAASod,EAAmBC,GACxB,IAAIpd,EAAQD,EAAO1rC,KAAKvB,OAASA,KAEjC,OADAktC,EAAMod,WAAaA,EACZpd,EAKX,OATAxsC,EAAU2pD,EAAoBpd,GAM9Bod,EAAmBxpD,UAAUC,OAAS,SAAUmpD,GAC5C,OAAO,IAAIH,GAAc9pD,KAAKsqD,WAAYL,IAEvCI,EAV2B,CAWpCljC;;;;;;;;AAkFF,SAASojC,GAAcC,EAAYC,EAAQC,GAEvC,IAAIjgB,EAAejsB,KAAmBgsC,EACtC,OAAO5sC,KACHitB,GAAcJ,EAAcigB,EAAUD,EAAOlpD,KAAKmpD,GAAWD,KAC7DjgB,GAAWC,GAYnB,SAASkgB,GAAcH,EAAYC,EAAQG,EAAKF,GAE5C,IAAIjgB,EAAejsB,KAAmBgsC,EACtC,OAAOpiB,GAAeqC,EAAcmgB,GAChC/f,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAASE,GAAOH,EAAOG,IAC7EpgB,GAAWC,EAAe,GAalC,SAASogB,GAAcL,EAAYC,EAAQ3f,EAAMC,EAAM2f,GAEnD,IAAIjgB,EAAejsB,KAAmBgsC,EACtC,OAAO1hB,GAAgB2B,EAAcK,EAAMC,GACvCF,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,GAAQ0f,EAAO3f,EAAMC,IAC1FP,GAAWC,EAAe,GAclC,SAASqgB,GAAcN,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAM0f,GAEzD,IAAIjgB,EAAejsB,KAAmBgsC,EACtC,OAAOthB,GAAgBuB,EAAcK,EAAMC,EAAMC,GAC7CH,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,GAAQyf,EAAO3f,EAAMC,EAAMC,IACtGR,GAAWC,EAAe,GAelC,SAASsgB,GAAcP,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAMC,EAAMyf,GAE/D,IAAIjgB,EAAejsB,KAAmBgsC,EACtC,OAAOlhB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GACnDJ,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,EAAMC,GAAQwf,EAAO3f,EAAMC,EAAMC,EAAMC,IAClHT,GAAWC,EAAe,GAgBlC,SAASugB,GAAcR,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAMP,GAErE,IAAIjgB,EAAejsB,KAAmBgsC,EAClCliB,EAAYgB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GAChE,OAAO7C,GAAeqC,EAAe,EAAGwgB,IAAS3iB,EAC7CuC,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,EAAMC,EAAMggB,GACnFR,EAAO3f,EAAMC,EAAMC,EAAMC,EAAMggB,IACnCzgB,GAAWC,EAAe,GAiBlC,SAASygB,GAAcV,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAMT,GAE3E,IAAIjgB,EAAejsB,KAAmBgsC,EAClCliB,EAAYgB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GAChE,OAAOnC,GAAgB2B,EAAe,EAAGwgB,EAAME,IAAS7iB,EACpDuC,GAAcJ,EAAe,EAAGigB,EAAUD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,GACzFV,EAAO3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,IACzC3gB,GAAWC,EAAe,GAkBlC,SAAS2gB,GAAcZ,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,EAAMX,GAEjF,IAAIjgB,EAAejsB,KAAmBgsC,EAClCliB,EAAYgB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GAChE,OAAO/B,GAAgBuB,EAAe,EAAGwgB,EAAME,EAAME,IAAS/iB,EAC1DuC,GAAcJ,EAAe,EAAGigB,EAC5BD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,GACzDZ,EAAO3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,IAC/C7gB,GAAWC,EAAe,GAmBlC,SAAS6gB,GAAcd,EAAYC,EAAQ3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,EAAME,EAAMb,GAEvF,IAAIjgB,EAAejsB,KAAmBgsC,EAClCliB,EAAYgB,GAAgBmB,EAAcK,EAAMC,EAAMC,EAAMC,GAChE,OAAO3B,GAAgBmB,EAAe,EAAGwgB,EAAME,EAAME,EAAME,IAASjjB,EAChEuC,GAAcJ,EAAe,EAAGigB,EAC5BD,EAAOlpD,KAAKmpD,EAAS5f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,EAAME,GAC/Dd,EAAO3f,EAAMC,EAAMC,EAAMC,EAAMggB,EAAME,EAAME,EAAME,IACrD/gB,GAAWC,EAAe,GAelC,SAAS+gB,GAAchB,EAAYC,EAAQgB,EAAMf,GAI7C,IAFA,IAAIjgB,EAAejsB,KAAmBgsC,EAClCliB,GAAY,EACPnnC,EAAI,EAAGA,EAAIsqD,EAAKnqD,OAAQH,IAC7BinC,GAAeqC,IAAgBghB,EAAKtqD,MAAQmnC,GAAY,GAE5D,OAAOA,EAAYuC,GAAcJ,EAAcggB,EAAOjpD,MAAMkpD,EAASe,IACjEjhB,GAAWC;;;;;;;OAiBnB,SAASihB,GAAKhkD,EAAOikD,GACjB,IACIn7C,EADA4H,EAAQoF,KAERyV,EAAgBvrB,EAAQ6K,GACxB6F,EAAMoD,mBACNhL,EAqBR,SAASo7C,EAAa1lD,EAAMg0B,GACxB,GAAIA,EACA,IAAK,IAAI/4B,EAAI,EAAGA,EAAI+4B,EAAS54B,OAAQH,IAAK,CACtC,IAAIqP,EAAU0pB,EAAS/4B,GACvB,GAAI+E,IAASsK,EAAQtK,KACjB,OAAOsK,EAInB,MAAM,IAAI5M,MAAM,mBAAqBsC,EAAO,gBA9B9B0lD,CAAaD,EAAUvzC,EAAM6iB,cACvC7iB,EAAM1P,KAAKuqB,GAAiBziB,EACxBA,EAAQ5C,YACPwK,EAAMmT,mBAAqBnT,EAAMmT,sBAAwBjoB,KAAK2vB,EAAeziB,EAAQ5C,YAI1F4C,EAAU4H,EAAM1P,KAAKuqB,GAEzB,IAAI44B,EAAer7C,EAAQlR,QAAQ,MAEnC,OADA+yB,GAAM3qB,EAAOmkD,GACNA,EA+BX,SAASC,GAAUpkD,EAAO8iD,EAAY3hB,GAClC,IAAIgjB,EAAethB,GAAK7iC,GACxB,OAAOqkD,GAAOrkD,GAASijD,GAAcH,EAAYqB,EAAaG,UAAWnjB,EAAIgjB,GACzEA,EAAaG,UAAUnjB,GAa/B,SAASojB,GAAUvkD,EAAO8iD,EAAY3hB,EAAII,GACtC,IAAI4iB,EAAethB,GAAK7iC,GACxB,OAAOqkD,GAAOrkD,GAASmjD,GAAcL,EAAYqB,EAAaG,UAAWnjB,EAAII,EAAI4iB,GAC7EA,EAAaG,UAAUnjB,EAAII,GAcnC,SAASijB,GAAUxkD,EAAO8iD,EAAY3hB,EAAII,EAAII,GAC1C,IAAIwiB,EAAethB,GAAK7iC,GACxB,OAAOqkD,GAAOrkD,GACVojD,GAAcN,EAAYqB,EAAaG,UAAWnjB,EAAII,EAAII,EAAIwiB,GAC9DA,EAAaG,UAAUnjB,EAAII,EAAII,GAevC,SAAS8iB,GAAUzkD,EAAO8iD,EAAY3hB,EAAII,EAAII,EAAII,GAC9C,IAAIoiB,EAAethB,GAAK7iC,GACxB,OAAOqkD,GAAOrkD,GACVqjD,GAAcP,EAAYqB,EAAaG,UAAWnjB,EAAII,EAAII,EAAII,EAAIoiB,GAClEA,EAAaG,UAAUnjB,EAAII,EAAII,EAAII,GAY3C,SAAS2iB,GAAU1kD,EAAO8iD,EAAYrjD,GAClC,IAAI0kD,EAAethB,GAAK7iC,GACxB,OAAOqkD,GAAOrkD,GAAS8jD,GAAchB,EAAYqB,EAAaG,UAAW7kD,EAAQ0kD,GAC7EA,EAAaG,UAAUxqD,MAAMqqD,EAAc1kD,GAEnD,SAAS4kD,GAAOrkD,GACZ,OAAO8V,KAAW9U,KAAKhB,EAAQ6K,IAAe9B;;;;;;;OA+DlD,IAAI47C,GAA8B,SAAUpf,GASxC,SAASof,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIpf,EAAQD,EAAO1rC,KAAKvB,OAASA,KAEjC,OADAktC,EAAMqf,UAAYD,EACXpf,EAkDX,OA9DAxsC,EAAU2rD,EAAcpf,GAkBxBof,EAAaxrD,UAAU2rD,KAAO,SAAUvpD,GAASgqC,EAAOpsC,UAAUmC,KAAKzB,KAAKvB,KAAMiD,IASlFopD,EAAaxrD,UAAUi8B,UAAY,SAAU2vB,EAAiBlpD,EAAOmpD,GACjE,IAAIC,EACAC,EAAU,SAAUC,GAAO,OAAO,MAClCC,EAAa,WAAc,OAAO,MAClCL,GAA8C,iBAApBA,GAC1BE,EAAc3sD,KAAKusD,UAAY,SAAUtpD,GACrCyV,WAAW,WAAc,OAAO+zC,EAAgBzpD,KAAKC,MACrD,SAAUA,GAASwpD,EAAgBzpD,KAAKC,IACxCwpD,EAAgBlpD,QAChBqpD,EAAU5sD,KAAKusD,UAAY,SAAUM,GAAOn0C,WAAW,WAAc,OAAO+zC,EAAgBlpD,MAAMspD,MAC9F,SAAUA,GAAOJ,EAAgBlpD,MAAMspD,KAE3CJ,EAAgBC,WAChBI,EAAa9sD,KAAKusD,UAAY,WAAc7zC,WAAW,WAAc,OAAO+zC,EAAgBC,cACxF,WAAcD,EAAgBC,eAItCC,EAAc3sD,KAAKusD,UAAY,SAAUtpD,GAASyV,WAAW,WAAc,OAAO+zC,EAAgBxpD,MAC9F,SAAUA,GAASwpD,EAAgBxpD,IACnCM,IACAqpD,EACI5sD,KAAKusD,UAAY,SAAUM,GAAOn0C,WAAW,WAAc,OAAOnV,EAAMspD,MAAc,SAAUA,GAAOtpD,EAAMspD,KAEjHH,IACAI,EACI9sD,KAAKusD,UAAY,WAAc7zC,WAAW,WAAc,OAAOg0C,OAAoB,WAAcA,OAG7G,IAAIK,EAAO9f,EAAOpsC,UAAUi8B,UAAUv7B,KAAKvB,KAAM2sD,EAAaC,EAASE,GAIvE,OAHIL,aAA2B3sD,EAAKktD,cAChCP,EAAgB75B,IAAIm6B,GAEjBA,GAEJV,EA/DsB,CAgE/BvsD,EAAKmtD,SA2BHC,GAA6B,WAC7B,SAASA,KAIT,OADAA,EAAYpoD,kBAAoB,WAAc,OAAOqoD,GAA4BD,EAAa7U,KACvF6U,EALqB,GAS5BC,GADwC5pC,GA0BxC6pC,GAA2B,WAC3B,SAASA,EAAU1yC,EAAQ2yC,EAASC,GAChCttD,KAAK0a,OAASA,EACd1a,KAAKqtD,QAAUA,EACfrtD,KAAKstD,KAAOA,EA2ChB,OAzCAF,EAAUvsD,UAAU0sD,MAAQ,SAAUliB,EAAWmiB,EAAWC,EAASC,GAC7DD,EACAztD,KAAKstD,KAAOK,GAAY3tD,KAAKstD,KAAMjiB,EAAWmiB,EAAmB,MAARE,EAAeA,EAAO,MAG/E1tD,KAAKqtD,QAAUM,GAAY3tD,KAAKqtD,QAAShiB,EAAWmiB,EAAmB,MAARE,EAAeA,EAAO,OAG7FN,EAAUvsD,UAAU+sD,MAAQ,WAAc,OAAO,IAAIR,EAAUptD,KAAM,KAAMA,KAAKstD,OAChFF,EAAUvsD,UAAUynB,UAAY,WAC5B,IAAIulC,EAAiBC,GAAuB9tD,KAAKqtD,SAC7CU,EAAcD,GAAuB9tD,KAAKstD,MAC9C,OAAOO,GAAkBE,EAAc,IAAIX,EAAUptD,KAAM6tD,EAAgBE,GAAe,MAE9FX,EAAUvsD,UAAUolC,WAAa,WAC7B,IAAI4nB,EAAiBG,GAAkBhuD,KAAKqtD,SACxCU,EAAcC,GAAkBhuD,KAAKstD,MACzC,OAAOO,GAAkBE,EAAc,IAAIX,EAAUptD,KAAM6tD,EAAgBE,GAAe,MAE9FX,EAAUvsD,UAAUipB,WAAa,SAAUpiB,GACvCumD,GAAavmD,EAAO1H,KAAKqtD,SACzBY,GAAavmD,EAAO1H,KAAKstD,OAE7BF,EAAUvsD,UAAUo8B,QAAU,SAAU9mB,GAEpC,OADAyc,GAAI5yB,KAAKstD,KAAMn3C,GACXO,GAAmBP,IACnByc,GAAI5yB,KAAKqtD,QAASl3C,GACdA,EAAMuE,QAAUhE,GAAmBP,EAAMuE,SAGzCkY,GAAI5yB,KAAK0a,OAAO2yC,QAASl3C,GAEtBnW,KAAK0a,SAWxB,SAASwzC,EAAkB/3C,GACvB,OAAwB,OAAjBA,EAAMuE,QAAmBhE,GAAmBP,EAAMuE,QAVrDwzC,CAAkB/3C,IAAUyc,GAAI5yB,KAAKqtD,QAASl3C,GACvCnW,OAEXotD,EAAUvsD,UAAU0pB,WAAa,WAC7B4jC,GAAanuD,KAAKqtD,SAClBc,GAAanuD,KAAKstD,OAEfF,EA/CmB;;;;;;;OAoD9B,SAASU,GAAuBM,GAE5B,IADA,IAAItX,EAAS,KACNsX,GAAO,CACV,IAAIC,KACJD,EAAMjnD,OAAO7D,KAAK+qD,GAQlBvX,GANI9zC,KAAM8zC,EACNwX,KAAMF,EAAME,KACZd,UAAWY,EAAMZ,UACjBrmD,OAAQknD,EACRA,gBAAiB,MAGrBD,EAAQA,EAAMprD,KAElB,OAAO8zC,EAEX,SAASkX,GAAkBI,GAEvB,IADA,IAAItX,EAAS,KACNsX,GAQHtX,GANI9zC,KAAM8zC,EACNwX,KAAMF,EAAME,KACZd,UAAWY,EAAMZ,UACjBrmD,UACAknD,gBAAiBD,EAAMjnD,QAG3BinD,EAAQA,EAAMprD,KAElB,OAAO8zC,EAEX,SAASmX,GAAavmD,EAAO0mD,GACzB,KAAOA,GAGHA,EAAMC,gBAAgBnkC,OAAOxiB,EAAO,EAAG0mD,EAAMjnD,QAC7CinD,EAAQA,EAAMprD,KAGtB,SAASmrD,GAAaC,GAClB,KAAOA,GAAO,CAGV,IAAIC,EAAkBD,EAAMC,gBACxBE,EAAgBF,EAAgB3iD,QAAQ0iD,EAAMjnD,QACpCknD,EAAgBnkC,OAAOqkC,EAAe,GAGxC,GAAGjtD,QACX8sD,EAAME,KAAKt8B,WAEfo8B,EAAQA,EAAMprD,MAWtB,SAASwrD,GAAyBr4C,EAAO1N,GACrC,IAAIsxB,EAAa5jB,EAAM4jB,WACvB,GAAIA,EACA,IAAK,IAAI54B,EAAI,EAAGA,EAAI44B,EAAWz4B,OAAQH,GAAK,EACxC,GAAI44B,EAAW54B,KAAOsH,EAClB,OAAOsxB,EAAW54B,EAAI,GAIlC,OAAO,KAUX,SAASstD,GAA0Bt4C,EAAOiG,EAAa5W,GACnD,IAAI44B,EAAOhiB,EAAY5J,IAAO9J,KAC9B,GAAI01B,EAKA,IAJA,IAAIxsB,EAAQuE,EAAMvE,MAEd6J,EAAQ7J,GAAS,GACjB8J,EAAMD,GAFU,KAAR7J,GAGHzQ,EAAIsa,EAAOta,EAAIua,EAAKva,IAEzB,GADUi9B,EAAKj9B,GACPqE,OAASA,EACb,OAAOrE,EAInB,OAAO,KAGX,SAASutD,GAAiBhB,EAAMv3C,EAAOiG,GACnC,IAAIi6B,EAAYqX,EAAK7oD,GACrB,GAAyB,mBAAdwxC,EACP,OAAOA,IAGP,IAAIsY,EAAcF,GAA0Bt4C,EAAOiG,EAAasxC,GAChE,OAAoB,OAAhBiB,EACOvyC,EAAYuyC,GAGpB,KAWX,SAASC,GAAmBC,EAAkB14C,EAAOiG,EAAasxC,GAC9D,IAAIoB,EAAoBD,EAAiBhqD,KACzC,OAAI6oD,EACOoB,EAAoBJ,GAAiBhB,EAAMv3C,EAAOiG,GAAe,KAErE0yC,EAEX,SAASC,GAAU54C,EAAOiG,EAAasxC,EAAMiB,GACzC,OAAIjB,EACOgB,GAAiBhB,EAAMv3C,EAAOiG,GAErCuyC,GAAe,EACRvyC,EAAYuyC,GArB3B,SAASK,EAAiB74C,EAAOiG,GAC7B,OAAmB,IAAfjG,EAAM3Q,MAA2C,IAAf2Q,EAAM3Q,KACjC4nC,GAAiBiL,GAAYliC,EAAOiG,GAE5B,IAAfjG,EAAM3Q,KACC+nC,GAAkB2f,GAAa7U,GAAYliC,EAAOiG,GAEtD,KAkBA4yC,CAAiB74C,EAAOiG,GAEnC,SAASwW,GAAIw7B,EAAOj4C,GAEhB,IADA,IAAIiG,EAAcyB,KACXuwC,GAAO,CACV,IAAIZ,EAAYY,EAAMZ,UAClBhoD,EAAOgoD,EAAUhoD,KACrB,GAAIA,EAAM,CACN,IAAIsxC,EAAS,KACTtxC,IAAS0nD,GACTpW,EAAS8X,GAAmBppD,EAAM2Q,EAAOiG,EAAaoxC,EAAUE,MAI5C,QADhBiB,EAAcF,GAA0Bt4C,EAAOiG,EAAa5W,MAE5DsxC,EAASiY,GAAU54C,EAAOiG,EAAaoxC,EAAUE,KAAMiB,IAGhD,OAAX7X,GACAmY,GAASb,EAAOtX,QAKpB,IADA,IAAIruC,EAAW+kD,EAAU/kD,SAChBtH,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IAAK,CACtC,IAAIwtD,EACgB,QADhBA,EAAcH,GAAyBr4C,EAAO1N,EAAStH,MAGxC,QADX21C,EAASiY,GAAU54C,EAAOiG,EAAaoxC,EAAUE,KAAMiB,KAEvDM,GAASb,EAAOtX,GAKhCsX,EAAQA,EAAMprD,MAGtB,SAASisD,GAASb,EAAOc,GACrBd,EAAMjnD,OAAO7D,KAAK4rD,GAClBd,EAAME,KAAKt8B,WAUf,SAAS27B,GAAYj8C,EAAU25B,EAAWmiB,EAAWE,GACjD,OACI1qD,KAAM0O,EACN48C,KAAMjjB,EACNmiB,UAZR,SAAS2B,EAAgB3B,EAAWE,GAChC,IAAIx9C,EAAU3P,MAAM2P,QAAQs9C,GAC5B,OACIhoD,KAAM0K,EAAU,KAAOs9C,EACvB/kD,SAAUyH,EAAUs9C,EAAY,KAChCE,KAAMA,GAOKyB,CAAgB3B,EAAWE,GACtCvmD,OAAQkkC,EAAU+jB,YAClBf,gBAAiB,MAGzB,IAkFIgB,GAlF4B,WAC5B,SAASC,IACLtvD,KAAK8iC,OAAQ,EACb9iC,KAAKuvD,QAAU,IAAIlD,GACnBrsD,KAAK61B,WAEL71B,KAAKovD,eA0ET,OAxEAhvD,OAAO+B,eAAemtD,EAAWzuD,UAAW,UACxCiR,IAAK,WAAc,OAAO9R,KAAK61B,QAAQv0B,QACvC8qC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAemtD,EAAWzuD,UAAW,SACxCiR,IAAK,WACD,IAAI3K,EAASnH,KAAK61B,QAClB,OAAO1uB,EAAO7F,OAAS6F,EAAO,GAAK,MAEvCilC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAemtD,EAAWzuD,UAAW,QACxCiR,IAAK,WACD,IAAI3K,EAASnH,KAAK61B,QAClB,OAAO1uB,EAAO7F,OAAS6F,EAAOA,EAAO7F,OAAS,GAAK,MAEvD8qC,YAAY,EACZC,cAAc,IAMlBijB,EAAWzuD,UAAUwK,IAAM,SAAUT,GAAM,OAAO5K,KAAK61B,QAAQxqB,IAAIT,IAKnE0kD,EAAWzuD,UAAU2uD,OAAS,SAAU5kD,GACpC,OAAO5K,KAAK61B,QAAQ25B,OAAO5kD,IAM/B0kD,EAAWzuD,UAAU4uD,KAAO,SAAU7kD,GAClC,OAAO5K,KAAK61B,QAAQ45B,KAAK7kD,IAM7B0kD,EAAWzuD,UAAU6uD,OAAS,SAAU9kD,EAAI+kD,GACxC,OAAO3vD,KAAK61B,QAAQ65B,OAAO9kD,EAAI+kD,IAMnCL,EAAWzuD,UAAUqO,QAAU,SAAUtE,GAAM5K,KAAK61B,QAAQ3mB,QAAQtE,IAKpE0kD,EAAWzuD,UAAU+uD,KAAO,SAAUhlD,GAClC,OAAO5K,KAAK61B,QAAQ+5B,KAAKhlD,IAE7B0kD,EAAWzuD,UAAUgvD,QAAU,WAAc,OAAO7vD,KAAK61B,QAAQ5a,MAAM,IACvEq0C,EAAWzuD,UAAUyJ,KAAuB,WAAc,OAAOtK,KAAK61B,QAAQvrB,QAC9EglD,EAAWzuD,UAAUgF,SAAW,WAAc,OAAO7F,KAAK61B,QAAQhwB,YAClEypD,EAAWzuD,UAAUivD,MAAQ,SAAUtkD,GACnCxL,KAAK61B,QA11Vb,SAASk6B,EAAQzB,GAGb,IAFA,IAAIxX,KACA31C,EAAI,EACDA,EAAImtD,EAAKhtD,QAAQ,CACpB,IAAIs1C,EAAO0X,EAAKntD,GACZZ,MAAM2P,QAAQ0mC,GACVA,EAAKt1C,OAAS,GACdgtD,EAAO1X,EAAKnzC,OAAO6qD,EAAKrzC,MAAM9Z,EAAI,IAClCA,EAAI,GAGJA,KAIJ21C,EAAOxzC,KAAKszC,GACZz1C,KAGR,OAAO21C,EAu0VYiZ,CAAQvkD,GACvBxL,KAAK8iC,OAAQ,GAEjBwsB,EAAWzuD,UAAUmvD,gBAAkB,WAAchwD,KAAKuvD,QAAQ/C,KAAKxsD,OACvEsvD,EAAWzuD,UAAUmxB,SAAW,WAAchyB,KAAK8iC,OAAQ,GAC3DwsB,EAAWzuD,UAAU2qB,QAAU,WAC3BxrB,KAAKuvD,QAAQ7C,WACb1sD,KAAKuvD,QAAQvyB,eAEVsyB,EAhFoB,GA6F/B,SAASlB,GAAM6B,EAAazC,EAAWC,EAEvCC,GAEI,IAAIriB,EAAY,IAAIgkB,GAOpB,OAhlUJ,SAASa,EAA0BC,GAQ/B,OALIj4C,IAAyBA,KAA0BK,GAASzF,MAC3D4D,GAAmBwB,MACpBG,KAAmBA,GAAiBA,GAAeu1C,SACnD11C,GAAsBtG,OAAS,OAE5ByG,KAAmBA,GAAiB,IAAI83C,EAAU,KAAM,KAAM,OAkkUvDD,CAA0B9C,IAChCG,MAAMliB,EAAWmiB,EAAWC,EAASC,GAC7C3wB,GAAwB,KAAMsO,EAAWA,EAAU7f,SAChC,MAAfykC,GACA59B,GAAM49B,EAAa5kB,GAEhBA,EAOX,SAAS+kB,GAAa/kB,GAElB,QAAIA,EAAUvI,QACVuI,EAAUykB,MAFMzkB,EAEc+jB,aAC9B/jB,EAAU2kB,mBACH;;;;;;;OAgBf,SAASK,GAAqBl6C,EAAOiG,GACjC,OAAOmxB,GAAkB2f,GAAa7U,GAAYliC,EAAOiG;;;;;;;;;;;;;;OAkB7D,IA6EWk0C,GA7EPC,GAAQ,8BACZ,SAASC,GAAwBvtD,EAAOuC,GACpC,OAAQvC,aAAiB0hB,QAAU1hB,EAAMstD,MAAW/qD,EA8DxD,SAASirD,GAA8BC,EAAetyC,GAClD,IAAIuyC,EAAU,IAAIhsC,OAAO+rC,GAEzB,OADAC,EAAQJ,IAASnyC,EACVuyC;;;;;;;;;;;;;;;AAUAL,GAOR/wD,EAAQ+wD,kBAAoB/wD,EAAQ+wD,qBANnBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK,eAO3D,IAAIM,GACA,SAASA,OAgCTC,GAAmB,IAAIrM,OAAO,8LAEZ,KAmBlBsM,GAAS;;;;;;;OA2Bb,SAASC,GAAe9tD,GAEpB,KADAA,EAAQ0hB,OAAO1hB,GAAOq6C,QAElB,MAAO,GAGX,IAAI0T,EAAW/tD,EAAMg6C,MAAM6T,IAC3B,OAAKE,GAAYjU,GAAaiU,EAAS,MAAQA,EAAS,IACpD/tD,EAAMg6C,MAAM4T,KA1BpB,SAASI,EAAkBhuD,GAGvB,IAFA,IAAIiuD,GAAgB,EAChBC,GAAgB,EACXhwD,EAAI,EAAGA,EAAI8B,EAAM3B,OAAQH,IAAK,CACnC,IAAIW,EAAImB,EAAM4jB,OAAO1lB,GACX,MAANW,GAAcqvD,EACdD,GAAiBA,EAEN,MAANpvD,GAAaovD,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkBhuD,GAC5CA,GAEP03C,MACAuC,QAAQC,KAAK,0CAA4Cl6C,EAAQ,uCAE9D;;;;;;;OAuBX,SAASmuD,GAAa/Q,GAClB,IAAIn/C,EAAIyb,KACR,OAAIzb,EACOA,EAAEmwD,SAAS9xD,EAAQ+wD,gBAAgBgB,KAAMjR,IAAe,GAE/DmQ,GAAwBnQ,EAAY,QAC7BA,EAAWx6C,WAEfs6C,GAAct4B,SAAUhS,GAAYwqC,IAe/C,SAASkR,GAAcC,GACnB,IAAItwD,EAAIyb,KACR,OAAIzb,EACOA,EAAEmwD,SAAS9xD,EAAQ+wD,gBAAgBmB,MAAOD,IAAgB,GAEjEhB,GAAwBgB,EAAa,SAC9BA,EAAY3rD,WAEhBkrD,GAAel7C,GAAY27C,IAgBtC,SAASE,GAAYC,GACjB,IAAIzwD,EAAIyb,KACR,OAAIzb,EACOA,EAAEmwD,SAAS9xD,EAAQ+wD,gBAAgBsB,IAAKD,IAAc,GAE7DnB,GAAwBmB,EAAW,OAC5BA,EAAU9rD,WAEdk3C,GAAalnC,GAAY87C,IAWpC,SAASE,GAAoBC,GACzB,IAAI5wD,EAAIyb,KACR,GAAIzb,EACA,OAAOA,EAAEmwD,SAAS9xD,EAAQ+wD,gBAAgByB,aAAcD,IAAsB,GAElF,GAAItB,GAAwBsB,EAAmB,eAC3C,OAAOA,EAAkBjsD,WAE7B,MAAM,IAAIjC,MAAM,iFAyBpB,IAqBIouD,IACAC,cAAe9hD,GACf+hD,mBAAoBnmD,GACpBomD,mBAAoB7hD,GACpBvL,iBAAoBA,EACpBI,eAAkBA,EAClBitD,kBAAmB5iD,GACnB6iD,cAAe9hD,GACf+hD,mBAAoBpnB,GACpBqnB,gBAAiBnvC,GACjBovC,uBAAwBlvC,GACxBvR,OAAUA,GACV0gD,mBAAoBtnB,GACpBunB,wBAAyBrC,GACzBsC,sBAAuB1gB,GACvB2gB,oBAAqB1b,GACrB2b,4BAA6BriB,GAC7BsiB,oBAAqB31B,GACrB41B,QAASjsD,GACTksD,aAAc1qC,GACd2qC,eAAgBj7B,GAChBk7B,yBAA0B7tB,GAC1B8tB,uBAAwB7tB,GACxB8tB,iBAAkB/oB,GAClBgpB,iBAAkBt7B,GAClBu7B,mBAAoB96B,GACpB+6B,gBAAiBh7B,GACjBi7B,kBAAmB52C,GACnB62C,mBAAoB52C,GACpB62C,gBAAiBj7B,GACjBk7B,cAAej7B,GACfk7B,WAAY5kC,GACZ6kC,MAhwOJ,SAASC,GAAsBpsD,EAAOsZ,EAAO1G,GACzC,IAAI/B,EAAWsF,KACXzF,EAAQoF,KAIR1D,EAHW2C,KAGO2oB,cAA2C,IAGjEjZ,GAAYrS,EADAyd,GAAkB7vB,EAAO,EAA0BoS,EAAQ,KAAMkH,GAAS,MAC3DzI,GAC3BsgB,GAA0BzgB,EAAOG,EAAU+B,IAuvO3Cy5C,MApvOJ,SAASC,KACL,IAAI97C,EAAwBiF,KACxB/E,EAAQoF,KACRF,KACAC,IAAY,GAKZH,GADAlF,EAAwBA,EAAsBwC,QAIlD,IAAIrC,EAAiBoF,KACjBpF,GACAqF,GAAkBrF,EAAe4kB,QAAQ/kB,IAE7CqD,GAAoBrD,EAAsBtG,MAAOwG,IAquOjD67C,iBAAkB1J,GAClB2J,iBAAkBvJ,GAClBwJ,iBAAkBtJ,GAClBuJ,iBAAkBtJ,GAClBuJ,iBAAkBtJ,GAClBuJ,iBAAkBtJ,GAClBuJ,iBAAkBrJ,GAClBsJ,iBAAkBpJ,GAClBqJ,iBAAkBnJ,GAClBoJ,iBAAkBlJ,GAClBmJ,kBAAmB73C,GACnB83C,eAAgB53C,GAChB63C,kBAAmBrsB,GACnBssB,kBAAmBnsB,GACnBosB,kBAAmBhsB,GACnBisB,kBAAmB7rB,GACnB8rB,kBAAmB1rB,GACnB2rB,kBAAmBxrB,GACnByrB,kBAAmBtrB,GACnBurB,kBAAmBprB,GACnBqrB,kBAAmBhtB,GACnBitB,oBAAqB92B,GACrB+2B,YAAaz5B,GACb05B,QAASjrB,GACTkrB,cAAensC,GACfosC,mBAAoBn4B,GACpBo4B,aAAc7J,GACd8J,aAAc3J,GACd4J,aAAc3J,GACd4J,aAAc3J,GACd4J,aAAc3J,GACd4J,iBAAkBvvB,GAClBwvB,QAASvK,GACTwK,SAAU9H,GACV+H,gBAAiB/F,GACjBgG,wBAAyBhrB,GACzBirB,aAAclsB,GACdmsB,kBAAmBz3B,GACnB03B,qBAAsB10B,GACtB20B,oBAAqB/0B,GACrBg1B,uBAAwBj2B,GACxBk2B,YAAalqD,GACbmqD,QAAShtD,GACTitD,eAAgB/yB,GAChBgzB,qBAAsBrxB,GACtBsxB,mBAAoB5wB,GACpB6wB,kBAAmB/Q,GACnBgR,WAAY1Q,GACZ2Q,aAAclT,GACdmT,WAAYjS,GACZkS,aAAc3Q,GACd4Q,gBAAiBhG,GACjBiG,iBAAkB9F,GAClB+F,yBA5GwB,SAAUllC,EAAMnvB,GACxC,YAAciC,IAAVjC,EACgB,qBAATmvB,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,WAATA,GAA8B,eAATA,GACjC,qBAATA,EAEDm/B,GAActuD,IAuGrBs0D,uBAAwB1F,GACxB2F,kBA5HJ,SAASC,GAAeC,GACpB,IAAIx2D,EAAIyb,KACR,GAAIzb,EACA,OAAOA,EAAEmwD,SAAS9xD,EAAQ+wD,gBAAgBqH,OAAQD,IAAiB,GAEvE,GAAIlH,GAAwBkH,EAAc,UACtC,OAAOA,EAAa7xD,WAExB,MAAM,IAAIjC,MAAM,0CAqHhBg0D,eAAgBlG,IAoBhBmG,GAAOC;;;;;;;OACX,SAASC,GAAOx4C,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIy4C,GAAgB,6DAChBC,GAAkB,4CAClBC,GAA4B,mEAC5BC,GAAwC,WACxC,SAASA,EAAuBC,GAC5Bp4D,KAAKq4D,SAAWD,GAAWnuD,EAAiB,QAsMhD,OApMAkuD,EAAuBt3D,UAAUy3D,oBAAsB,WAAc,OAAO,GAC5EH,EAAuBt3D,UAAUvB,QAAU,SAAU2B,GAAK,OAAO,WAE7D,IADA,IAAI0F,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAEzB,OAAO,IAAK3F,EAAE6F,KAAKtF,MAAMP,EAAGuC,QAAU,GAASmD,OAGnDwxD,EAAuBt3D,UAAU03D,wBAA0B,SAAUC,EAAYC,GAC7E,IAAI3hB,EAEAA,OADsB,IAAf0hB,EACE,IAAIj4D,MAAMk4D,EAAiBn3D,QAG3B,IAAIf,MAAMi4D,EAAWl3D,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAI21C,EAAOx1C,OAAQH,IAK3B21C,EAAO31C,QADe,IAAfq3D,KAGFA,EAAWr3D,IAAMf,QACTo4D,EAAWr3D,OAKxBs3D,GAA2C,MAAvBA,EAAiBt3D,KACrC21C,EAAO31C,GAAK21C,EAAO31C,GAAGsC,OAAOg1D,EAAiBt3D,KAGtD,OAAO21C,GAEXqhB,EAAuBt3D,UAAU63D,eAAiB,SAAUlzD,EAAMmzD,GAC9D,IAAIC,EAAUpzD,EAAKK,WAQnB,GAAImyD,GAAcrW,KAAKiX,IAClBX,GAAgBtW,KAAKiX,KAAaV,GAA0BvW,KAAKiX,GAClE,OAAO,KAGX,GAAIpzD,EAAKmC,YAAcnC,EAAKmC,aAAegxD,EAAWhxD,WAClD,OAAOnC,EAAKmC,WAGhB,IAAIkxD,EAAoBrzD,EAAKszD,eAC7B,GAAID,GAAqBA,IAAsBF,EAAWG,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAeztD,IAAI,SAAU2tD,GAAa,OAAOA,GAAaA,EAAUxzD,OACvFyzD,EAAqBH,EAAeztD,IAAI,SAAU2tD,GAClD,OAAOA,GAAaE,GAAoCF,EAAUt3D,cAEtE,OAAO1B,KAAKu4D,wBAAwBQ,EAAcE,GAGtD,IAAIR,EAAmBjzD,EAAK/E,eAAesF,IAAeP,EAAKO,GAC3DyyD,EAAax4D,KAAKq4D,UAAYr4D,KAAKq4D,SAASc,gBAC5Cn5D,KAAKq4D,SAASc,eAAe,oBAAqB3zD,GACtD,OAAIgzD,GAAcC,EACPz4D,KAAKu4D,wBAAwBC,EAAYC,GAM7C,IAAIl4D,MAAMiF,EAAKlE,QAAQ05B,UAAK91B,IAEvCizD,EAAuBt3D,UAAU8G,WAAa,SAAUnC,GAGpD,IAAKuyD,GAAOvyD,GACR,SAEJ,IAAImzD,EAAaS,GAAc5zD,GAC3BmC,EAAa3H,KAAK04D,eAAelzD,EAAMmzD,GAI3C,OAHKhxD,GAAcgxD,IAAev4D,SAC9BuH,EAAa3H,KAAK2H,WAAWgxD,IAE1BhxD,OAEXwwD,EAAuBt3D,UAAUw4D,gBAAkB,SAAUC,EAAYX,GAErE,GAAIW,EAAW1zC,aAAe0zC,EAAW1zC,cAAgB+yC,EAAW/yC,YAAa,CAC7E,IAAIA,EAAc0zC,EAAW1zC,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAI0zC,EAAW53D,YAAc43D,EAAW53D,aAAei3D,EAAWj3D,WACvDw3D,GAAoCI,EAAW53D,YAGtD43D,EAAW74D,eAAeqF,GACnBwzD,EAAWxzD,GAEf,MAEXqyD,EAAuBt3D,UAAU+kB,YAAc,SAAU0zC,GACrD,IAAKvB,GAAOuB,GACR,SAEJ,IAAIX,EAAaS,GAAcE,GAC3BC,EAAiBv5D,KAAKq5D,gBAAgBC,EAAYX,OAEtD,OADwBA,IAAev4D,OAASJ,KAAK4lB,YAAY+yC,OACxCl1D,OAAO81D,IAEpCpB,EAAuBt3D,UAAU24D,iBAAmB,SAAUF,EAAYX,GAEtE,GAAIW,EAAWG,cACXH,EAAWG,eAAiBd,EAAWc,aAAc,CACrD,IAAIA,EAAeH,EAAWG,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIH,EAAWI,gBACXJ,EAAWI,iBAAmBf,EAAWe,eAAgB,CACzD,IAAIC,EAAmBL,EAAWI,eAC9BE,KAIJ,OAHAx5D,OAAOoK,KAAKmvD,GAAkBzqD,QAAQ,SAAUkjB,GAC5CwnC,EAAexnC,GAAQ8mC,GAAoCS,EAAiBvnC,MAEzEwnC,EAGX,OAAIN,EAAW74D,eAAeuF,GACnBszD,EAAWtzD,GAEf,MAEXmyD,EAAuBt3D,UAAU44D,aAAe,SAAUH,GACtD,IAAKvB,GAAOuB,GACR,SAEJ,IAAIX,EAAaS,GAAcE,GAC3BG,KACJ,GAAId,IAAev4D,OAAQ,CACvB,IAAIy5D,EAAuB75D,KAAKy5D,aAAad,GAC7Cv4D,OAAOoK,KAAKqvD,GAAsB3qD,QAAQ,SAAU9H,GAChDqyD,EAAaryD,GAAYyyD,EAAqBzyD,KAGtD,IAAI0yD,EAAkB95D,KAAKw5D,iBAAiBF,EAAYX,GAWxD,OAVImB,GACA15D,OAAOoK,KAAKsvD,GAAiB5qD,QAAQ,SAAU9H,GAC3C,IAAI1F,KACA+3D,EAAah5D,eAAe2G,IAC5B1F,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASi2D,EAAaryD,KAE5D1F,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASs2D,EAAgB1yD,KAC3DqyD,EAAaryD,GAAY1F,IAG1B+3D,GAEXtB,EAAuBt3D,UAAUk5D,iBAAmB,SAAUv0D,EAAMw0D,GAChE,OAAOx0D,aAAgBqyD,IAAQmC,KAAcx0D,EAAK3E,WAEtDs3D,EAAuBt3D,UAAUo5D,OAAS,SAAUz0D,GAAQ,UAC5D2yD,EAAuBt3D,UAAUq5D,OAAS,SAAUh0D,GAAQ,OAAO,IAAI4xD,SAAS,IAAK,YAAc5xD,EAAO,MAC1GiyD,EAAuBt3D,UAAUs5D,OAAS,SAAUj0D,GAChD,OAAO,IAAI4xD,SAAS,IAAK,IAAK,YAAc5xD,EAAO,UAEvDiyD,EAAuBt3D,UAAUu5D,OAAS,SAAUl0D,GAEhD,OAAO,IAAI4xD,SAAS,IAAK,OADN,UAAY5xD,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5HiyD,EAAuBt3D,UAAUw5D,UAAY,SAAU70D,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAO2F,GAAU3F,IAE5B2yD,EAAuBt3D,UAAUy5D,YAAc,SAAU90D,GAAQ,MAAO,KAAO2F,GAAU3F,IACzF2yD,EAAuBt3D,UAAU05D,kBAAoB,SAAUr0D,EAAMs0D,EAAWC,EAASC,GACrF,OAAOA,GAEXvC,EAAuBt3D,UAAU85D,YAAc,SAAUC,EAAgB10D,GAAQ,OAAO00D,EAAe10D,IAChGiyD,EAxMgC,GA0M3C,SAASe,GAAoC2B,GACzC,OAAKA,EAGEA,EAAqBxvD,IAAI,SAAUyvD,GACtC,IACI7zD,EADgB6zD,EAAoBt1D,KACNyB,cAElC,OAAO,IAAKA,EAAcH,KAAKtF,MAAMyF,EAAezD,QAAU,GADzCs3D,EAAoBn0D,KAAOm0D,EAAoBn0D,gBAI5E,SAASyyD,GAAclyD,GACnB,IAAI6zD,EAAc7zD,EAAKrG,UAAYT,OAAOyiB,eAAe3b,EAAKrG,WAAa,KAI3E,OAHiBk6D,EAAcA,EAAYn6D,YAAc,OAGpCR;;;;;;;OAUzB,IAAIi4D,GAAW,KACf,SAAS2C,KACL,OAAQ3C,GAAWA,IAAY,IAAIF,GAEvC,SAAS8C,GAAoBz1D,GACzB,OAAO01D,GAAoBF,KAAarzD,WAAWnC,IAEvD,SAAS01D,GAAoB/1C,GACzB,IAAIg2C,EAAWxqD,KACf,OAAOwU,EAAK9Z,IAAI,SAAU+vD,GAAO,OAErC,SAASC,EAAkBF,EAAUC,GACjC,IAAIpzD,GACAoD,MAAO,KACPkwD,MAAM,EACNC,UAAU,EACVC,SAAUL,EAAS9qD,yBAAyBorD,MAC5C1xD,MAAM,EACN2xD,UAAU,GAEd,SAASC,EAAwBvwD,GAC7BpD,EAAKwzD,SAAWL,EAAS9qD,yBAAyBorD,MAClDzzD,EAAKoD,MAAQA,EAEjB,GAAI7K,MAAM2P,QAAQkrD,GAAM,CACpB,GAAmB,IAAfA,EAAI95D,OACJ,MAAM,IAAIsC,MAAM,yCAEpB,IAAK,IAAIyO,EAAI,EAAGA,EAAI+oD,EAAI95D,OAAQ+Q,IAAK,CACjC,IAAIupD,EAAQR,EAAI/oD,GAChB,QAAcnN,IAAV02D,EAIC,GAAIA,aAAiB5qD,IAA+C,aAAnC4qD,EAAMt7D,UAAUsF,eAClDoC,EAAKuzD,UAAW,OAEf,GAAIK,aAAiB1qD,IAA+C,aAAnC0qD,EAAMt7D,UAAUsF,eAClDoC,EAAK0zD,UAAW,OAEf,GAAIE,aAAiB3qD,IAA2C,SAAnC2qD,EAAMt7D,UAAUsF,eAC9CoC,EAAK+B,MAAO,OAEX,GAAI6xD,aAAiBzqD,IAA2C,SAAnCyqD,EAAMt7D,UAAUsF,eAC9CoC,EAAKszD,MAAO,OAEX,GAAIM,aAAiB7qD,GACtB/I,EAAKoD,MAAQwwD,EAAMxwD,WAElB,GAAIwwD,aAAiBtzD,EAAW,CACjC,QAA4BpD,IAAxB02D,EAAMrzD,cACN,MAAM,IAAI3E,MAAM,mCAEpBoE,EAAKoD,MAAQwwD,EAAMrzD,cACnBP,EAAKwzD,SAAWL,EAAS9qD,yBAAyB/H,eAGlDqzD,EAAwBC,SAKhCD,EAAwBP,GAE5B,OAAOpzD;;;;;;;OAvDiCqzD,CAAkBF,EAAUC,KAiExE,IAAIS,MAMJ,SAASC,GAAgBxR,EAAY3V,GACjConB,GAAoBzR,EAAY3V,GAoDpC,SAASqnB,EAA6B1R,EAAY3V,GAC9C,IAAIjlC,EAAeusD,GAAUtnB,EAASjlC,cAAgBmsD,IAClDK,EAAmBC,GAAoB7R,GAC3C56C,EAAaR,QAAQ,SAAUktD,GACvBA,EAAY37D,eAAesD,GAI3Bs4D,GADmBhtD,GADH+sD,GAEyBF,GAEnCE,EAAY37D,eAAewD,IAAsBm4D,EAAY37D,eAAe8D,KAElF63D,EAAYE,gBAAkBhS,KA/DtC0R,CAA6B1R,EAAY3V,GAK7C,SAASonB,GAAoBzR,EAAY3V,GACrC,IAAIjlC,EAAeusD,GAAUtnB,EAASjlC,cAAgBmsD,IAClDn3D,EAAc,KAClBtE,OAAO+B,eAAemoD,EAAY7lD,GAC9B4nC,cAAc,EACdv6B,IAAK,WAWD,OAVoB,OAAhBpN,IACAA,EAAciM,KAAoBmrD,gBAAgB9J,GAAgB,QAAU1H,EAAWpkD,KAAO,mBAC1FV,KAAM8kD,EACN76C,UAAWwsD,GAAUtnB,EAASllC,WAAaosD,IAC3CnsD,aAAcA,EACdpK,QAAS22D,GAAUtnB,EAASrvC,SAAWu2D,IAAexwD,IAAIkxD,IAC1Dh9D,QAAS08D,GAAUtnB,EAASp1C,SAAWs8D,IAAexwD,IAAIkxD,IAC1DC,YAAY,KAGb93D,KAGf,IAAIJ,EAAgB,KACpBlE,OAAO+B,eAAemoD,EAAYjmD,GAC9ByN,IAAK,WACD,GAAsB,OAAlBxN,EAAwB,CACxB,IAAI0D,GACA9B,KAAMokD,EAAWpkD,KACjBV,KAAM8kD,EACNnlC,KAAM81C,GAAoB3Q,GAC1BjlD,UAAWsvC,EAAStvC,WAAaw2D,GACjCv2D,SACIqvC,EAASrvC,SAAWu2D,GACpBlnB,EAASp1C,SAAWs8D,KAG5Bv3D,EAAgBqM,KAAoB8rD,gBAAgBzK,GAAgB,QAAU1H,EAAWpkD,KAAO,oBAAqB8B,GAEzH,OAAO1D,GAGX+nC,cAAc,IA4BtB,SAASgwB,GAA2BtsB,EAAcmsB,GAC9CnsB,EAAa9hC,cAAgB,WAAc,OAAO1N,MAAMm8D,KAAKR,EAAiBS,YAAY9tD,YACrFxD,IAAI,SAAUuxD,GAAO,OAAOttD,GAAgBstD,IAAQvtD,GAAgButD,KACpEpN,OAAO,SAAUrjD,GAAO,QAASA,KACtC4jC,EAAa7hC,SAAW,WACpB,OAAO3N,MAAMm8D,KAAKR,EAAiBS,YAAY3tD,OAAO3D,IAAI,SAAUqgD,GAAQ,OAAOn8C,GAAWm8C,MAUtG,SAASyQ,GAAoB7R,GACzB,IAAKuS,GAAWvS,GACZ,MAAM,IAAI1mD,MAAM0mD,EAAWpkD,KAAO,iCAEtC,IAAIiG,EAAMuE,GAAe45C,GACzB,GAAoC,OAAhCn+C,EAAIwD,wBACJ,OAAOxD,EAAIwD,wBAEf,IAAImtD,GACAH,aACI9tD,WAAY,IAAIzF,IAChB4F,MAAO,IAAI5F,KAEf2zD,UACIluD,WAAY,IAAIzF,IAChB4F,MAAO,IAAI5F,MAmDnB,OAhDA+C,EAAIuD,aAAaR,QAAQ,SAAU8tD,GAE3BztD,GADmBytD,GAEnBF,EAAOH,YAAY3tD,MAAM4jB,IAAIoqC,GAM7BF,EAAOH,YAAY9tD,WAAW+jB,IAAIoqC,KAG1C7wD,EAAI7G,QAAQ4J,QAAQ,SAAU0lC,GAC1B,IAAIqoB,EAAgBroB,EACpB,IAAKioB,GAAWI,GACZ,MAAM,IAAIr5D,MAAM,aAAeq5D,EAAc/2D,KAAO,uCAIxD,IAAIg3D,EAAgBf,GAAoBc,GACxCC,EAAcH,SAASluD,WAAWK,QAAQ,SAAUiuD,GAAS,OAAOL,EAAOH,YAAY9tD,WAAW+jB,IAAIuqC,KACtGD,EAAcH,SAAS/tD,MAAME,QAAQ,SAAUiuD,GAAS,OAAOL,EAAOH,YAAY3tD,MAAM4jB,IAAIuqC,OAEhGhxD,EAAI5M,QAAQ2P,QAAQ,SAAU6tD,GAC1B,IAAIK,EAAgBL,EAGpB,GAAIF,GAAWO,GAAgB,CAG3B,IAAIC,EAAgBlB,GAAoBiB,GACxCC,EAAcN,SAASluD,WAAWK,QAAQ,SAAUiuD,GAChDL,EAAOH,YAAY9tD,WAAW+jB,IAAIuqC,GAClCL,EAAOC,SAASluD,WAAW+jB,IAAIuqC,KAEnCE,EAAcN,SAAS/tD,MAAME,QAAQ,SAAUiuD,GAC3CL,EAAOH,YAAY3tD,MAAM4jB,IAAIuqC,GAC7BL,EAAOC,SAAS/tD,MAAM4jB,IAAIuqC,UAGzBzsD,GAAe0sD,GACpBN,EAAOC,SAAS/tD,MAAM4jB,IAAIwqC,GAG1BN,EAAOC,SAASluD,WAAW+jB,IAAIwqC,KAGvCjxD,EAAIwD,wBAA0BmtD,EACvBA,EAEX,SAASb,GAAU90D,GACf,IAAIm2D,KASJ,OARAn2D,EAAO+H,QAAQ,SAAUjM,GACjB1C,MAAM2P,QAAQjN,GACdq6D,EAAIh6D,KAAK9B,MAAM87D,EAAK95D,EAASy4D,GAAUh5D,KAGvCq6D,EAAIh6D,KAAKL,KAGVq6D,EAEX,SAASf,GAA0Bt5D,GAC/B,OAKJ,SAASs6D,EAAsBt6D,GAC3B,YAA0BiC,IAAnBjC,EAAM0xC,SANT4oB,CAAsBt6D,GACfA,EAAM0xC,SAEV1xC,EAKX,SAAS45D,GAAW55D,GAChB,QAASyN,GAAezN;;;;;;;OAmB5B,SAASu6D,GAAiBh4D,EAAM9C,GAC5B,IAAIsB,EAAiB,MA12ZzB,SAASy5D,EAAyC/6D,GAC1C2G,EAAyB3G,IACzByG,EAAiCypB,IAAIlwB,GA02ZzC+6D,CAAyC/6D,GACzCtC,OAAO+B,eAAeqD,EAAMzB,GACxB+N,IAAK,WACD,IAAIqpD,EAAWxqD,KACf,GAAuB,OAAnB3M,EAAyB,CACzB,GAAIqF,EAAyB3G,GAAW,CACpC,IAAIa,GAAS,cAAgB4H,GAAU3F,GAAQ,sBAQ/C,MAPI9C,EAAS6G,aACThG,EAAMD,KAAK,mBAAqB6H,GAAUzI,EAAS6G,cAEnD7G,EAAS8G,WAAa9G,EAAS8G,UAAUlI,QACzCiC,EAAMD,KAAK,iBAAmB0jB,KAAK7b,UAAUzI,EAAS8G,YAE1DjG,EAAMD,KAAK,2DACL,IAAIM,MAAML,EAAM+H,KAAK,OAE/B,IAAItD,EAAOjH,KAAa28D,GAAkBl4D,EAAM9C,IAAa8J,SAAU9J,EAAS8J,UAAY,GAAImxD,oBAAqBj7D,EAASi7D,sBAAuB,EAAOlvD,OAAQ/L,EAAS+L,QAAU5C,GAAa6sC,WAAYh2C,EAASg2C,WAAYklB,YAAaC,GAAuB7C,KAAavB,aAAaj0D,GAAOoD,IAAciG,WAAY,IAAInE,IAAOsE,MAAO,IAAItE,IAAO4D,cAAe5L,EAAS4L,eAAiB/O,EAAQ2J,kBAAkBqF,SAAU4oC,cAAez0C,EAASy0C,eAAiB,OAMvd,GALAnzC,EAAiBm3D,EAASqC,iBAAiBxL,GAAgB,QAAU7mD,GAAU3F,GAAQ,iBAAkBwC,GAgBzH,SAAS81D,EAAiBx0D,GACtB,YAAqCpE,IAA9BoE,EAAUgzD,gBAZDwB,CAAiBt4D,GAAO,CACxB,IAAIs3D,EAASX,GAAoB32D,EAAK82D,iBACtCD,GAA2Br4D,EAAgB84D,IAGnD,OAAO94D,GAGXqoC,cAAc,IAatB,SAAS0xB,GAAiBv4D,EAAMy+B,GAC5B,IAAI//B,EAAiB,KACrB9D,OAAO+B,eAAeqD,EAAMvB,GACxB6N,IAAK,WACD,GAAuB,OAAnB5N,EAAyB,CACzB,IAAI85D,EAASN,GAAkBl4D,EAAMy+B,GACrC//B,EAAiByM,KAAoBotD,iBAAiB/L,GAAgB,SAAWxsD,GAAQA,EAAKU,MAAQ,qBAAsB83D,GAEhI,OAAO95D,GAGXmoC,cAAc,IAUtB,SAASqxB,GAAkBl4D,EAAM9C,GAE7B,IAAI+2D,EAAeuB,KAAavB,aAAaj0D,GAC7C,OACIU,KAAMV,EAAKU,KACXV,KAAMA,EACNy4D,kBAAmB,EACnBx1D,SAAU/F,EAAS+F,SACnB0c,KAAM81C,GAAoBz1D,GAC1B81D,KAAM54D,EAAS44D,MAAQ4C,GACvBzE,aAAcA,EACd5sD,OAAQnK,EAASmK,QAAUhB,GAC3BiB,QAASpK,EAASoK,SAAWjB,GAC7B8R,QAASkgD,GAAuBpE,EAAc0E,IAC9CC,WACIC,mBAA8Cn5D,IAA/BM,EAAK3E,UAAUgyC,aAElCyrB,eAAgB,KAChBC,iBAzBR,SAASC,EAA0Bh5D,GAC/B,OAAOpF,OAAOyiB,eAAerd,EAAK3E,aAAeT,OAAOS,UAwBlC29D,CAA0Bh5D,GAC5CuH,SAAUrK,EAASqK,UAAY,KAC/B1H,UAAW3C,EAAS2C,WAAa,MAGzC,IAAI64D,MAaJ,SAASL,GAAuBpE,EAAcgF,GAC1C,IAAIC,KACA/tB,EAAU,SAAUguB,GAChBlF,EAAah5D,eAAek+D,IAC5BlF,EAAakF,GAAOzvD,QAAQ,SAAU0vD,GAC9BH,EAAWG,IACXF,EAAYp7D,KAfhC,SAASu7D,EAAyBC,EAAcF,GAC5C,OACIE,aAAcA,EACdtR,UANR,SAASuR,EAA0Bt2D,GAC/B,MAA2B,iBAAbA,EAmClB,SAASu2D,EAAa/7D,GAClB,OAAOA,EAAM2/B,MAAM,KAAKv3B,IAAI,SAAU4zD,GAAS,OAAOA,EAAM3hB;;;;;;;OApCtB0hB,CAAav2D,GAAYA,EAKhDs2D,CAA0BH,EAAIn2D,UACzCI,YAAa+1D,EAAI/1D,YACjBF,MAAOi2D,EAAIj2D,MACX+kD,KAAMkR,EAAIlR,KAAOkR,EAAIlR,KAAO,MASCmR,CAAyBF,EAAOC,OAKjE,IAAK,IAAID,KAASlF,EACd9oB,EAAQguB,GAEZ,OAAOD,EAEX,SAASP,GAAel7D,GACpB,IAAIiD,EAAOjD,EAAM2C,eACjB,MAAgB,iBAATM,GAAoC,oBAATA,EAEtC,SAAS0C,GAAY3F,GACjB,IAAIiD,EAAOjD,EAAM2C,eACjB,MAAgB,cAATM,GAAiC,iBAATA,EAanC,SAASg5D,GAAY15D,EAAMwC,GACvB,IAAIxD,EAAY,KAChBpE,OAAO+B,eAAeqD,EAAMjB,GACxBuN,IAAK,WAUD,OATkB,OAAdtN,IACAA,EAAYmM,KAAoBuuD,YAAYlN,GAAgB,QAAUn8C,GAAYrQ,GAAQ,iBACtFA,KAAMA,EACNU,KAAMV,EAAKU,KACXif,KAAM81C,GAAoBz1D,GAC1BmmD,SAAU3jD,EAAK9B,KACfuK,UAAoBvL,IAAd8C,EAAKyI,MAAqBzI,EAAKyI,QAGtCjM,GAGX6nC,cAAc;;;;;;;OAgBtB,IAAI8yB,GAAYl5D,EAAc,YAAa,SAAU22D,GAEjD,YADY,IAARA,IAAkBA,MACfA,QACR13D,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAOo3D,GAAyB55D,EAAMwC,KAOnFq3D,GAAYp5D,EAAc,YAAa,SAAUnE,GAEjD,YADU,IAANA,IAAgBA,MACZf,GAAWgN,gBAAiBxO,EAAQ2I,wBAAwBo3D,SAAWx9D,IAChFq9D,QAAWj6D,EAAW,SAAUM,EAAMwC,GAAQ,OAAOu3D,GAAyB/5D,EAAMwC,KAKnFw3D,GAAOv5D,EAAc,OAAQ,SAAUzF,GAAK,OAAQO,GAAW0P,MAAM,GAAQjQ,SAAQ0E,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAOy3D,GAAoBj6D,EAAMwC,KAmBpK03D,GAA0B,SAAUtrC,GACpC,OAAO,SAAUzyB,EAAQuE,GAErB,IADA,IAAIS,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,EAAK,GAAKvF,UAAUuF,GAE7B,IAAIhG,EAAce,EAAOf,YACpBA,EAAYH,eAAekE,IAzBhB,SAAUhD,GAC9B,IAAIf,EAAce,EAAOf,YACrB++D,EAAmB/+D,EAAYgE,UAC/BksC,EAAUlwC,EAAYgE,WACtBiI,UACAC,WACAZ,mBAEAyzD,IACA97D,EAAeitC,EAAQjkC,OAAQ8yD,EAAiB9yD,QAChDhJ,EAAeitC,EAAQhkC,QAAS6yD,EAAiB7yD,SACjDjJ,EAAeitC,EAAQ5kC,eAAgByzD,EAAiBzzD,iBAepD0zD,CAAkBj+D,GAGRyyB,EADAxzB,EAAYgE,WAElBsB,GAAQS,EAAK,KAOzBk5D,GAAQj4D,EAAkB,QAAS,SAAUk4D,GAAuB,OAAUA,oBAAqBA,SAA2B56D,EAAWw6D,GAAwB,SAAU5uB,GAAW,OAAOA,EAAQjkC,cAKrMkzD,GAASn4D,EAAkB,SAAU,SAAUk4D,GAAuB,OAAUA,oBAAqBA,SAA2B56D,EAAWw6D,GAAwB,SAAU5uB,GAAW,OAAOA,EAAQhkC,eAKvMkzD,GAAcp4D,EAAkB,cAAe,SAAUq4D,GAAoB,OAAUA,iBAAkBA,KAiCzGC,GAAet4D,EAAkB,eAAgB,SAAUm0B,EAAWp1B,GAAQ,OAAUo1B,UAAWA,EAAWp1B,KAAMA,KACpHw5D,GAAsC3C,GACtC4C,GAAsCrC,GACtCsC,GAAiCnB,GAIjCK,GAHqCh8C,GAIrC67C,GAHqC77C,GAIrCk8C,GAHgCl8C,GAahC+8C,GAAc58D,GAAyBghB,QAASC,OAAQC,SADjDlhB,IAEP68D,MACJ,SAASC,GAAmCh7D,EAAM8f,GAC9C,IAAKA,EAAU,CACX,IACIm7C,GADAC,EAAyB,IAAIvI,IACGxwD,WAAWnC,GAE/C,OAAO,WAAc,OAAO,IAAKA,EAAKsB,KAAKtF,MAAMgE,EAAMhC,QAAU,GAAS0O,GAAWuuD,OAEzF,GAAIH,MAAeh7C,EAAU,CACzB,IAAIq7C,EAAkBr7C,EACtB,OAAO,WAAc,OAAOq7C,EAAgB/7C,UAE3C,GAAIU,EAASO,YAAa,CAC3B,IAAI+6C,EAAqBt7C,EACzB,OAAO,WAAc,OAAOvT,GAAO6uD,EAAmB/6C,cAErD,GAAIP,EAASQ,WAAY,CAC1B,IAAI+6C,EAAoBv7C,EACxB,OAAO,WAAc,OAAOu7C,EAAkB/6C,WAAWtkB,MAAMq/D,EAAmBr9D,EAAS0O,GAAW2uD,EAAkB17C,MAAQo7C,OAE/H,GAAIj7C,EAASS,SAAU,CACxB,IAAI+6C,EAAkBx7C,EAClBy7C,EAASz7C,EAASH,KACtB,IAAK47C,EAAQ,CACT,IAAIL,EAAyB,IAAIvI,GACjC4I,EAASL,EAAuB/4D,WAAWnC,GAE/C,OAAO,WACH,IAAIkB,EACJ,OAAO,KAAMA,EAAKo6D,EAAgB/6C,UAAUjf,KAAKtF,MAAMkF,EAAIlD,QAAU,GAAS0O,GAAW6uD,OAI7F,IAAIC,EAAS17C,EAASH,KAKtB,OAJK67C,IACGN,EAAyB,IAAIvI,GACjC6I,EAASN,EAAuB/4D,WAAWnC,IAExC,WAAc,OAAO,IAAKA,EAAKsB,KAAKtF,MAAMgE,EAAMhC,QAAU,GAAS0O,GAAW8uD;;;;;;;OAmB7F,IA+DIC,GAhDAC,GAAWj7D,EAAc,WAAY,SAAU0uC,GAAY,OAAOA,QAAazvC,OAAWA,EAY9F,SAAUM,EAAMwC,GAAQ,OAAOm5D,GAAwB37D,EAAMwC,KAYzDo5D,GAAqCtF,GAErCqF,GAbJ,SAASE,GAAqB/W,EAAY5nD,GACtC,IAAI4C,EAAW5C,GAAYA,EAAS4C,YAChC5C,GAAYA,EAASnD,UACrB+F,EAAU9B,EAAS8B,GAAU5C,EAASnD,WAE1C+qD,EAAWhmD,cAAgBa,GACvB7F,QAASkhE,GAAmClW,GAAcvkC,SAAUukC,IACpEjlD,UAAW3C,GAAYA,EAAS2C,UAChCC,QAASA,KAuCbg8D,GAAU,IAZVL,GACA,SAASA,GAAQM,GACbvhE,KAAKuhE,KAAOA,EACZvhE,KAAKwhE,MAAQD,EAAK3+B,MAAM,KAAK,GAC7B5iC,KAAKyhE,MAAQF,EAAK3+B,MAAM,KAAK,GAC7B5iC,KAAK0hE,MAAQH,EAAK3+B,MAAM,KAAK3nB,MAAM,GAAG3P,KAAK,OAOzB,qBAiEtBq2D,GAAcj+D,GAAyBghB,QAASC,OAAQC,SADjDlhB,IAEX,SAASk+D,GAAmB55D,GACxB,YAAyB9C,IAAlB8C,EAAK+d,SAEhB,SAAS87C,GAAmB75D,GACxB,OAAO25D,MAAe35D,EAE1B,SAAS85D,GAAqB95D,GAC1B,YAA2B9C,IAApB8C,EAAK8d,WAEhB,SAASi8C,GAAsB/5D,GAC3B,YAA4B9C,IAArB8C,EAAK6d;;;;;;;OAgBhB,IAAIm8C,GAAa/7D,EAAc,kBAAcf,OAAWA,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAOi6D,GAA0Bz8D,EAAMwC,KAczIi6D,GAVJ,SAASC,GAAyBC,EAAgB/8D,GAC1CA,QAAkCF,IAAvBE,EAAQH,aAA6BM,EAAiB48D,KACjEA,EAAe/9D,gBAAkBW,GAC7BE,WAAYG,EAAQH,WACpB3F,QAASkhE,GAAmC2B,EAAgB/8D,OAepEg9D,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBACnB,SAASC,GAAgBh/D,GACrB,OAAOA,EAAM6+D,IAEjB,SAASI,GAAiBj/D,GACtB,OAAOA,EAAM8+D,IAKjB,SAASI,GAAmBvlB,GAExB,IADA,IAAI/1C,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/Bs2C,EAAQ35C,MAAM/B,MAAM07C,EAAS15C,EAAS2D;;;;;;;OAmC1C,IAAIu7D,GAA8B,WAC9B,SAASA,IAIL1iE,KAAK2iE,SAAWzlB,QAgCpB,OA9BAwlB,EAAa7hE,UAAU+hE,YAAc,SAAUr/D,GAC3C,IAAIs/D,EAAgB7iE,KAAK8iE,mBAAmBv/D,GACxCwW,EAAU/Z,KAAK+iE,aAAax/D,GAG5By/D,EAvDZ,SAASC,EAAe1/D,GACpB,OAAOA,EAAM++D,KAAiBG,GAsDRQ,CAAe1/D,GACjCy/D,EAAYhjE,KAAK2iE,SAAU,QAASp/D,GAChCs/D,GACAG,EAAYhjE,KAAK2iE,SAAU,iBAAkBE,GAE7C9oD,GACAipD,EAAYhjE,KAAK2iE,SAAU,gBAAiB5oD,IAIpD2oD,EAAa7hE,UAAUkiE,aAAe,SAAUx/D,GAC5C,OAAIA,EACOg/D,GAAgBh/D,GAASg/D,GAAgBh/D,GAC5CvD,KAAK+iE,aAAaP,GAAiBj/D,IAEpC,MAGXm/D,EAAa7hE,UAAUiiE,mBAAqB,SAAUv/D,GAElD,IADA,IAAIH,EAAIo/D,GAAiBj/D,GAClBH,GAAKo/D,GAAiBp/D,IACzBA,EAAIo/D,GAAiBp/D,GAEzB,OAAOA,GAEJs/D,EArCsB,GAgEjC,SAASQ,GAAuB14D,GAC5B,OAAIA,EAAKlJ,OAAS,EAGP;;;;;;;;AAff,SAAS6hE,EAAqB34D,GAE1B,IADA,IAAIgB,KACKrK,EAAI,EAAGA,EAAIqJ,EAAKlJ,SAAUH,EAAG,CAClC,GAAIqK,EAAIE,QAAQlB,EAAKrJ,KAAO,EAExB,OADAqK,EAAIlI,KAAKkH,EAAKrJ,IACPqK,EAEXA,EAAIlI,KAAKkH,EAAKrJ,IAElB,OAAOqK,EAIY23D,CAAqB34D,EAAKyQ,QAAQmoD,WACxB/3D,IAAI,SAAU67C,GAAK,OAAO/7C,GAAU+7C,EAAE97C,SACvCE,KAAK,QAAU,IAEpC,GAEX,SAAS+3D,GAAe/xD,EAAU1P,EAAK0hE,EAA2BT,GAC9D,IAAIr4D,GAAQ5I,GACR2hE,EAASD,EAA0B94D,GACnCjH,EAASs/D,EApCjB,SAASW,EAAa98C,EAASm8C,GAC3B,IAAIj4B,EAAMlkB,EAAU,gBAAkBm8C,aAAyBj/D,MAAQi/D,EAAcn8C,QAAUm8C,GAC3Ft/D,EAAQK,MAAMgnC,GAElB,OADArnC,EAAM8+D,IAAwBQ,EACvBt/D,EAgCsBigE,CAAaD,EAAQV,GAAiBj/D,MAAM2/D,GAMzE,OALAhgE,EAAMkgE,OAASA,GACflgE,EAAMiH,KAAOA,EACbjH,EAAMmgE,WAAapyD,GACnB/N,EAAM+/D,0BAA4BA,EAClC//D,EAAM8+D,IAAwBQ,EACvBt/D,EAEX,SAASkgE,GAAOnyD,EAAU1P,GACtB5B,KAAK0jE,UAAUpgE,KAAKgO,GACpBtR,KAAKwK,KAAKlH,KAAK1B,GAEf5B,KAAK0mB,QAAU1mB,KAAKsjE,0BAA0BtjE,KAAKwK,MA0HvD,SAASm5D,GAAkBrK,EAAYsK,GAEnC,IADA,IAAIC,KACK1iE,EAAI,EAAG2iE,EAAKF,EAAOtiE,OAAQH,EAAI2iE,EAAI3iE,IAAK,CAC7C,IAAI4iE,EAAYH,EAAOziE,GAKnB0iE,EAAUvgE,KAJTygE,GAAiC,GAApBA,EAAUziE,OAITyiE,EAAU14D,IAAIF,IAAWG,KAAK,KAH9B,KAMvB,OAAO1H,MAAM,sCAAyCuH,GAAUmuD,GAAc,KAC1EuK,EAAUv4D,KAAK,MAAQ,2GAEvBH,GAAUmuD,GAAc;;;;;;;;AA+DhC,IAAI0K,GAA+B,WAI/B,SAASA,EAAc54D,EAAOoD,GAG1B,GAFAxO,KAAKoL,MAAQA,EACbpL,KAAKwO,GAAKA,GACLpD,EACD,MAAM,IAAIxH,MAAM,0BAEpB5D,KAAKikE,YAAc94D,GAAUnL,KAAKoL,OAgBtC,OAXA44D,EAAclyD,IAAM,SAAU1G,GAC1B,OAAO84D,GAAmBpyD,IAAI6R,GAAkBvY,KAEpDhL,OAAO+B,eAAe6hE,EAAe,gBAIjClyD,IAAK,WAAc,OAAOoyD,GAAmBC,cAC7C/3B,YAAY,EACZC,cAAc,IAEX23B,EA1BuB,GAiD9BE,GAAqB,IArBQ,WAC7B,SAASE,IACLpkE,KAAKqkE,SAAW,IAAI35D,IAiBxB,OAfA05D,EAAYvjE,UAAUiR,IAAM,SAAU1G,GAClC,GAAIA,aAAiB44D,GACjB,OAAO54D,EACX,GAAIpL,KAAKqkE,SAASrwB,IAAI5oC,GAClB,OAAOpL,KAAKqkE,SAASvyD,IAAI1G,GAE7B,IAAIk5D,EAAS,IAAIN,GAAc54D,EAAO44D,GAAcG,cAEpD,OADAnkE,KAAKqkE,SAASn/C,IAAI9Z,EAAOk5D,GAClBA,GAEXlkE,OAAO+B,eAAeiiE,EAAYvjE,UAAW,gBACzCiR,IAAK,WAAc,OAAO9R,KAAKqkE,SAASE,MACxCn4B,YAAY,EACZC,cAAc,IAEX+3B,EAnBqB,IA6E5BI,GAAY,IA3Ce,WAC3B,SAASC,EAAU/D,GACf1gE,KAAK0gE,uBAAyBA,EA2BlC,OAzBA+D,EAAU5jE,UAAU6jE,mBAAqB,SAAUC,GAAQ3kE,KAAK0gE,uBAAyBiE,GACzFF,EAAU5jE,UAAUvB,QAAU,SAAUkG,GAAQ,OAAOxF,KAAK0gE,uBAAuBphE,QAAQkG,IAC3Fi/D,EAAU5jE,UAAU8G,WAAa,SAAU2xD,GACvC,OAAOt5D,KAAK0gE,uBAAuB/4D,WAAW2xD,IAElDmL,EAAU5jE,UAAU+kB,YAAc,SAAU0zC,GACxC,OAAOt5D,KAAK0gE,uBAAuB96C,YAAY0zC,IAEnDmL,EAAU5jE,UAAU44D,aAAe,SAAUH,GACzC,OAAOt5D,KAAK0gE,uBAAuBjH,aAAaH,IAEpDmL,EAAU5jE,UAAUk5D,iBAAmB,SAAUv0D,EAAMw0D,GACnD,OAAOh6D,KAAK0gE,uBAAuB3G,iBAAiBv0D,EAAMw0D,IAE9DyK,EAAU5jE,UAAUq5D,OAAS,SAAUh0D,GAAQ,OAAOlG,KAAK0gE,uBAAuBxG,OAAOh0D,IACzFu+D,EAAU5jE,UAAUs5D,OAAS,SAAUj0D,GAAQ,OAAOlG,KAAK0gE,uBAAuBvG,OAAOj0D,IACzFu+D,EAAU5jE,UAAUu5D,OAAS,SAAUl0D,GAAQ,OAAOlG,KAAK0gE,uBAAuBtG,OAAOl0D,IACzFu+D,EAAU5jE,UAAUw5D,UAAY,SAAU70D,GAAQ,OAAOxF,KAAK0gE,uBAAuBrG,UAAU70D,IAC/Fi/D,EAAU5jE,UAAUy5D,YAAc,SAAU90D,GAAQ,OAAOxF,KAAK0gE,uBAAuBpG,YAAY90D,IACnGi/D,EAAU5jE,UAAU05D,kBAAoB,SAAUr0D,EAAMs0D,EAAWC,EAASC,GACxE,OAAO16D,KAAK0gE,uBAAuBnG,kBAAkBr0D,EAAMs0D,EAAWC,EAASC,IAEnF+J,EAAU5jE,UAAU85D,YAAc,SAAUiK,EAAY1+D,GACpD,OAAOlG,KAAK0gE,uBAAuB/F,YAAYiK,EAAY1+D,IAExDu+D,EA7BmB,GA2Cd,CAAc,IAAItM,IAa9B0M,GAAsC,WACtC,SAASA,EAAqBjjE,EAAK25D,EAAUuJ,GACzC9kE,KAAK4B,IAAMA,EACX5B,KAAKu7D,SAAWA,EAChBv7D,KAAK8kE,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAUnjE,GACrC,OAAO,IAAIijE,EAAqBjjE,GAAK,EAAO,OAEzCijE,EAT8B,GAWrCG,MACAC,GACA,SAASA,GAA4BrjE,EAAKsjE,EAAmBj/C,GACzDjmB,KAAK4B,IAAMA,EACX5B,KAAKklE,kBAAoBA,EACzBllE,KAAKimB,cAAgBA,EACrBjmB,KAAKmlE,gBAAkBnlE,KAAKklE,kBAAkB,IAQlDE,GACA,SAASA,GAIT9lE,EAIA+lE,GACIrlE,KAAKV,QAAUA,EACfU,KAAKqlE,aAAeA,GAmC5B,SAASC,GAA0BhgD,GAC/B,OAAO,IAAI2/C,GAA4BjB,GAAclyD,IAAIwT,EAASZ,UA7BtE,SAAS6gD,EAAyBjgD,GAC9B,IAAI+wB,EACAmvB,EACJ,GAAIlgD,EAASS,SAAU,CACnB,IAAIA,EAAWpC,GAAkB2B,EAASS,UAC1CswB,EAAYmuB,GAAUllE,QAAQymB,GAC9By/C,EAAeC,GAAiB1/C,QAE3BT,EAASO,aACdwwB,EAAY,SAAUqvB,GAAiB,OAAOA,GAC9CF,GAAgBX,GAAqBE,QAAQf,GAAclyD,IAAIwT,EAASO,gBAEnEP,EAASQ,YACduwB,EAAY/wB,EAASQ,WACrB0/C,EA6ER,SAASG,EAAsBrM,EAAY+L,GACvC,GAAKA,EAGA,CACD,IAAIO,EAAWP,EAAah6D,IAAI,SAAUpK,GAAK,OAAQA,KACvD,OAAOokE,EAAah6D,IAAI,SAAUpK,GAAK,OAAO4kE,GAAcvM,EAAYr4D,EAAG2kE,KAJ3E,OAAOH,GAAiBnM,GA/ETqM,CAAsBrgD,EAASQ,WAAYR,EAASH,QAGnEkxB,EAAY,WAAc,OAAO/wB,EAASV,UAC1C4gD,EAAeR,IAEnB,OAAO,IAAII,GAA0B/uB,EAAWmvB,GAS6BD,CAAyBjgD,IAAYA,EAASU,QAAS,GAKxI,SAAS8/C,GAA2BzgE,GAChC,IAEI0gE,EAOR,SAASC,EAAiC3gE,EAAW4gE,GACjD,IAAK,IAAI9kE,EAAI,EAAGA,EAAIkE,EAAU/D,OAAQH,IAAK,CACvC,IAAImkB,EAAWjgB,EAAUlE,GACrB+zC,EAAW+wB,EAAuBn0D,IAAIwT,EAAS1jB,IAAI4M,IACvD,GAAI0mC,EAAU,CACV,GAAI5vB,EAASW,gBAAkBivB,EAASjvB,cACpC,MA/OLriB,MAAM,0DA+OmDsxC,EA/OqB,IA+OX5vB,GAElE,GAAIA,EAASW,cACT,IAAK,IAAI5T,EAAI,EAAGA,EAAIiT,EAAS4/C,kBAAkB5jE,OAAQ+Q,IACnD6iC,EAASgwB,kBAAkB5hE,KAAKgiB,EAAS4/C,kBAAkB7yD,SAI/D4zD,EAAuB/gD,IAAII,EAAS1jB,IAAI4M,GAAI8W,OAG/C,CACD,IAAIE,EAEAA,EADAF,EAASW,cACU,IAAIg/C,GAA4B3/C,EAAS1jB,IAAK0jB,EAAS4/C,kBAAkBjqD,QAASqK,EAASW,eAG3FX,EAEvB2gD,EAAuB/gD,IAAII,EAAS1jB,IAAI4M,GAAIgX,IAGpD,OAAOygD,EAnCmBD,CAqC9B,SAASE,EAAoB7gE,EAAWmG,GAepC,OAdAnG,EAAU6J,QAAQ,SAAU/O,GACxB,GAAIA,aAAa03D,GACbrsD,EAAIlI,MAAOohB,QAASvkB,EAAG4lB,SAAU5lB,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B+E,IAAd/E,EAAEukB,QACpClZ,EAAIlI,KAAKnD,OAER,CAAA,KAAIA,aAAaI,OAIlB,MArWZ,SAAS4lE,EAAqB7gD,GAC1B,OAAO1hB,MAAM,4EAA8E0hB,GAoW7E6gD,CAAqBhmE,GAH3B+lE,EAAoB/lE,EAAGqL,MAMxBA,EAtDU06D,CAAoB7gE,MACXgG,IAAIi6D,IACuC,IAAI56D,KACzE,OAAOnK,MAAMm8D,KAAKqJ,EAAoB5+D,UA8D1C,SAASs+D,GAAiBnM,GACtB,IAAIsK,EAASY,GAAU78D,WAAW2xD,GAClC,IAAKsK,EACD,SACJ,GAAIA,EAAOhU,KAAK,SAAUpvD,GAAK,OAAY,MAALA,IAClC,MAAMmjE,GAAkBrK,EAAYsK,GAExC,OAAOA,EAAOv4D,IAAI,SAAU7K,GAAK,OAAOqlE,GAAcvM,EAAY94D,EAAGojE,KAEzE,SAASiC,GAAcvM,EAAY52D,EAAUkhE,GACzC,IAAIx4D,EAAQ,KACRmwD,GAAW,EACf,IAAKh7D,MAAM2P,QAAQxN,GACf,OACW0jE,GADP1jE,aAAoBqO,GACKrO,EAAS0I,MAGT1I,EAHgB64D,EAAU,MAO3D,IADA,IAAIuJ,EAAa,KACR3jE,EAAI,EAAGA,EAAIuB,EAASpB,SAAUH,EAAG,CACtC,IAAIklE,EAAgB3jE,EAASvB,GACzBklE,aAAyBxO,GACzBzsD,EAAQi7D,EAEHA,aAAyBt1D,GAC9B3F,EAAQi7D,EAAcj7D,MAEjBi7D,aAAyBr1D,GAC9BuqD,GAAW,EAEN8K,aAAyBp1D,IAAQo1D,aAAyBn1D,GAC/D4zD,EAAauB,EAERA,aAAyB3gE,IAC9B0F,EAAQi7D,GAIhB,GAAa,OADbj7D,EAAQuY,GAAkBvY,IAEtB,OAAOg7D,GAAkBh7D,EAAOmwD,EAAUuJ,GAG1C,MAAMnB,GAAkBrK,EAAYsK,GAG5C,SAASwC,GAAkBh7D,EAAOmwD,EAAUuJ,GACxC,OAAO,IAAID,GAAqBb,GAAclyD,IAAI1G,GAAQmwD,EAAUuJ;;;;;;;OAWxE,IAAIwB,GAAY,IAAIlmE,OAsChBmmE,GAAoC,WACpC,SAASA,KA2FT,OAxDAA,EAAmBn8D,QAAU,SAAU/E,GACnC,OAAOygE,GAA2BzgE,IAyBtCkhE,EAAmBC,iBAAmB,SAAUnhE,EAAWqV,GACvD,IAAI+rD,EAA8BF,EAAmBn8D,QAAQ/E,GAC7D,OAAOkhE,EAAmBG,sBAAsBD,EAA6B/rD,IAyBjF6rD,EAAmBG,sBAAwB,SAAUrhE,EAAWqV,GAC5D,OAAO,IAAIisD,GAAoBthE,EAAWqV,IAEvC6rD,EA5F4B,GA8FnCI,GAAqC,WAIrC,SAASA,EAAoBC,EAAY/uB,GAErC73C,KAAK6mE,qBAAuB,EAC5B7mE,KAAK4mE,WAAaA,EAClB5mE,KAAK0a,OAASm9B,GAAW,KACzB,IAAIivB,EAAMF,EAAWtlE,OACrBtB,KAAK+mE,OAAS,IAAIxmE,MAAMumE,GACxB9mE,KAAKgnE,KAAO,IAAIzmE,MAAMumE,GACtB,IAAK,IAAI3lE,EAAI,EAAGA,EAAI2lE,EAAK3lE,IACrBnB,KAAK+mE,OAAO5lE,GAAKylE,EAAWzlE,GAAGS,IAAI4M,GACnCxO,KAAKgnE,KAAK7lE,GAAKmlE,GAgJvB,OA7IAK,EAAoB9lE,UAAUiR,IAAM,SAAU1G,EAAO4G,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgB8R,IACzC9jB,KAAKinE,UAAUjD,GAAclyD,IAAI1G,GAAQ,KAAM4G,IAE1D20D,EAAoB9lE,UAAUqmE,sBAAwB,SAAU7hE,GAC5D,IAAIohE,EAA8BF,GAAmBn8D,QAAQ/E,GAC7D,OAAOrF,KAAKmnE,wBAAwBV,IAExCE,EAAoB9lE,UAAUsmE,wBAA0B,SAAU9hE,GAC9D,IAAI+hE,EAAM,IAAIT,EAAoBthE,GAElC,OADA+hE,EAAI1sD,OAAS1a,KACNonE,GAEXT,EAAoB9lE,UAAUwmE,sBAAwB,SAAU/hD,GAC5D,OAAOtlB,KAAKsnE,oBAAoBf,GAAmBn8D,SAASkb,IAAW,KAE3EqhD,EAAoB9lE,UAAUymE,oBAAsB,SAAUhiD,GAC1D,OAAOtlB,KAAKunE,qBAAqBjiD,IAErCqhD,EAAoB9lE,UAAU2mE,mBAAqB,SAAU9/D,GACzD,GAAIA,EAAQ,GAAKA,GAAS1H,KAAK4mE,WAAWtlE,OACtC,MAxhBZ,SAASmmE,EAAiB//D,GACtB,OAAO9D,MAAM,SAAW8D,EAAQ,sBAuhBlB+/D,CAAiB//D,GAE3B,OAAO1H,KAAK4mE,WAAWl/D,IAG3Bi/D,EAAoB9lE,UAAU6mE,KAAO,SAAUpiD,GAC3C,GAAItlB,KAAK6mE,uBAAyB7mE,KAAK2nE,yBACnC,MAhpBZ,SAASC,EAAsBt2D,EAAU1P,GACrC,OAAOyhE,GAAe/xD,EAAU1P,EAAK,SAAU4I,GAC3C,MAAO,wCAA0C04D,GAAuB14D,KA8oB9Do9D,CAAsB5nE,KAAMslB,EAAS1jB,KAE/C,OAAO5B,KAAKunE,qBAAqBjiD,IAErCqhD,EAAoB9lE,UAAU8mE,uBAAyB,WAAc,OAAO3nE,KAAKgnE,KAAK1lE,QACtFqlE,EAAoB9lE,UAAU0mE,qBAAuB,SAAUjiD,GAC3D,GAAIA,EAASW,cAAe,CAExB,IADA,IAAIza,EAAM,IAAIjL,MAAM+kB,EAAS4/C,kBAAkB5jE,QACtCH,EAAI,EAAGA,EAAImkB,EAAS4/C,kBAAkB5jE,SAAUH,EACrDqK,EAAIrK,GAAKnB,KAAK6nE,aAAaviD,EAAUA,EAAS4/C,kBAAkB/jE,IAEpE,OAAOqK,EAGP,OAAOxL,KAAK6nE,aAAaviD,EAAUA,EAAS4/C,kBAAkB,KAGtEyB,EAAoB9lE,UAAUgnE,aAAe,SAAUviD,EAAUwiD,GAC7D,IAEI3iD,EAWAvV,EAbAs9B,EAAQltC,KACRV,EAAUwoE,EAA6BxoE,QAE3C,IACI6lB,EACI2iD,EAA6BzC,aAAah6D,IAAI,SAAU+vD,GAAO,OAAOluB,EAAM66B,2BAA2B3M,KAE/G,MAAOh4D,GAIH,MAHIA,EAAEqgE,QACFrgE,EAAEqgE,OAAOzjE,KAAMslB,EAAS1jB,KAEtBwB,EAGV,IACIwM,EAAMtQ,EAAQkC,WAAM,EAAQgC,EAAS2hB,IAEzC,MAAO/hB,GACH,MAppBZ,SAAS4kE,EAAmB12D,EAAU22D,EAAmBC,EAAetmE,GACpE,OAAOyhE,GAAe/xD,EAAU1P,EAAK,SAAU4I,GAC3C,IAAI7B,EAAQwC,GAAUX,EAAK,GAAGY,OAC9B,OAAO68D,EAAkBvhD,QAAU,mCAAqC/d,EAAQ,IAAMu6D,GAAuB14D,GAAQ,KACtHy9D,GAgpBWD,CAAmBhoE,KAAMoD,EAAGA,EAASkiB,EAAS1jB,KAExD,OAAOgO,GAEX+2D,EAAoB9lE,UAAUknE,2BAA6B,SAAU3M,GACjE,OAAOp7D,KAAKinE,UAAU7L,EAAIx5D,IAAKw5D,EAAI0J,WAAY1J,EAAIG,SAAW,KAAOz3C,KAEzE6iD,EAAoB9lE,UAAUomE,UAAY,SAAUrlE,EAAKkjE,EAAY9yD,GACjE,OAAIpQ,IAAQ+kE,EAAoBwB,aACrBnoE,KAEP8kE,aAAsB7zD,GACfjR,KAAKooE,cAAcxmE,EAAKoQ,GAGxBhS,KAAKqoE,iBAAiBzmE,EAAKoQ,EAAe8yD,IAGzD6B,EAAoB9lE,UAAUynE,eAAiB,SAAUC,GACrD,IAAK,IAAIpnE,EAAI,EAAGA,EAAInB,KAAK+mE,OAAOzlE,OAAQH,IACpC,GAAInB,KAAK+mE,OAAO5lE,KAAOonE,EAInB,OAHIvoE,KAAKgnE,KAAK7lE,KAAOmlE,KACjBtmE,KAAKgnE,KAAK7lE,GAAKnB,KAAK0nE,KAAK1nE,KAAK4mE,WAAWzlE,KAEtCnB,KAAKgnE,KAAK7lE,GAGzB,OAAOmlE,IAGXK,EAAoB9lE,UAAU2nE,aAAe,SAAU5mE,EAAKoQ,GACxD,GAAIA,IAAkB8R,GAClB,OAAO9R,EAGP,MA9uBZ,SAASy2D,EAAgBn3D,EAAU1P,GAC/B,OAAOyhE,GAAe/xD,EAAU1P,EAAK,SAAU4I,GAE3C,MAAO,mBADKW,GAAUX,EAAK,GAAGY,OACM,IAAM83D,GAAuB14D,KA2uBvDi+D,CAAgBzoE,KAAM4B,IAIpC+kE,EAAoB9lE,UAAUunE,cAAgB,SAAUxmE,EAAKoQ,GACzD,IAAIpC,EAAM5P,KAAKsoE,eAAe1mE,EAAI4M,IAClC,OAAQoB,IAAQ02D,GAAa12D,EAAM5P,KAAKwoE,aAAa5mE,EAAKoQ,IAG9D20D,EAAoB9lE,UAAUwnE,iBAAmB,SAAUzmE,EAAKoQ,EAAe8yD,GAC3E,IAAIsC,EAOJ,IALIA,EADAtC,aAAsB5zD,GAChBlR,KAAK0a,OAGL1a,KAEHonE,aAAeT,GAAqB,CACvC,IAAI+B,EAAOtB,EACPx3D,EAAM84D,EAAKJ,eAAe1mE,EAAI4M,IAClC,GAAIoB,IAAQ02D,GACR,OAAO12D,EACXw3D,EAAMsB,EAAKhuD,OAEf,OAAY,OAAR0sD,EACOA,EAAIt1D,IAAIlQ,EAAIwJ,MAAO4G,GAGnBhS,KAAKwoE,aAAa5mE,EAAKoQ,IAGtC5R,OAAO+B,eAAewkE,EAAoB9lE,UAAW,eACjDiR,IAAK,WAGD,MAAO,kCASnB,SAAS62D,EAAcr3D,EAAU1G,GAE7B,IADA,IAAIY,EAAM,IAAIjL,MAAM+Q,EAASs1D,WAAWtlE,QAC/BH,EAAI,EAAGA,EAAImQ,EAASs1D,WAAWtlE,SAAUH,EAC9CqK,EAAIrK,GAAKyJ,EAAG0G,EAASk2D,mBAAmBrmE,IAE5C,OAAOqK;;;;;;;;;;;;;;OAhBiBm9D,CAAc3oE,KAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEyB,IAAIqiE,YAAc,OAChF34D,KAAK,MAC6C,MAE3D8gC,YAAY,EACZC,cAAc,IAElBs6B,EAAoB9lE,UAAUgF,SAAW,WAAc,OAAO7F,KAAKikE,aACnE0C,EAAoBwB,aAAenE,GAAclyD,IAAImS,IAC9C0iD,EA9J6B,GA0LxC,SAASiC,GAAUh5D,GAGf,QAASA,GAA2B,mBAAbA,EAAI9E,KAK/B,SAAS+9D,GAAaj5D,GAGlB,QAASA,GAAgC,mBAAlBA,EAAIktB;;;;;;;OAe/B,IAAIgsC,GAAkB,IAAIpjE,EAAe,2BAMrCqjE,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAI97B,EAAQltC,KACZA,KAAKgpE,SAAWA,EAChBhpE,KAAKipE,aAAc,EACnBjpE,KAAKkD,MAAO,EACZlD,KAAKkpE,YAAc,IAAI/+D,QAAQ,SAAUqB,EAAK29D,GAC1Cj8B,EAAM9iC,QAAUoB,EAChB0hC,EAAMk8B,OAASD,IAiCvB,OA7BAJ,EAAsBloE,UAAUwoE,gBAAkB,WAC9C,IAAIn8B,EAAQltC,KACZ,IAAIA,KAAKipE,YAAT,CAGA,IAAIK,KACA5c,EAAW,WACXxf,EAAMhqC,MAAO,EACbgqC,EAAM9iC,WAEV,GAAIpK,KAAKgpE,SACL,IAAK,IAAI7nE,EAAI,EAAGA,EAAInB,KAAKgpE,SAAS1nE,OAAQH,IAAK,CAC3C,IAAIooE,EAAavpE,KAAKgpE,SAAS7nE,KAC3BynE,GAAUW,IACVD,EAAkBhmE,KAAKimE,GAInCp/D,QAAQq/D,IAAIF,GAAmBx+D,KAAK,WAAc4hD,MAAe+c,MAAM,SAAUrmE,GAAK8pC,EAAMk8B,OAAOhmE,KAClE,IAA7BkmE,EAAkBhoE,QAClBorD,IAEJ1sD,KAAKipE,aAAc,IAECxnE,GACpBugE,KACA5/D,EAAQ,EAAG2O,GAAO+3D,KAAmB1mE,EAAQ,EAAG4O,MAChDzO,EAAW,qBAAsBhC,SAClCwoE,GAxCmC,GA6DtCW,GAAS,IAAIhkE,EAAe,SAChC,SAASikE,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,KAMhD,IAAIC,IACAnlD,QAASglD,GACT5jD,WAAY6jD,GACZxkD,SAEJ,SAASykD,KACL,OAAOjlD,OAAOmlD,aAAa,GAAKlmB,KAAKkE,MAAsB,GAAhBlE,KAAKmmB,WAMpD,IAAIC,GAAuB,IAAItkE,EAAe,wBAK1CukE,GAAc,IAAIvkE,EAAe,eASjCwkE,GAAyB,IAAIxkE,EAAe,wBAK5CykE,GAAmB,IAAIzkE,EAAe,iCAStC0kE,GAAyB,WACzB,SAASA,KAcT,OAZAA,EAAQvpE,UAAUwpE,IAAM,SAAU3jD,GAE9Bw2B,QAAQmtB,IAAI3jD,IAGhB0jD,EAAQvpE,UAAUs8C,KAAO,SAAUz2B,GAE/Bw2B,QAAQC,KAAKz2B,IAEPjlB,GACNugE,MACDoI,GAdqB,GA8BxBE,GACA,SAASA,GAA6BC,EAAiBC,GACnDxqE,KAAKuqE,gBAAkBA,EACvBvqE,KAAKwqE,mBAAqBA,GAIlC,SAASC,KACL,MAAM,IAAI7mE,MAAM,kCAapB,IAiEI8mE,GACAC,GAlEAC,GAA0B,WAC1B,SAASA,KAsCT,OAhCAA,EAAS/pE,UAAUgqE,kBAAoB,SAAUvgB,GAAc,MAAMmgB,MAIrEG,EAAS/pE,UAAUiqE,mBAAqB,SAAUxgB,GAAc,MAAMmgB,MAItEG,EAAS/pE,UAAUkqE,kCAAoC,SAAUzgB,GAC7D,MAAMmgB,MAKVG,EAAS/pE,UAAUmqE,mCAAqC,SAAU1gB,GAC9D,MAAMmgB,MAKVG,EAAS/pE,UAAUoqE,WAAa,aAIhCL,EAAS/pE,UAAUqqE,cAAgB,SAAU1lE,KAI7ColE,EAAS/pE,UAAUsqE,YAAc,SAAU7gB,KAChC7oD,GACPugE,MACD4I,GAtCsB,GA8CzBQ,GAAmB,IAAI1lE,EAAe,mBAMtC2lE,GACA,SAASA,OAcb,SAASC,KACL,IAAIC,EAAMthE,EAA+B,IACzC,SAAIshE,KACAb,GAAQa,EAAW,SAEfZ,GAASD,GAAc,OAChB,IAKnB,SAASc,GAAY3H,EAAWjyD,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzB+4D,GAAOa,YAAY3H,EAAWjyD,GAEzC,SAAS65D,GAAMC,EAAOlvC,GAElB,OADAkuC,GAAMiB,WAAWD,EAAOlvC,GACjBA,EAEX,SAASovC,GAAeC,EAAWnjD,GAC/B,OAAOgiD,GAAMoB,eAAeD,EAAWnjD,GAE3C,SAASqjD,GAAaC,GAClBtB,GAAMqB,aAAaC;;;;;;;OAavB,IAAIC,GAAaX,KACjB,SAASY,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBJ,GAAaT,GAAc,SAAU3H,EAAWjyD,GAAS,OAAOs6D,IAUjFI,GAAWL,GAAaR,GAAQ,SAAUvqE,EAAGa,GAAK,OAAOA,GAczDwqE,GAAoBN,GAAaL,GAAiB,SAAUC,EAAWnjD,GAAU,OAAO,MAOxF8jD,GAAkBP,GAAaF,GAAe,SAAUhqE,GAAK,OAAO,MAmFpE0qE,GAAwB,WACxB,SAASA,EAAO/lE,GACZ,IAAI+2C,EAAK/2C,EAAGgmE,qBAAsBA,OAA8B,IAAPjvB,GAAwBA,EA2BjF,GA1BAz9C,KAAK2sE,sBAAuB,EAC5B3sE,KAAK4sE,sBAAuB,EAI5B5sE,KAAK6sE,UAAW,EAIhB7sE,KAAK8sE,WAAa,IAAIzgB,IAAa,GAMnCrsD,KAAK+sE,iBAAmB,IAAI1gB,IAAa,GAMzCrsD,KAAKgtE,SAAW,IAAI3gB,IAAa,GAIjCrsD,KAAKitE,QAAU,IAAI5gB,IAAa,GACb,oBAARxhD,KACP,MAAM,IAAIjH,MAAM,kDAEpBiH,KAAKqiE,oBACMltE,KACNmtE,SAAW,EADLntE,KAENotE,OAFMptE,KAEQqtE,OAASxiE,KAAKE,QAC7BF,KAAkB,cAHX7K,KAIFqtE,OAJErtE,KAIYqtE,OAAOC,KAAKziE,KAAkB,cAEjDA,KAA2B,uBANpB7K,KAOFqtE,OAPErtE,KAOYqtE,OAAOC,KAAK,IAAIziE,KAA2B,uBAE9D6hE,GAAwB7hE,KAA6B,yBAT9C7K,KAUFqtE,OAVErtE,KAUYqtE,OAAOC,KAAKziE,KAA6B,yBAkGxE,SAAS0iE,EAAiCC,GACtCA,EAAKH,OAASG,EAAKH,OAAOC,MACtBpnE,KAAM,UACNunE,YAAcC,eAAiB,GAC/BC,aAAc,SAAUC,EAAU7iE,EAASpJ,EAAQksE,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQR,GACDI,EAASK,WAAWtsE,EAAQksE,EAAMC,EAAWC,GAExD,QACIG,GAAQV,KAGhBW,SAAU,SAAUP,EAAU7iE,EAASpJ,EAAQ4qC,EAAUuhC,EAAWC,EAAWjqE,GAC3E,IAEI,OADAkqE,GAAQR,GACDI,EAASQ,OAAOzsE,EAAQ4qC,EAAUuhC,EAAWC,EAAWjqE,GAEnE,QACIoqE,GAAQV,KAGhBa,UAAW,SAAUT,EAAU7iE,EAASpJ,EAAQ2sE,GAC5CV,EAASW,QAAQ5sE,EAAQ2sE,GACrBvjE,IAAYpJ,IAGe,aAAvB2sE,EAAaE,QACbhB,EAAKb,qBAAuB2B,EAAaG,UACzCC,GAAYlB,IAEgB,aAAvBc,EAAaE,SAClBhB,EAAKZ,qBAAuB0B,EAAaK,aAIrDC,cAAe,SAAUhB,EAAU7iE,EAASpJ,EAAQ4B,GAGhD,OAFAqqE,EAAShL,YAAYjhE,EAAQ4B,GAC7BiqE,EAAKqB,kBAAkB,WAAc,OAAOrB,EAAKP,QAAQzgB,KAAKjpD,MACvD,KAvIXgqE,CAZWvtE,MAqFf,OAvEAysE,EAAOqC,gBAAkB,WAAc,OAA6C,IAAtCjkE,KAAKE,QAAQ+G,IAAI,kBAC/D26D,EAAOsC,oBAAsB,WACzB,IAAKtC,EAAOqC,kBACR,MAAM,IAAIlrE,MAAM,mDAGxB6oE,EAAOuC,uBAAyB,WAC5B,GAAIvC,EAAOqC,kBACP,MAAM,IAAIlrE,MAAM,mDAexB6oE,EAAO5rE,UAAUouE,IAAM,SAAUrkE,EAAIkjE,EAAWC,GAC5C,OAAO/tE,KAAKqtE,OAAO4B,IAAIrkE,EAAIkjE,EAAWC,IAc1CtB,EAAO5rE,UAAUquE,QAAU,SAAUtkE,EAAIkjE,EAAWC,EAAW7nE,GAC3D,IAAIsnE,EAAOxtE,KAAKqtE,OACZQ,EAAOL,EAAK2B,kBAAkB,gBAAkBjpE,EAAM0E,EAAIwkE,GAAeC,GAAQA,IACrF,IACI,OAAO7B,EAAK0B,QAAQrB,EAAMC,EAAWC,GAEzC,QACIP,EAAK8B,WAAWzB,KAOxBpB,EAAO5rE,UAAU0uE,WAAa,SAAU3kE,EAAIkjE,EAAWC,GACnD,OAAO/tE,KAAKqtE,OAAOkC,WAAW3kE,EAAIkjE,EAAWC,IAejDtB,EAAO5rE,UAAUguE,kBAAoB,SAAUjkE,GAC3C,OAAO5K,KAAKotE,OAAO6B,IAAIrkE,IAEpB6hE,EAtHgB,GAwH3B,SAAS4C,MACT,IAAID,MACJ,SAASV,GAAYlB,GACjB,GAAqB,GAAjBA,EAAKL,WAAkBK,EAAKb,uBAAyBa,EAAKX,SAC1D,IACIW,EAAKL,WACLK,EAAKT,iBAAiBvgB,KAAK,MAE/B,QAEI,GADAghB,EAAKL,YACAK,EAAKb,qBACN,IACIa,EAAKqB,kBAAkB,WAAc,OAAOrB,EAAKR,SAASxgB,KAAK,QAEnE,QACIghB,EAAKX,UAAW,IAiDpC,SAASmB,GAAQR,GACbA,EAAKL,WACDK,EAAKX,WACLW,EAAKX,UAAW,EAChBW,EAAKV,WAAWtgB,KAAK,OAG7B,SAAS0hB,GAAQV,GACbA,EAAKL,WACLuB,GAAYlB,GAMhB,IA6QIgC,GA7QAC,GAA4B,WAC5B,SAASA,IACLzvE,KAAK2sE,sBAAuB,EAC5B3sE,KAAK4sE,sBAAuB,EAC5B5sE,KAAK6sE,UAAW,EAChB7sE,KAAK8sE,WAAa,IAAIzgB,GACtBrsD,KAAK+sE,iBAAmB,IAAI1gB,GAC5BrsD,KAAKgtE,SAAW,IAAI3gB,GACpBrsD,KAAKitE,QAAU,IAAI5gB,GAMvB,OAJAojB,EAAW5uE,UAAUouE,IAAM,SAAUrkE,GAAM,OAAOA,KAClD6kE,EAAW5uE,UAAU0uE,WAAa,SAAU3kE,GAAM,OAAOA,KACzD6kE,EAAW5uE,UAAUguE,kBAAoB,SAAUjkE,GAAM,OAAOA,KAChE6kE,EAAW5uE,UAAUquE,QAAU,SAAUtkE,GAAM,OAAOA,KAC/C6kE,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAIziC,EAAQltC,KACZA,KAAK2vE,QAAUA,EACf3vE,KAAK4vE,cAAgB,EACrB5vE,KAAK6vE,eAAgB,EAOrB7vE,KAAK8vE,UAAW,EAChB9vE,KAAK+vE,cACL/vE,KAAKgwE,sBACLL,EAAQV,IAAI,WAAc/hC,EAAM+iC,iBAAmBplE,KAAKE,QAAQ+G,IAAI,sBA6IxE,OA3IA49D,EAAY7uE,UAAUmvE,oBAAsB,WACxC,IAAI9iC,EAAQltC,KACZA,KAAK2vE,QAAQ7C,WAAWhwC,WACpB95B,KAAM,WACFkqC,EAAM4iC,UAAW,EACjB5iC,EAAM2iC,eAAgB,KAG9B7vE,KAAK2vE,QAAQd,kBAAkB,WAC3B3hC,EAAMyiC,QAAQ3C,SAASlwC,WACnB95B,KAAM,WACFypE,GAAOuC,yBACPrkE,EAAkB,WACduiC,EAAM2iC,eAAgB,EACtB3iC,EAAMgjC,+BAU1BR,EAAY7uE,UAAUsvE,4BAA8B,WAGhD,OAFAnwE,KAAK4vE,eAAiB,EACtB5vE,KAAK8vE,UAAW,EACT9vE,KAAK4vE,eAMhBF,EAAY7uE,UAAUuvE,4BAA8B,WAEhD,GADApwE,KAAK4vE,eAAiB,EAClB5vE,KAAK4vE,cAAgB,EACrB,MAAM,IAAIhsE,MAAM,qCAGpB,OADA5D,KAAKkwE,uBACElwE,KAAK4vE,eAKhBF,EAAY7uE,UAAUgsE,SAAW,WAC7B,OAAO7sE,KAAK6vE,eAAwC,IAAvB7vE,KAAK4vE,gBAAwB5vE,KAAK2vE,QAAQ/C,sBAE3E8C,EAAY7uE,UAAUqvE,qBAAuB,WACzC,IAAIhjC,EAAQltC,KACZ,GAAIA,KAAK6sE,WAELliE,EAAkB,WACd,KAAmC,IAA5BuiC,EAAM6iC,WAAWzuE,QAAc,CAClC,IAAI+uE,EAAKnjC,EAAM6iC,WAAWluB,MAC1ByuB,aAAaD,EAAGE,WAChBF,EAAGG,OAAOtjC,EAAM4iC,UAEpB5iC,EAAM4iC,UAAW,QAGpB,CAED,IAAIW,EAAYzwE,KAAK0wE,kBACrB1wE,KAAK+vE,WAAa/vE,KAAK+vE,WAAWvgB,OAAO,SAAU6gB,GAC/C,OAAIA,EAAGM,WAAYN,EAAGM,SAASF,KAC3BH,aAAaD,EAAGE,YACT,KAIfvwE,KAAK8vE,UAAW,IAGxBJ,EAAY7uE,UAAU6vE,gBAAkB,WACpC,OAAK1wE,KAAKiwE,iBAIHjwE,KAAKiwE,iBAAiBW,WAAWvlE,IAAI,SAAUpK,GAClD,OACI6C,OAAQ7C,EAAE6C,OAGV+sE,iBAAkB5vE,EAAE4vE,iBACpBnoE,KAAMzH,EAAEyH,YAIpBgnE,EAAY7uE,UAAUiwE,YAAc,SAAUT,EAAIU,EAASJ,GACvD,IAAIzjC,EAAQltC,KACRuwE,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAY73D,WAAW,WACnBw0B,EAAM6iC,WAAa7iC,EAAM6iC,WAAWvgB,OAAO,SAAU6gB,GAAM,OAAOA,EAAGE,YAAcA,IACnFF,EAAGnjC,EAAM4iC,SAAU5iC,EAAMwjC,oBAC1BK,IAEP/wE,KAAK+vE,WAAWzsE,MAAOktE,OAAQH,EAAIE,UAAWA,EAAWI,SAAUA,KAcvEjB,EAAY7uE,UAAUmwE,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAa3wE,KAAKiwE,iBAClB,MAAM,IAAIrsE,MAAM,8HAIpB5D,KAAK8wE,YAAYN,EAAQO,EAASJ,GAClC3wE,KAAKkwE,wBAMTR,EAAY7uE,UAAUowE,uBAAyB,WAAc,OAAOjxE,KAAK4vE,eAOzEF,EAAY7uE,UAAUqwE,cAAgB,SAAUC,EAAO7rD,EAAU8rD,GAE7D,UAEU3vE,GACVugE,KACAz/D,EAAW,qBAAsBkqE,MAClCiD,GA3JyB,GAkK5B2B,GAAqC,WACrC,SAASA,IAELrxE,KAAKsxE,cAAgB,IAAI5mE,IACzB6mE,GAAmBC,YAAYxxE,MA8CnC,OAvCAqxE,EAAoBxwE,UAAU4wE,oBAAsB,SAAUrmE,EAAOsmE,GACjE1xE,KAAKsxE,cAAcpsD,IAAI9Z,EAAOsmE,IAMlCL,EAAoBxwE,UAAU8wE,sBAAwB,SAAUvmE,GAASpL,KAAKsxE,cAAcz8B,OAAOzpC,IAInGimE,EAAoBxwE,UAAU+wE,0BAA4B,WAAc5xE,KAAKsxE,cAAcn9B,SAK3Fk9B,EAAoBxwE,UAAUgxE,eAAiB,SAAUC,GAAQ,OAAO9xE,KAAKsxE,cAAcx/D,IAAIggE,IAAS,MAIxGT,EAAoBxwE,UAAUkxE,oBAAsB,WAAc,OAAOxxE,MAAMm8D,KAAK18D,KAAKsxE,cAAcnqE,WAIvGkqE,EAAoBxwE,UAAUmxE,mBAAqB,WAAc,OAAOzxE,MAAMm8D,KAAK18D,KAAKsxE,cAAc9mE,SAOtG6mE,EAAoBxwE,UAAUoxE,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsBjyE,KAAM8xE,EAAMI,IAE1CzwE,GAClBugE,KACAz/D,EAAW,yBACZ8uE,GAjDiC,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASY,KAMT,OAJAA,EAAoBtxE,UAAU2wE,YAAc,SAAUt3C,KACtDi4C,EAAoBtxE,UAAUoxE,sBAAwB,SAAU/3C,EAAU43C,EAAMI,GAC5E,OAAO,MAEJC,EAP6B,IAoCpCC,GAA2B,IAAI1sE,EAAe,sBAM9C2sE,GACA,SAASA,GAAansE,EAAMkF,GACxBpL,KAAKkG,KAAOA,EACZlG,KAAKoL,MAAQA;;;;;;;OAUrB,SAASknE,GAAehhE,GACpB,GAAIk+D,KAAcA,GAAU/7B,YACvB+7B,GAAUl+D,SAASQ,IAAIsgE,IAA0B,GAClD,MAAM,IAAIxuE,MAAM,iFAEpB4rE,GAAYl+D,EAASQ,IAAIygE,IACzB,IAAIC,EAAQlhE,EAASQ,IAAIk4D,GAAsB,MAG/C,OAFIwI,GACAA,EAAMtjE,QAAQ,SAAUygD,GAAQ,OAAOA,MACpC6f,GAOX,SAASiD,GAAsBC,EAAuBxsE,EAAMb,QACtC,IAAdA,IAAwBA,MAC5B,IAAIxD,EAAO,aAAeqE,EACtB06C,EAAS,IAAIl7C,EAAe7D,GAChC,OAAO,SAAU8wE,QACU,IAAnBA,IAA6BA,MACjC,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAASthE,SAASQ,IAAIsgE,IAA0B,GAC7D,GAAIM,EACAA,EAAsBrtE,EAAU5B,OAAOkvE,GAAgBlvE,QAASihB,QAASk8B,EAAQh8B,UAAU,SAE1F,CACD,IAAIkuD,EAAoBztE,EAAU5B,OAAOkvE,GAAgBlvE,QAASihB,QAASk8B,EAAQh8B,UAAU,IAC7F0tD,GAAeruD,GAASnjB,QAASuE,UAAWytE,EAAmB5sE,KAAMrE,KAG7E,OAAOkxE,GAAenyB,IAQ9B,SAASmyB,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAIhvE,MAAM,uBAEpB,IAAKgvE,EAASthE,SAASQ,IAAIkhE,EAAe,MACtC,MAAM,IAAIpvE,MAAM,wFAEpB,OAAOgvE,EAiBX,SAASC,KACL,OAAOrD,KAAcA,GAAU/7B,UAAY+7B,GAAY,KAY3D,IAAI+C,GAA6B,WAE7B,SAASA,EAAYU,GACjBjzE,KAAKizE,UAAYA,EACjBjzE,KAAKkzE,YACLlzE,KAAKmzE,qBACLnzE,KAAKozE,YAAa,EA4HtB,OApGAb,EAAY1xE,UAAUwyE,uBAAyB,SAAUC,EAAeluE,GACpE,IAAI8nC,EAAQltC,KAMRuzE,EA+FZ,SAASC,EAAUC,GASf,MAPqB,SAAjBA,EACS,IAAIhE,IAGc,YAAjBgE,OAA6BvuE,EAAYuuE,IAC/C,IAAIhH,IAASC,qBAAsB/xB,OAtG1B64B,CADMpuE,EAAUA,EAAQmuE,YAASruE,GAE1CG,IAAeqf,QAAS+nD,GAAQ7nD,SAAU2uD,IAG9C,OAAOA,EAAOtE,IAAI,WACd,IAAIyE,EAAiBzvD,GAASnjB,QAASuE,UAAWA,EAAWqV,OAAQwyB,EAAM57B,SAAUpL,KAAMotE,EAAchpB,WAAWpkD,OAChHytE,EAAYL,EAAcxyE,OAAO4yE,GACjCE,EAAmBD,EAAUriE,SAASQ,IAAI4wD,GAAc,MAC5D,IAAKkR,EACD,MAAM,IAAIhwE,MAAM,iEAIpB,OAFA+vE,EAAU/lE,UAAU,WAAc,OAAOmlB,GAAOma,EAAMgmC,SAAUS,KAChEJ,EAAO1E,kBAAkB,WAAc,OAAO0E,EAAOtG,QAAQnwC,WAAY95B,KAAM,SAAUO,GAASqwE,EAAiBhR,YAAYr/D,QA8F3I,SAASswE,EAA6BC,EAAcP,EAAQhnC,GACxD,IACI,IAAIuK,EAASvK,IACb,OAAIq8B,GAAU9xB,GACHA,EAAO2yB,MAAM,SAAUrmE,GAG1B,MAFAmwE,EAAO1E,kBAAkB,WAAc,OAAOiF,EAAalR,YAAYx/D,KAEjEA,IAGP0zC,EAEX,MAAO1zC,GAGH,MAFAmwE,EAAO1E,kBAAkB,WAAc,OAAOiF,EAAalR,YAAYx/D,KAEjEA,GA5GKywE,CAA6BD,EAAkBL,EAAQ,WAC1D,IAAIQ,EAAaJ,EAAUriE,SAASQ,IAAIi3D,IAExC,OADAgL,EAAW1K,kBACJ0K,EAAW7K,YAAYp+D,KAAK,WAE/B,OADAoiC,EAAM8mC,mBAAmBL,GAClBA,SAqBvBpB,EAAY1xE,UAAUozE,gBAAkB,SAAU3pB,EAAY4pB,GAC1D,IAAIhnC,EAAQltC,UACY,IAApBk0E,IAA8BA,MAClC,IAAI9uE,EAAU+uE,MAAmBD,GACjC,OA1LR,SAASE,EAAiC9iE,EAAUlM,EAASklD,GAGzD,OAFsBh5C,EAASQ,IAAIu5D,IACJgJ,gBAAgBjvE,IAC/B0lE,mBAAmBxgB,GAuLxBgqB,CAAuBt0E,KAAKsR,SAAUlM,EAASklD,GACjDx/C,KAAK,SAAUwoE,GAAiB,OAAOpmC,EAAMmmC,uBAAuBC,EAAeluE,MAE5FmtE,EAAY1xE,UAAUmzE,mBAAqB,SAAUL,GACjD,IAAI5mC,EAAS4mC,EAAUriE,SAASQ,IAAIyiE,IACpC,GAAIZ,EAAUzpB,qBAAqB5oD,OAAS,EACxCqyE,EAAUzpB,qBAAqBh7C,QAAQ,SAAUonC,GAAK,OAAOvJ,EAAOt9B,UAAU6mC,SAE7E,CAAA,IAAIq9B,EAAUz6D,SAASs7D,cAIxB,MAAM,IAAI5wE,MAAM,cAAgBuH,GAAUwoE,EAAUz6D,SAAStY,aAAe,yIAH5E+yE,EAAUz6D,SAASs7D,cAAcznC,GAMrC/sC,KAAKkzE,SAAS5vE,KAAKqwE,IAKvBpB,EAAY1xE,UAAU+M,UAAY,SAAU2+B,GAAYvsC,KAAKmzE,kBAAkB7vE,KAAKipC,IACpFnsC,OAAO+B,eAAeowE,EAAY1xE,UAAW,YAKzCiR,IAAK,WAAc,OAAO9R,KAAKizE,WAC/B7mC,YAAY,EACZC,cAAc,IAKlBkmC,EAAY1xE,UAAU2qB,QAAU,WAC5B,GAAIxrB,KAAKozE,WACL,MAAM,IAAIxvE,MAAM,4CAEpB5D,KAAKkzE,SAASj4D,QAAQ/L,QAAQ,SAAU1P,GAAU,OAAOA,EAAOgsB,YAChExrB,KAAKmzE,kBAAkBjkE,QAAQ,SAAU4sB,GAAY,OAAOA,MAC5D97B,KAAKozE,YAAa,GAEtBhzE,OAAO+B,eAAeowE,EAAY1xE,UAAW,aACzCiR,IAAK,WAAc,OAAO9R,KAAKozE,YAC/BhnC,YAAY,EACZC,cAAc,IAEJ5qC,GACVugE,KACAz/D,EAAW,qBAAsB0hB,MAClCsuD,GAjIyB,GAiKhC,SAAS4B,GAAeM,EAAKzN,GAOzB,OANIzmE,MAAM2P,QAAQ82D,GACRA,EAAKtX,OAAOykB,GAAgBM,GAG5B1zE,KAAa0zE,EAAKzN,GAShC,IAAIuN,GAAgC,WAEhC,SAASA,EAAeG,EAAO/R,EAAUsQ,EAAW0B,EAAmBC,EAA2BC,GAC9F,IAAI3nC,EAAQltC,KACZA,KAAK00E,MAAQA,EACb10E,KAAK2iE,SAAWA,EAChB3iE,KAAKizE,UAAYA,EACjBjzE,KAAK20E,kBAAoBA,EACzB30E,KAAK40E,0BAA4BA,EACjC50E,KAAK60E,YAAcA,EACnB70E,KAAK80E,uBACL90E,KAAK+0E,UACL/0E,KAAKg1E,cAAe,EACpBh1E,KAAKi1E,sBAAuB,EAC5Bj1E,KAAKk1E,SAAU,EAKfl1E,KAAKm1E,kBAILn1E,KAAK4a,cACL5a,KAAKi1E,qBAAuBt6B,KAC5B36C,KAAK00E,MAAM3H,iBAAiBjwC,WAAY95B,KAAM,WAAckqC,EAAMwnC,MAAMzF,IAAI,WAAc/hC,EAAMkoC,YAChG,IAAIC,EAAoB,IAAIv1E,EAAKw1E,WAAW,SAAUC,GAClDroC,EAAMgoC,QAAUhoC,EAAMwnC,MAAM7H,WAAa3/B,EAAMwnC,MAAM9H,uBAChD1/B,EAAMwnC,MAAM/H,qBACjBz/B,EAAMwnC,MAAM7F,kBAAkB,WAC1B0G,EAASvyE,KAAKkqC,EAAMgoC,SACpBK,EAAS7oB,eAGbmgB,EAAW,IAAI/sE,EAAKw1E,WAAW,SAAUC,GAGzC,IAAIC,EACJtoC,EAAMwnC,MAAM7F,kBAAkB,WAC1B2G,EAAYtoC,EAAMwnC,MAAM1H,SAASlwC,UAAU,WACvC2vC,GAAOuC,yBAGPrkE,EAAkB,WACTuiC,EAAMgoC,SAAYhoC,EAAMwnC,MAAM9H,sBAC9B1/B,EAAMwnC,MAAM/H,uBACbz/B,EAAMgoC,SAAU,EAChBK,EAASvyE,MAAK,UAK9B,IAAIyyE,EAAcvoC,EAAMwnC,MAAM5H,WAAWhwC,UAAU,WAC/C2vC,GAAOsC,sBACH7hC,EAAMgoC,UACNhoC,EAAMgoC,SAAU,EAChBhoC,EAAMwnC,MAAM7F,kBAAkB,WAAc0G,EAASvyE,MAAK,QAGlE,OAAO,WACHwyE,EAAUx4C,cACVy4C,EAAYz4C,iBAGpBh9B,KAAK6sE,SACD/sE,EAAK69C,MAAM03B,EAAmBxI,EAASnhB,KAAK3rD,EAAU21E,UA8H9D,IAAIC,EAUJ,OAtIAA,EAAmBpB,EAiBnBA,EAAe1zE,UAAU4O,UAAY,SAAUmmE,EAAoBx9B,GAC/D,IAIIy9B,EAJA3oC,EAAQltC,KACZ,IAAKA,KAAK60E,YAAY3xE,KAClB,MAAM,IAAIU,MAAM,iJAIhBiyE,EADAD,aAA8Bv+B,GACXu+B,EAIf51E,KAAK40E,0BAA0Bl9B,wBAAwBk+B,GAE/D51E,KAAKm1E,eAAe7xE,KAAKuyE,EAAiB79B,eAE1C,IAAIrD,EAAWkhC,aAA4B59B,GACvC,KACAj4C,KAAKizE,UAAUnhE,IAAIoV,IAEnB4uD,EAAUD,EAAiB/0E,OAAOmjB,GAASE,QAD1Bi0B,GAAsBy9B,EAAiBptE,SACaksC,GACzEmhC,EAAQloE,UAAU,WAAcs/B,EAAM6oC,iBAAiBD,KACvD,IAAIpE,EAAcoE,EAAQxkE,SAASQ,IAAI49D,GAAa,MASpD,OARIgC,GACAoE,EAAQxkE,SAASQ,IAAIu/D,IAChBI,oBAAoBqE,EAAQp+D,SAAS4gC,cAAeo5B,GAE7D1xE,KAAKg2E,eAAeF,GAChBn7B,MACA36C,KAAK2iE,SAAS0H,IAAI,oGAEfyL,GAYXvB,EAAe1zE,UAAUu0E,KAAO,WAC5B,IAAIloC,EAAQltC,KACZ,GAAIA,KAAKg1E,aACL,MAAM,IAAIpxE,MAAM,6CAEpB,IAAI8nE,EAAQiK,EAAiBM,aAC7B,IACIj2E,KAAKg1E,cAAe,EACpBh1E,KAAK+0E,OAAO7lE,QAAQ,SAAUoH,GAAQ,OAAOA,EAAKuxB,kBAC9C7nC,KAAKi1E,sBACLj1E,KAAK+0E,OAAO7lE,QAAQ,SAAUoH,GAAQ,OAAOA,EAAKo2B,mBAG1D,MAAOtpC,GAEHpD,KAAK00E,MAAM7F,kBAAkB,WAAc,OAAO3hC,EAAMynC,kBAAkB/R,YAAYx/D,KAE1F,QACIpD,KAAKg1E,cAAe,EACpB1I,GAASZ,KAQjB6I,EAAe1zE,UAAUq1E,WAAa,SAAU/nC,GAC5C,IAAI73B,EAAO63B,EACXnuC,KAAK+0E,OAAOzxE,KAAKgT,GACjBA,EAAKw2B,eAAe9sC,OAKxBu0E,EAAe1zE,UAAUspB,WAAa,SAAUgkB,GAC5C,IAAI73B,EAAO63B,EACXpb,GAAO/yB,KAAK+0E,OAAQz+D,GACpBA,EAAKu2B,oBAET0nC,EAAe1zE,UAAUm1E,eAAiB,SAAU57B,GAChDp6C,KAAKk2E,WAAW97B,EAAahkC,UAC7BpW,KAAKo1E,OACLp1E,KAAK4a,WAAWtX,KAAK82C,GAELp6C,KAAKizE,UAAUnhE,IAAIo4D,OAA4BzmE,OAAOzD,KAAK80E,qBACjE5lE,QAAQ,SAAU4sB,GAAY,OAAOA,EAASse,MAE5Dm6B,EAAe1zE,UAAUk1E,iBAAmB,SAAU37B,GAClDp6C,KAAKmqB,WAAWiwB,EAAahkC,UAC7B2c,GAAO/yB,KAAK4a,WAAYw/B,IAG5Bm6B,EAAe1zE,UAAUgN,YAAc,WAEnC7N,KAAK+0E,OAAO95D,QAAQ/L,QAAQ,SAAUoH,GAAQ,OAAOA,EAAKkV,aAE9DprB,OAAO+B,eAAeoyE,EAAe1zE,UAAW,aAI5CiR,IAAK,WAAc,OAAO9R,KAAK+0E,OAAOzzE,QACtC8qC,YAAY,EACZC,cAAc,IAIlBkoC,EAAe0B,WAAa5J,GAAe,yBAC1BsJ,EAAmBl0E,GAChCugE,KACAz/D,EAAW,qBAAsBkqE,GAAQrC,GAASnmD,GAC9Cy+C,GACA/qB,GACAoxB,MACLwL,GAxM4B,GA2MnC,SAASxhD,GAAOu7B,EAAMhS,GAClB,IAAI50C,EAAQ4mD,EAAK5iD,QAAQ4wC,GACrB50C,GAAS,GACT4mD,EAAKpkC,OAAOxiB,EAAO;;;;;;;;;;;;;;;;;;;;;OAgC3B,IAAIyuE,GACA,SAASA,OAITC,GAAkB,IAAI1rE,IA0DtB2rE,GAA6B,WAC7B,SAAShnB,IACLrvD,KAAK8iC,OAAQ,EACb9iC,KAAKs2E,YACLt2E,KAAKuvD,QAAU,IAAIlD,GACnBrsD,KAAKsB,OAAS,EA0DlB,OApDA+tD,EAAUxuD,UAAUwK,IAAM,SAAUT,GAAM,OAAO5K,KAAKs2E,SAASjrE,IAAIT,IAKnEykD,EAAUxuD,UAAU2uD,OAAS,SAAU5kD,GACnC,OAAO5K,KAAKs2E,SAAS9mB,OAAO5kD,IAMhCykD,EAAUxuD,UAAU4uD,KAAO,SAAU7kD,GACjC,OAAO5K,KAAKs2E,SAAS7mB,KAAK7kD,IAM9BykD,EAAUxuD,UAAU6uD,OAAS,SAAU9kD,EAAI+kD,GACvC,OAAO3vD,KAAKs2E,SAAS5mB,OAAO9kD,EAAI+kD,IAMpCN,EAAUxuD,UAAUqO,QAAU,SAAUtE,GAAM5K,KAAKs2E,SAASpnE,QAAQtE,IAKpEykD,EAAUxuD,UAAU+uD,KAAO,SAAUhlD,GACjC,OAAO5K,KAAKs2E,SAAS1mB,KAAKhlD,IAE9BykD,EAAUxuD,UAAUgvD,QAAU,WAAc,OAAO7vD,KAAKs2E,SAASr7D,SACjEo0C,EAAUxuD,UAAUyJ,KAAuB,WAAc,OAAOtK,KAAKs2E,SAAShsE,QAC9E+kD,EAAUxuD,UAAUgF,SAAW,WAAc,OAAO7F,KAAKs2E,SAASzwE,YAClEwpD,EAAUxuD,UAAUivD,MAAQ,SAAUtkD,GAClCxL,KAAKs2E,SAgBb,SAASC,EAAUjoB,GACf,OAAOA,EAAKoB,OAAO,SAAU8mB,EAAM5/B,GAC/B,IAAI6/B,EAAWl2E,MAAM2P,QAAQ0mC,GAAQ2/B,EAAU3/B,GAAQA,EACvD,OAAO4/B,EAAK/yE,OAAOgzE;;;;;;;OAnBHF,CAAU/qE,GAC1BxL,KAAK8iC,OAAQ,EACb9iC,KAAKsB,OAAStB,KAAKs2E,SAASh1E,OAC5BtB,KAAK02E,KAAO12E,KAAKs2E,SAASt2E,KAAKsB,OAAS,GACxCtB,KAAK2I,MAAQ3I,KAAKs2E,SAAS,IAE/BjnB,EAAUxuD,UAAUmvD,gBAAkB,WAAchwD,KAAKuvD,QAAQ/C,KAAKxsD,OAEtEqvD,EAAUxuD,UAAUmxB,SAAW,WAAchyB,KAAK8iC,OAAQ,GAE1DusB,EAAUxuD,UAAU2qB,QAAU,WAC1BxrB,KAAKuvD,QAAQ7C,WACb1sD,KAAKuvD,QAAQvyB,eAEVqyB,EA/DqB,GAuF5BsnB,GACA,SAASA,OAITC,IACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvCj3E,KAAKg3E,UAAYA,EACjBh3E,KAAKk3E,QAAUD,GAAUL,GAiC7B,OA/BAG,EAAuBl2E,UAAU0pC,KAAO,SAAU4sC,GAE9C,OADkBn3E,KAAKg3E,qBAAqBpM,GACvB5qE,KAAKo3E,YAAYD,GAAQn3E,KAAKq3E,eAAeF,IAEtEJ,EAAuBl2E,UAAUw2E,eAAiB,SAAUF,GACxD,IAAIjqC,EAAQltC,KACR0G,EAAKvD,EAAOg0E,EAAKv0C,MAhCZ,KAgC+B,GAAIpjC,EAASkH,EAAG,GAAI4wE,EAAa5wE,EAAG,GAI5E,YAHmBxB,IAAfoyE,IACAA,EAAa,WAEVC,OAAOC,OAAOh4E,GAChBsL,KAAK,SAAUtL,GAAU,OAAOA,EAAO83E,KACvCxsE,KAAK,SAAUtF,GAAQ,OAAOiyE,GAAcjyE,EAAMhG,EAAQ83E,KAC1DxsE,KAAK,SAAUtF,GAAQ,OAAO0nC,EAAM8pC,UAAUlM,mBAAmBtlE,MAE1EuxE,EAAuBl2E,UAAUu2E,YAAc,SAAUD,GACrD,IAAIzwE,EAAKvD,EAAOg0E,EAAKv0C,MA1CZ,KA0C+B,GAAIpjC,EAASkH,EAAG,GAAI4wE,EAAa5wE,EAAG,GACxEgxE,EA1Ce,YA+CnB,YAJmBxyE,IAAfoyE,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAOx3E,KAAKk3E,QAAQL,kBAAoBr3E,EAASQ,KAAKk3E,QAAQJ,mBACvEhsE,KAAK,SAAUtL,GAAU,OAAOA,EAAO83E,EAAaI,KACpD5sE,KAAK,SAAUxL,GAAW,OAAOm4E,GAAcn4E,EAASE,EAAQ83E,MAEhD71E,GACrBugE,KACA5/D,EAAQ,EAAG4O,MACXzO,EAAW,qBAAsBqoE,GAAU+L,MAC5CI,GAnCoC,GAsC3C,SAASU,GAAcx0E,EAAO00E,EAAYL,GACtC,IAAKr0E,EACD,MAAM,IAAIW,MAAM,gBAAkB0zE,EAAa,SAAWK,EAAa,KAE3E,OAAO10E;;;;;;;OAyBX,IAAI20E,GAAkC,WAClC,SAASA,KAIT,OADAA,EAAiB9yE,kBAAoB,WAAc,OAAO+yE,GAAkCD,EAAkBv/B,KACvGu/B,EAL0B,GASjCC,GAD8Ct0D,GAoD9Cu0D,GAAmC,WACnC,SAASA,KAIT,OADAA,EAAkBhzE,kBAAoB,WAAc,OAAOizE,MACpDD,EAL2B,GAclCC,GAN+C,WAE/C,IADA,IAAIpxE,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,IAsBzBoxE,GAA2B,SAAU/qC,GAErC,SAASrB,IACL,OAAkB,OAAXqB,GAAmBA,EAAOzrC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUkrC,EAASqB,GAIZrB,EALmB,CAM5BksC,IAsDEG,GAAiC,SAAUhrC,GAE3C,SAASgrC,IACL,OAAkB,OAAXhrC,GAAmBA,EAAOzrC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUu3E,EAAiBhrC,GAIpBgrC,EALyB,CAMlCD,IAiBEE,GACA,SAASA,GAAchyE,EAAMqmC,GACzBvsC,KAAKkG,KAAOA,EACZlG,KAAKusC,SAAWA,GAOpB4rC,GAA2B,WAC3B,SAASA,EAAUC,EAAY19D,EAAQ29D,GACnCr4E,KAAKo4E,WAAaA,EAClBp4E,KAAKq4E,cAAgBA,EACrBr4E,KAAKs4E,aACLt4E,KAAK0a,OAAS,KACVA,GAAUA,aAAkB69D,IAC5B79D,EAAO89D,SAASx4E,MA4BxB,OAzBAI,OAAO+B,eAAeg2E,EAAUt3E,UAAW,YACvCiR,IAAK,WAAc,OAAO9R,KAAKq4E,cAAc/mE,UAC7C86B,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg2E,EAAUt3E,UAAW,qBACvCiR,IAAK,WAAc,OAAO9R,KAAKq4E,cAAc/uE,WAC7C8iC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg2E,EAAUt3E,UAAW,WACvCiR,IAAK,WAAc,OAAO9R,KAAKq4E,cAAct+D,SAC7CqyB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg2E,EAAUt3E,UAAW,cACvCiR,IAAK,WAAc,OAAO9R,KAAKq4E,cAAcI,YAC7CrsC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg2E,EAAUt3E,UAAW,kBACvCiR,IAAK,WAAc,OAAO9R,KAAKq4E,cAAcK,gBAC7CtsC,YAAY,EACZC,cAAc,IAEX8rC,EAnCmB,GAwC1BI,GAA8B,SAAUtrC,GAExC,SAASsrC,EAAaH,EAAY19D,EAAQ29D,GACtC,IAAInrC,EAAQD,EAAO1rC,KAAKvB,KAAMo4E,EAAY19D,EAAQ29D,IAAkBr4E,KAOpE,OANAktC,EAAMugC,cACNvgC,EAAMtgC,cACNsgC,EAAMpL,WACNoL,EAAMz+B,UACNy+B,EAAMyrC,cACNzrC,EAAMoL,cAAgB8/B,EACflrC,EAsEX,OA/EAxsC,EAAU63E,EAActrC,GAWxBsrC,EAAa13E,UAAU23E,SAAW,SAAU/9D,GACpCA,IACAza,KAAK24E,WAAWr1E,KAAKmX,GACrBA,EAAMC,OAAS1a,OAGvBu4E,EAAa13E,UAAU2oB,YAAc,SAAU/O,GAC3C,IAAIkQ,EAAa3qB,KAAK24E,WAAWjtE,QAAQ+O,IACrB,IAAhBkQ,IACAlQ,EAAMC,OAAS,KACf1a,KAAK24E,WAAWzuD,OAAOS,EAAY,KAG3C4tD,EAAa13E,UAAU+3E,oBAAsB,SAAUn+D,EAAOo+D,GAC1D,IACInyE,EADAwmC,EAAQltC,KAER84E,EAAe94E,KAAK24E,WAAWjtE,QAAQ+O,IACrB,IAAlBq+D,KACCpyE,EAAK1G,KAAK24E,YAAYzuD,OAAO1oB,MAAMkF,EAAIlD,GAAUs1E,EAAe,EAAG,GAAID,IACxEA,EAAY3pE,QAAQ,SAAUpN,GACtBA,EAAE4Y,QACF5Y,EAAE4Y,OAAO8O,YAAY1nB,GAEzBA,EAAE4Y,OAASwyB,MAIvBqrC,EAAa13E,UAAU0oB,aAAe,SAAUwvD,EAAUC,GACtD,IAAIC,EAAWj5E,KAAK24E,WAAWjtE,QAAQqtE,IACrB,IAAdE,EACAj5E,KAAKw4E,SAASQ,IAGVA,EAASt+D,QACTs+D,EAASt+D,OAAO8O,YAAYwvD,GAEhCA,EAASt+D,OAAS1a,KAClBA,KAAK24E,WAAWzuD,OAAO+uD,EAAU,EAAGD,KAG5CT,EAAa13E,UAAUutD,MAAQ,SAAUZ,GAErC,OADcxtD,KAAKk5E,SAAS1rB,GACb,IAAM,MAEzB+qB,EAAa13E,UAAUq4E,SAAW,SAAU1rB,GACxC,IAAIpzB,KAEJ,OADA++C,GAAsBn5E,KAAMwtD,EAAWpzB,GAChCA,GAEXm+C,EAAa13E,UAAUu4E,cAAgB,SAAU5rB,GAC7C,IAAIpzB,KAEJ,OADAi/C,GAAmBr5E,KAAMwtD,EAAWpzB,GAC7BA,GAEXh6B,OAAO+B,eAAeo2E,EAAa13E,UAAW,YAC1CiR,IAAK,WACD,OAAO9R,KAAK24E,WAAWnpB,OAAO,SAAUntC,GAAQ,OAAOA,aAAgBk2D,KAE3EnsC,YAAY,EACZC,cAAc,IAElBksC,EAAa13E,UAAUy4E,oBAAsB,SAAUv9C,EAAWw9C,GAC9Dv5E,KAAKs4E,UAAUppE,QAAQ,SAAU4sB,GACzBA,EAAS51B,MAAQ61B,GACjBD,EAASyQ,SAASgtC,MAIvBhB,EAhFsB,CAiF/BJ,IAOF,SAASgB,GAAsBnqD,EAASw+B,EAAWpzB,GAC/CpL,EAAQ2pD,WAAWzpE,QAAQ,SAAUmT,GAC7BA,aAAgBk2D,KACZ/qB,EAAUnrC,IACV+X,EAAQ92B,KAAK+e,GAEjB82D,GAAsB92D,EAAMmrC,EAAWpzB,MAInD,SAASi/C,GAAmBj/D,EAAYozC,EAAWpzB,GAC3ChgB,aAAsBm+D,IACtBn+D,EAAWu+D,WAAWzpE,QAAQ,SAAUmT,GAChCmrC,EAAUnrC,IACV+X,EAAQ92B,KAAK+e,GAEbA,aAAgBk2D,IAChBc,GAAmBh3D,EAAMmrC,EAAWpzB,KAMpD,IAAIo/C,GAAyB,IAAI9uE,IAIjC,SAAS+uE,GAAarB,GAClB,OAAOoB,GAAuB1nE,IAAIsmE,IAAe,KAErD,SAASsB,GAAer3D,GACpBm3D,GAAuBt0D,IAAI7C,EAAK+1D,WAAY/1D;;;;;;;;AAahD,IAAIs3D,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6B94E,UAAU+4E,SAAW,SAAUhqE,GAAO,OAAO+D,GAAmB/D,IAC7F+pE,EAA6B94E,UAAUC,OAAS,SAAU+4E,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAUryE,EAAOkvC,GAAQ,OAAOA,GAKlDkjC,GAAuC,WACvC,SAASA,EAAsBD,GAC3B75E,KAAKsB,OAAS,EAEdtB,KAAKg6E,eAAiB,KAEtBh6E,KAAKi6E,iBAAmB,KACxBj6E,KAAKk6E,gBAAkB,KACvBl6E,KAAKm6E,QAAU,KACfn6E,KAAKo6E,QAAU,KACfp6E,KAAKq6E,eAAiB,KACtBr6E,KAAKs6E,eAAiB,KACtBt6E,KAAKu6E,WAAa,KAClBv6E,KAAKw6E,WAAa,KAClBx6E,KAAKy6E,cAAgB,KACrBz6E,KAAK06E,cAAgB,KAErB16E,KAAK26E,qBAAuB,KAC5B36E,KAAK46E,qBAAuB,KAC5B56E,KAAK66E,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsBj5E,UAAUi6E,YAAc,SAAUlwE,GACpD,IAAIub,EACJ,IAAKA,EAASnmB,KAAKm6E,QAAoB,OAAXh0D,EAAiBA,EAASA,EAAO40D,MACzDnwE,EAAGub,IAGX2zD,EAAsBj5E,UAAUm6E,iBAAmB,SAAUpwE,GAKzD,IAJA,IAAIqwE,EAASj7E,KAAKm6E,QACde,EAAal7E,KAAKy6E,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAI/0D,GAAU+0D,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiBn1D,EAAQg1D,EAAiBC,GAC7DC,EAAel1D,EAAOk1D,aAE1B,GAAIl1D,IAAW+0D,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxB50D,EAAOs1D,cACPN,QAEC,CAEIC,IACDA,MACJ,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAIx6E,EAAI,EAAGA,EAAIu6E,EAAwBv6E,IAAK,CAC7C,IAAIy6E,EAASz6E,EAAIi6E,EAAY95E,OAAS85E,EAAYj6E,GAAMi6E,EAAYj6E,GAAK,EACrEuG,EAAQk0E,EAASz6E,EACjBw6E,GAAqBj0E,GAASA,EAAQg0E,IACtCN,EAAYj6E,GAAKy6E,EAAS,GAIlCR,EADoBj1D,EAAOs1D,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrBzwE,EAAGub,EAAQo1D,EAAkBF,KAIzCvB,EAAsBj5E,UAAUg7E,oBAAsB,SAAUjxE,GAC5D,IAAIub,EACJ,IAAKA,EAASnmB,KAAKk6E,gBAA4B,OAAX/zD,EAAiBA,EAASA,EAAO21D,cACjElxE,EAAGub,IAGX2zD,EAAsBj5E,UAAUk7E,iBAAmB,SAAUnxE,GACzD,IAAIub,EACJ,IAAKA,EAASnmB,KAAKq6E,eAA2B,OAAXl0D,EAAiBA,EAASA,EAAO61D,WAChEpxE,EAAGub,IAGX2zD,EAAsBj5E,UAAUo7E,iBAAmB,SAAUrxE,GACzD,IAAIub,EACJ,IAAKA,EAASnmB,KAAKu6E,WAAuB,OAAXp0D,EAAiBA,EAASA,EAAO+1D,WAC5DtxE,EAAGub,IAGX2zD,EAAsBj5E,UAAUs7E,mBAAqB,SAAUvxE,GAC3D,IAAIub,EACJ,IAAKA,EAASnmB,KAAKy6E,cAA0B,OAAXt0D,EAAiBA,EAASA,EAAOq1D,aAC/D5wE,EAAGub,IAGX2zD,EAAsBj5E,UAAUu7E,sBAAwB,SAAUxxE,GAC9D,IAAIub,EACJ,IAAKA,EAASnmB,KAAK26E,qBAAiC,OAAXx0D,EAAiBA,EAASA,EAAOk2D,oBACtEzxE,EAAGub,IAGX2zD,EAAsBj5E,UAAUy7E,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,OACC5oE,GAAmB4oE,GACpB,MAAM,IAAI34E,MAAM,yBAA2BuH,GAAUoxE,GAAc,4CAEvE,OAAIv8E,KAAKw8E,MAAMD,GACJv8E,KAGA,MAGf85E,EAAsBj5E,UAAU+M,UAAY,aAC5CksE,EAAsBj5E,UAAU27E,MAAQ,SAAUD,GAC9C,IAAIrvC,EAAQltC,KACZA,KAAKy8E,SACL,IAEI/0E,EACAkvC,EACA8lC,EAJAv2D,EAASnmB,KAAKm6E,QACdwC,GAAa,EAIjB,GAAIp8E,MAAM2P,QAAQqsE,GAAa,CAC3Bv8E,KAAKsB,OAASi7E,EAAWj7E,OACzB,IAAK,IAAIs7E,EAAU,EAAGA,EAAU58E,KAAKsB,OAAQs7E,IAEzCF,EAAc18E,KAAK66E,WAAW+B,EAD9BhmC,EAAO2lC,EAAWK,IAEH,OAAXz2D,GAAoBnb,GAAemb,EAAO02D,UAAWH,IAKjDC,IAEAx2D,EAASnmB,KAAK88E,mBAAmB32D,EAAQywB,EAAM8lC,EAAaE,IAE3D5xE,GAAemb,EAAOywB,KAAMA,IAC7B52C,KAAK+8E,mBAAmB52D,EAAQywB,KATpCzwB,EAASnmB,KAAKg9E,UAAU72D,EAAQywB,EAAM8lC,EAAaE,GACnDD,GAAa,GAUjBx2D,EAASA,EAAO40D,WAIpBrzE,EAAQ,EApqfpB,SAASu1E,EAAgBrtE,EAAKhF,GAC1B,GAAIrK,MAAM2P,QAAQN,GACd,IAAK,IAAIzO,EAAI,EAAGA,EAAIyO,EAAItO,OAAQH,IAC5ByJ,EAAGgF,EAAIzO,SAMX,IAFA,IAAI4B,EAAW6M,EAAItF,OACfssC,OAAO,IACDA,EAAO7zC,EAASC,QAAY,MAClC4H,EAAGgsC,EAAK3zC,OA2pfRg6E,CAAgBV,EAAY,SAAU3lC,GAClC8lC,EAAcxvC,EAAM2tC,WAAWnzE,EAAOkvC,GACvB,OAAXzwB,GAAoBnb,GAAemb,EAAO02D,UAAWH,IAKjDC,IAEAx2D,EAAS+mB,EAAM4vC,mBAAmB32D,EAAQywB,EAAM8lC,EAAah1E,IAE5DsD,GAAemb,EAAOywB,KAAMA,IAC7B1J,EAAM6vC,mBAAmB52D,EAAQywB,KATrCzwB,EAAS+mB,EAAM8vC,UAAU72D,EAAQywB,EAAM8lC,EAAah1E,GACpDi1E,GAAa,GAUjBx2D,EAASA,EAAO40D,MAChBrzE,MAEJ1H,KAAKsB,OAASoG,EAIlB,OAFA1H,KAAKk9E,UAAU/2D,GACfnmB,KAAKu8E,WAAaA,EACXv8E,KAAKkzB,SAEhB9yB,OAAO+B,eAAe23E,EAAsBj5E,UAAW,WAInDiR,IAAK,WACD,OAA+B,OAAxB9R,KAAKq6E,gBAA+C,OAApBr6E,KAAKu6E,YACjB,OAAvBv6E,KAAKy6E,eAAwD,OAA9Bz6E,KAAK26E,sBAE5CvuC,YAAY,EACZC,cAAc,IAUlBytC,EAAsBj5E,UAAU47E,OAAS,WACrC,GAAIz8E,KAAKkzB,QAAS,CACd,IAAI/M,OAAS,EACTg3D,OAAa,EACjB,IAAKh3D,EAASnmB,KAAKk6E,gBAAkBl6E,KAAKm6E,QAAoB,OAAXh0D,EAAiBA,EAASA,EAAO40D,MAChF50D,EAAO21D,cAAgB31D,EAAO40D,MAElC,IAAK50D,EAASnmB,KAAKq6E,eAA2B,OAAXl0D,EAAiBA,EAASA,EAAO61D,WAChE71D,EAAOs1D,cAAgBt1D,EAAOk1D,aAGlC,IADAr7E,KAAKq6E,eAAiBr6E,KAAKs6E,eAAiB,KACvCn0D,EAASnmB,KAAKu6E,WAAuB,OAAXp0D,EAAiBA,EAASg3D,EACrDh3D,EAAOs1D,cAAgBt1D,EAAOk1D,aAC9B8B,EAAah3D,EAAO+1D,WAExBl8E,KAAKu6E,WAAav6E,KAAKw6E,WAAa,KACpCx6E,KAAKy6E,cAAgBz6E,KAAK06E,cAAgB,KAC1C16E,KAAK26E,qBAAuB36E,KAAK46E,qBAAuB,OAehEd,EAAsBj5E,UAAUm8E,UAAY,SAAU72D,EAAQywB,EAAM8lC,EAAah1E,GAE7E,IAAI01E,EAkCJ,OAjCe,OAAXj3D,EACAi3D,EAAiBp9E,KAAKo6E,SAGtBgD,EAAiBj3D,EAAOk3D,MAExBr9E,KAAKs9E,QAAQn3D,IAIF,QADfA,EAAiC,OAAxBnmB,KAAKg6E,eAA0B,KAAOh6E,KAAKg6E,eAAeloE,IAAI4qE,EAAah1E,KAI3EsD,GAAemb,EAAOywB,KAAMA,IAC7B52C,KAAK+8E,mBAAmB52D,EAAQywB,GACpC52C,KAAKu9E,WAAWp3D,EAAQi3D,EAAgB11E,IAKzB,QADfye,EAAmC,OAA1BnmB,KAAKi6E,iBAA4B,KAAOj6E,KAAKi6E,iBAAiBnoE,IAAI4qE,EAAa,QAI/E1xE,GAAemb,EAAOywB,KAAMA,IAC7B52C,KAAK+8E,mBAAmB52D,EAAQywB,GACpC52C,KAAKw9E,eAAer3D,EAAQi3D,EAAgB11E,IAI5Cye,EACInmB,KAAKy9E,UAAU,IAAIC,GAAsB9mC,EAAM8lC,GAAcU,EAAgB11E,GAGlFye,GA6BX2zD,EAAsBj5E,UAAUi8E,mBAAqB,SAAU32D,EAAQywB,EAAM8lC,EAAah1E,GACtF,IAAIi2E,EAA2C,OAA1B39E,KAAKi6E,iBAA4B,KAAOj6E,KAAKi6E,iBAAiBnoE,IAAI4qE,EAAa,MAQpG,OAPuB,OAAnBiB,EACAx3D,EAASnmB,KAAKw9E,eAAeG,EAAgBx3D,EAAOk3D,MAAO31E,GAEtDye,EAAOk1D,cAAgB3zE,IAC5Bye,EAAOk1D,aAAe3zE,EACtB1H,KAAK49E,YAAYz3D,EAAQze,IAEtBye,GASX2zD,EAAsBj5E,UAAUq8E,UAAY,SAAU/2D,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAIg3D,EAAah3D,EAAO40D,MACxB/6E,KAAK69E,eAAe79E,KAAK89E,QAAQ33D,IACjCA,EAASg3D,EAEiB,OAA1Bn9E,KAAKi6E,kBACLj6E,KAAKi6E,iBAAiB9lC,QAEE,OAAxBn0C,KAAKs6E,iBACLt6E,KAAKs6E,eAAe0B,WAAa,MAEb,OAApBh8E,KAAKw6E,aACLx6E,KAAKw6E,WAAW0B,WAAa,MAEZ,OAAjBl8E,KAAKo6E,UACLp6E,KAAKo6E,QAAQW,MAAQ,MAEE,OAAvB/6E,KAAK06E,gBACL16E,KAAK06E,cAAcc,aAAe,MAEJ,OAA9Bx7E,KAAK46E,uBACL56E,KAAK46E,qBAAqByB,oBAAsB,OAIxDvC,EAAsBj5E,UAAU28E,eAAiB,SAAUr3D,EAAQ43D,EAAYr2E,GAC7C,OAA1B1H,KAAKi6E,kBACLj6E,KAAKi6E,iBAAiBlnD,OAAO5M,GAEjC,IAAI63D,EAAO73D,EAAO83D,aACdj7E,EAAOmjB,EAAOq1D,aAelB,OAda,OAATwC,EACAh+E,KAAKy6E,cAAgBz3E,EAGrBg7E,EAAKxC,aAAex4E,EAEX,OAATA,EACAhD,KAAK06E,cAAgBsD,EAGrBh7E,EAAKi7E,aAAeD,EAExBh+E,KAAKk+E,aAAa/3D,EAAQ43D,EAAYr2E,GACtC1H,KAAK49E,YAAYz3D,EAAQze,GAClBye,GAGX2zD,EAAsBj5E,UAAU08E,WAAa,SAAUp3D,EAAQ43D,EAAYr2E,GAIvE,OAHA1H,KAAK89E,QAAQ33D,GACbnmB,KAAKk+E,aAAa/3D,EAAQ43D,EAAYr2E,GACtC1H,KAAK49E,YAAYz3D,EAAQze,GAClBye,GAGX2zD,EAAsBj5E,UAAU48E,UAAY,SAAUt3D,EAAQ43D,EAAYr2E,GAatE,OAZA1H,KAAKk+E,aAAa/3D,EAAQ43D,EAAYr2E,GAIlC1H,KAAKs6E,eAHmB,OAAxBt6E,KAAKs6E,eAGiBt6E,KAAKq6E,eAAiBl0D,EAMtBnmB,KAAKs6E,eAAe0B,WAAa71D,EAEpDA,GAGX2zD,EAAsBj5E,UAAUq9E,aAAe,SAAU/3D,EAAQ43D,EAAYr2E,GAKzE,IAAI1E,EAAsB,OAAf+6E,EAAsB/9E,KAAKm6E,QAAU4D,EAAWhD,MAuB3D,OAnBA50D,EAAO40D,MAAQ/3E,EACfmjB,EAAOk3D,MAAQU,EACF,OAAT/6E,EACAhD,KAAKo6E,QAAUj0D,EAGfnjB,EAAKq6E,MAAQl3D,EAEE,OAAf43D,EACA/9E,KAAKm6E,QAAUh0D,EAGf43D,EAAWhD,MAAQ50D,EAEK,OAAxBnmB,KAAKg6E,iBACLh6E,KAAKg6E,eAAiB,IAAImE,IAE9Bn+E,KAAKg6E,eAAeoE,IAAIj4D,GACxBA,EAAOk1D,aAAe3zE,EACfye,GAGX2zD,EAAsBj5E,UAAUy8E,QAAU,SAAUn3D,GAChD,OAAOnmB,KAAK69E,eAAe79E,KAAK89E,QAAQ33D,KAG5C2zD,EAAsBj5E,UAAUi9E,QAAU,SAAU33D,GACpB,OAAxBnmB,KAAKg6E,gBACLh6E,KAAKg6E,eAAejnD,OAAO5M,GAE/B,IAAI63D,EAAO73D,EAAOk3D,MACdr6E,EAAOmjB,EAAO40D,MAgBlB,OAZa,OAATiD,EACAh+E,KAAKm6E,QAAUn3E,EAGfg7E,EAAKjD,MAAQ/3E,EAEJ,OAATA,EACAhD,KAAKo6E,QAAU4D,EAGfh7E,EAAKq6E,MAAQW,EAEV73D,GAGX2zD,EAAsBj5E,UAAU+8E,YAAc,SAAUz3D,EAAQk4D,GAG5D,OAAIl4D,EAAOs1D,gBAAkB4C,EAClBl4D,GAKPnmB,KAAKw6E,WAHe,OAApBx6E,KAAKw6E,WAGax6E,KAAKu6E,WAAap0D,EAKlBnmB,KAAKw6E,WAAW0B,WAAa/1D,EAE5CA,IAEX2zD,EAAsBj5E,UAAUg9E,eAAiB,SAAU13D,GAoBvD,OAnB8B,OAA1BnmB,KAAKi6E,mBACLj6E,KAAKi6E,iBAAmB,IAAIkE,IAEhCn+E,KAAKi6E,iBAAiBmE,IAAIj4D,GAC1BA,EAAOk1D,aAAe,KACtBl1D,EAAOq1D,aAAe,KACK,OAAvBx7E,KAAK06E,eAGL16E,KAAK06E,cAAgB16E,KAAKy6E,cAAgBt0D,EAC1CA,EAAO83D,aAAe,OAMtB93D,EAAO83D,aAAej+E,KAAK06E,cAC3B16E,KAAK06E,cAAgB16E,KAAK06E,cAAcc,aAAer1D,GAEpDA,GAGX2zD,EAAsBj5E,UAAUk8E,mBAAqB,SAAU52D,EAAQywB,GAQnE,OAPAzwB,EAAOywB,KAAOA,EAEV52C,KAAK46E,qBADyB,OAA9B56E,KAAK46E,qBACuB56E,KAAK26E,qBAAuBx0D,EAG5BnmB,KAAK46E,qBAAqByB,oBAAsBl2D,EAEzEA,GAEJ2zD,EA3e+B,GA6etC4D,GACA,SAASA,GAAsB9mC,EAAMimC,GACjC78E,KAAK42C,KAAOA,EACZ52C,KAAK68E,UAAYA,EACjB78E,KAAKq7E,aAAe,KACpBr7E,KAAKy7E,cAAgB,KAErBz7E,KAAK87E,cAAgB,KAErB97E,KAAKq9E,MAAQ,KAEbr9E,KAAK+6E,MAAQ,KAEb/6E,KAAKs+E,SAAW,KAEhBt+E,KAAKu+E,SAAW,KAEhBv+E,KAAKi+E,aAAe,KAEpBj+E,KAAKw7E,aAAe,KAEpBx7E,KAAKg8E,WAAa,KAElBh8E,KAAKk8E,WAAa,KAElBl8E,KAAKq8E,oBAAsB,MAK/BmC,GAA0C,WAC1C,SAASA,IAELx+E,KAAKy+E,MAAQ,KAEbz+E,KAAK0+E,MAAQ,KAiEjB,OA1DAF,EAAyB39E,UAAU+xB,IAAM,SAAUzM,GAC5B,OAAfnmB,KAAKy+E,OACLz+E,KAAKy+E,MAAQz+E,KAAK0+E,MAAQv4D,EAC1BA,EAAOo4D,SAAW,KAClBp4D,EAAOm4D,SAAW,OAMlBt+E,KAAK0+E,MAAMH,SAAWp4D,EACtBA,EAAOm4D,SAAWt+E,KAAK0+E,MACvBv4D,EAAOo4D,SAAW,KAClBv+E,KAAK0+E,MAAQv4D,IAKrBq4D,EAAyB39E,UAAUiR,IAAM,SAAU+qE,EAAW8B,GAC1D,IAAIx4D,EACJ,IAAKA,EAASnmB,KAAKy+E,MAAkB,OAAXt4D,EAAiBA,EAASA,EAAOo4D,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkBx4D,EAAOk1D,eACrDrwE,GAAemb,EAAO02D,UAAWA,GACjC,OAAO12D,EAGf,OAAO,MAOXq4D,EAAyB39E,UAAUkyB,OAAS,SAAU5M,GASlD,IAAI63D,EAAO73D,EAAOm4D,SACdt7E,EAAOmjB,EAAOo4D,SAalB,OAZa,OAATP,EACAh+E,KAAKy+E,MAAQz7E,EAGbg7E,EAAKO,SAAWv7E,EAEP,OAATA,EACAhD,KAAK0+E,MAAQV,EAGbh7E,EAAKs7E,SAAWN,EAEE,OAAfh+E,KAAKy+E,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACLn+E,KAAKqL,IAAM,IAAIX,IA2CnB,OAzCAyzE,EAAct9E,UAAUu9E,IAAM,SAAUj4D,GACpC,IAAIvkB,EAAMukB,EAAO02D,UACb+B,EAAa5+E,KAAKqL,IAAIyG,IAAIlQ,GACzBg9E,IACDA,EAAa,IAAIJ,GACjBx+E,KAAKqL,IAAI6Z,IAAItjB,EAAKg9E,IAEtBA,EAAWhsD,IAAIzM,IASnBg4D,EAAct9E,UAAUiR,IAAM,SAAU+qE,EAAW8B,GAC/C,IACIE,EAAa7+E,KAAKqL,IAAIyG,IADhB+qE,GAEV,OAAOgC,EAAaA,EAAW/sE,IAAI+qE,EAAW8B,GAAkB,MAOpER,EAAct9E,UAAUkyB,OAAS,SAAU5M,GACvC,IAAIvkB,EAAMukB,EAAO02D,UAMjB,OALiB78E,KAAKqL,IAAIyG,IAAIlQ,GAEfmxB,OAAO5M,IAClBnmB,KAAKqL,IAAIwpC,OAAOjzC,GAEbukB,GAEX/lB,OAAO+B,eAAeg8E,EAAct9E,UAAW,WAC3CiR,IAAK,WAAc,OAAyB,IAAlB9R,KAAKqL,IAAIk5D,MACnCn4B,YAAY,EACZC,cAAc,IAElB8xC,EAAct9E,UAAUszC,MAAQ,WAAcn0C,KAAKqL,IAAI8oC,SAChDgqC,EA7CuB,GA+ClC,SAAS7C,GAAiB1kC,EAAMukC,EAAiBC,GAC7C,IAAIK,EAAgB7kC,EAAK6kC,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAY95E,SAC3Cw9E,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAwgBWC,GAxgBPC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6Bn+E,UAAU+4E,SAAW,SAAUhqE,GAAO,OAAOA,aAAelF,KAAOmK,GAAWjF,IAC3GovE,EAA6Bn+E,UAAUC,OAAS,WAAc,OAAO,IAAIm+E,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACLj/E,KAAKilB,SAAW,IAAIva,IACpB1K,KAAKk/E,SAAW,KAEhBl/E,KAAKm/E,aAAe,KACpBn/E,KAAKo/E,iBAAmB,KACxBp/E,KAAKq/E,aAAe,KACpBr/E,KAAKs/E,aAAe,KACpBt/E,KAAKq6E,eAAiB,KACtBr6E,KAAKs6E,eAAiB,KACtBt6E,KAAKy6E,cAAgB,KACrBz6E,KAAK06E,cAAgB,KA+MzB,OA7MAt6E,OAAO+B,eAAe88E,EAAsBp+E,UAAW,WACnDiR,IAAK,WACD,OAA+B,OAAxB9R,KAAKq6E,gBAAiD,OAAtBr6E,KAAKq/E,cACjB,OAAvBr/E,KAAKy6E,eAEbruC,YAAY,EACZC,cAAc,IAElB4yC,EAAsBp+E,UAAUi6E,YAAc,SAAUlwE,GACpD,IAAIub,EACJ,IAAKA,EAASnmB,KAAKk/E,SAAqB,OAAX/4D,EAAiBA,EAASA,EAAO40D,MAC1DnwE,EAAGub,IAGX84D,EAAsBp+E,UAAUg7E,oBAAsB,SAAUjxE,GAC5D,IAAIub,EACJ,IAAKA,EAASnmB,KAAKo/E,iBAA6B,OAAXj5D,EAAiBA,EAASA,EAAO21D,cAClElxE,EAAGub,IAGX84D,EAAsBp+E,UAAU0+E,mBAAqB,SAAU30E,GAC3D,IAAIub,EACJ,IAAKA,EAASnmB,KAAKq/E,aAAyB,OAAXl5D,EAAiBA,EAASA,EAAOq5D,aAC9D50E,EAAGub,IAGX84D,EAAsBp+E,UAAUk7E,iBAAmB,SAAUnxE,GACzD,IAAIub,EACJ,IAAKA,EAASnmB,KAAKq6E,eAA2B,OAAXl0D,EAAiBA,EAASA,EAAO61D,WAChEpxE,EAAGub,IAGX84D,EAAsBp+E,UAAUs7E,mBAAqB,SAAUvxE,GAC3D,IAAIub,EACJ,IAAKA,EAASnmB,KAAKy6E,cAA0B,OAAXt0D,EAAiBA,EAASA,EAAOq1D,aAC/D5wE,EAAGub,IAGX84D,EAAsBp+E,UAAUy7E,KAAO,SAAUjxE,GAC7C,GAAKA,GAGA,KAAMA,aAAeX,KAAOmK,GAAWxJ,IACxC,MAAM,IAAIzH,MAAM,yBAA2BuH,GAAUE,GAAO,6CAH5DA,EAAM,IAAIX,IAKd,OAAO1K,KAAKw8E,MAAMnxE,GAAOrL,KAAO,MAEpCi/E,EAAsBp+E,UAAU+M,UAAY,aAK5CqxE,EAAsBp+E,UAAU27E,MAAQ,SAAUnxE,GAC9C,IAAI6hC,EAAQltC,KACZA,KAAKy8E,SACL,IAAIlzD,EAAevpB,KAAKk/E,SAcxB,GAbAl/E,KAAKm/E,aAAe,KACpBn/E,KAAKy/E,SAASp0E,EAAK,SAAUpI,EAAOrB,GAChC,GAAI2nB,GAAgBA,EAAa3nB,MAAQA,EACrCsrC,EAAMwyC,mBAAmBn2D,EAActmB,GACvCiqC,EAAMiyC,aAAe51D,EACrBA,EAAeA,EAAawxD,UAE3B,CACD,IAAI50D,EAAS+mB,EAAMyyC,yBAAyB/9E,EAAKqB,GACjDsmB,EAAe2jB,EAAM0yC,sBAAsBr2D,EAAcpD,MAI7DoD,EAAc,CACVA,EAAa8zD,QACb9zD,EAAa8zD,MAAMtC,MAAQ,MAE/B/6E,KAAKy6E,cAAgBlxD,EACrB,IAAK,IAAIpD,EAASoD,EAAyB,OAAXpD,EAAiBA,EAASA,EAAOq1D,aACzDr1D,IAAWnmB,KAAKk/E,WAChBl/E,KAAKk/E,SAAW,MAEpBl/E,KAAKilB,SAAS4vB,OAAO1uB,EAAOvkB,KAC5BukB,EAAOq1D,aAAer1D,EAAO40D,MAC7B50D,EAAO1R,cAAgB0R,EAAOzR,aAC9ByR,EAAOzR,aAAe,KACtByR,EAAOk3D,MAAQ,KACfl3D,EAAO40D,MAAQ,KAQvB,OAJI/6E,KAAKs/E,eACLt/E,KAAKs/E,aAAaE,aAAe,MACjCx/E,KAAKs6E,iBACLt6E,KAAKs6E,eAAe0B,WAAa,MAC9Bh8E,KAAKkzB,SAUhB+rD,EAAsBp+E,UAAU++E,sBAAwB,SAAUC,EAAQ15D,GACtE,GAAI05D,EAAQ,CACR,IAAI7B,EAAO6B,EAAOxC,MAWlB,OAVAl3D,EAAO40D,MAAQ8E,EACf15D,EAAOk3D,MAAQW,EACf6B,EAAOxC,MAAQl3D,EACX63D,IACAA,EAAKjD,MAAQ50D,GAEb05D,IAAW7/E,KAAKk/E,WAChBl/E,KAAKk/E,SAAW/4D,GAEpBnmB,KAAKm/E,aAAeU,EACbA,EAUX,OARI7/E,KAAKm/E,cACLn/E,KAAKm/E,aAAapE,MAAQ50D,EAC1BA,EAAOk3D,MAAQr9E,KAAKm/E,cAGpBn/E,KAAKk/E,SAAW/4D,EAEpBnmB,KAAKm/E,aAAeh5D,EACb,MAEX84D,EAAsBp+E,UAAU8+E,yBAA2B,SAAU/9E,EAAKqB,GACtE,GAAIjD,KAAKilB,SAAS+uB,IAAIpyC,GAAM,CACxB,IAAIk+E,EAAW9/E,KAAKilB,SAASnT,IAAIlQ,GACjC5B,KAAK0/E,mBAAmBI,EAAU78E,GAClC,IAAI+6E,EAAO8B,EAASzC,MAChBr6E,EAAO88E,EAAS/E,MASpB,OARIiD,IACAA,EAAKjD,MAAQ/3E,GAEbA,IACAA,EAAKq6E,MAAQW,GAEjB8B,EAAS/E,MAAQ,KACjB+E,EAASzC,MAAQ,KACVyC,EAEX,IAAI35D,EAAS,IAAI45D,GAAsBn+E,GAIvC,OAHA5B,KAAKilB,SAASC,IAAItjB,EAAKukB,GACvBA,EAAOzR,aAAezR,EACtBjD,KAAKggF,gBAAgB75D,GACdA,GAGX84D,EAAsBp+E,UAAU47E,OAAS,WACrC,GAAIz8E,KAAKkzB,QAAS,CACd,IAAI/M,OAAS,EAGb,IADAnmB,KAAKo/E,iBAAmBp/E,KAAKk/E,SACxB/4D,EAASnmB,KAAKo/E,iBAA6B,OAAXj5D,EAAiBA,EAASA,EAAO40D,MAClE50D,EAAO21D,cAAgB31D,EAAO40D,MAIlC,IAAK50D,EAASnmB,KAAKq/E,aAAyB,OAAXl5D,EAAiBA,EAASA,EAAOq5D,aAC9Dr5D,EAAO1R,cAAgB0R,EAAOzR,aAElC,IAAKyR,EAASnmB,KAAKq6E,eAA0B,MAAVl0D,EAAgBA,EAASA,EAAO61D,WAC/D71D,EAAO1R,cAAgB0R,EAAOzR,aAElC1U,KAAKq/E,aAAer/E,KAAKs/E,aAAe,KACxCt/E,KAAKq6E,eAAiBr6E,KAAKs6E,eAAiB,KAC5Ct6E,KAAKy6E,cAAgB,OAI7BwE,EAAsBp+E,UAAU6+E,mBAAqB,SAAUv5D,EAAQkd,GAC9Dr4B,GAAeq4B,EAAUld,EAAOzR,gBACjCyR,EAAO1R,cAAgB0R,EAAOzR,aAC9ByR,EAAOzR,aAAe2uB,EACtBrjC,KAAKigF,cAAc95D,KAG3B84D,EAAsBp+E,UAAUm/E,gBAAkB,SAAU75D,GAC5B,OAAxBnmB,KAAKq6E,eACLr6E,KAAKq6E,eAAiBr6E,KAAKs6E,eAAiBn0D,GAG5CnmB,KAAKs6E,eAAe0B,WAAa71D,EACjCnmB,KAAKs6E,eAAiBn0D,IAG9B84D,EAAsBp+E,UAAUo/E,cAAgB,SAAU95D,GAC5B,OAAtBnmB,KAAKq/E,aACLr/E,KAAKq/E,aAAer/E,KAAKs/E,aAAen5D,GAGxCnmB,KAAKs/E,aAAaE,aAAer5D,EACjCnmB,KAAKs/E,aAAen5D,IAI5B84D,EAAsBp+E,UAAU4+E,SAAW,SAAU7vE,EAAKhF,GAClDgF,aAAelF,IACfkF,EAAIV,QAAQtE,GAGZxK,OAAOoK,KAAKoF,GAAKV,QAAQ,SAAUg4C,GAAK,OAAOt8C,EAAGgF,EAAIs3C,GAAIA,MAG3D+3B,EA3N+B,GA6NtCc,GACA,SAASA,GAAsBn+E,GAC3B5B,KAAK4B,IAAMA,EACX5B,KAAKyU,cAAgB,KACrBzU,KAAK0U,aAAe,KAEpB1U,KAAK87E,cAAgB,KAErB97E,KAAK+6E,MAAQ,KAEb/6E,KAAKq9E,MAAQ,KAEbr9E,KAAKg8E,WAAa,KAElBh8E,KAAKw7E,aAAe,KAEpBx7E,KAAKw/E,aAAe,MAiBxBU,GAAiC,WACjC,SAASA,EAAgBnpC,GACrB/2C,KAAK+2C,UAAYA,EA2DrB,OAzDAmpC,EAAgBp/E,OAAS,SAAUi2C,EAAWr8B,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIylE,EAASzlE,EAAOq8B,UAAU97B,QAC9B87B,EAAYA,EAAUtzC,OAAO08E,GAEjC,OAAO,IAAID,EAAgBnpC,IAsB/BmpC,EAAgBE,OAAS,SAAUrpC,GAC/B,OACIryB,QAASw7D,EACTp6D,WAAY,SAAUpL,GAClB,IAAKA,EAID,MAAM,IAAI9W,MAAM,2DAEpB,OAAOs8E,EAAgBp/E,OAAOi2C,EAAWr8B,IAG7CyK,OAAQ+6D,EAAiB,IAAIhvE,GAAY,IAAIF,OAGrDkvE,EAAgBr/E,UAAU4uD,KAAO,SAAU4wB,GACvC,IAAI/gF,EAAUU,KAAK+2C,UAAU0Y,KAAK,SAAUnZ,GAAK,OAAOA,EAAEsjC,SAASyG,KACnE,GAAe,MAAX/gF,EACA,OAAOA,EAGP,MAAM,IAAIsE,MAAM,2CAA6Cy8E,EAAW,cAUpF,SAASC,EAAwB96E,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAXkE86E,CAAwBD,GAAY,MAIpIH,EAAgB97E,gBAAkBW,GAC9BE,WAAY,OACZ3F,QAAS,WAAc,OAAO,IAAI4gF,GAAiB,IAAIvG,QAEpDuG,EA7DyB,GA+EhCK,GAAiC,WACjC,SAASA,EAAgBxpC,GACrB/2C,KAAK+2C,UAAYA,EAmDrB,OAjDAwpC,EAAgBz/E,OAAS,SAAUi2C,EAAWr8B,GAC1C,GAAIA,EAAQ,CACR,IAAIylE,EAASzlE,EAAOq8B,UAAU97B,QAC9B87B,EAAYA,EAAUtzC,OAAO08E,GAEjC,OAAO,IAAII,EAAgBxpC,IAsB/BwpC,EAAgBH,OAAS,SAAUrpC,GAC/B,OACIryB,QAAS67D,EACTz6D,WAAY,SAAUpL,GAClB,IAAKA,EAGD,MAAM,IAAI9W,MAAM,2DAEpB,OAAO28E,EAAgBz/E,OAAOi2C,EAAWr8B,IAG7CyK,OAAQo7D,EAAiB,IAAIrvE,GAAY,IAAIF,OAGrDuvE,EAAgB1/E,UAAU4uD,KAAO,SAAU+wB,GACvC,IAAIlhF,EAAUU,KAAK+2C,UAAU0Y,KAAK,SAAUnZ,GAAK,OAAOA,EAAEsjC,SAAS4G,KACnE,GAAIlhF,EACA,OAAOA,EAEX,MAAM,IAAIsE,MAAM,2CAA6C48E,EAAK,MAE/DD,EArDyB,GAkEhCE,IAAc,IAAIzB,IAKlB0B,GAAyB,IAAIR,IADb,IAAIvG,KAEpBgH,GAAyB,IAAIJ,GAAgBE,IA6B7CG,GAAenO,GAAsB,KAAM,SAVzC/tD,QAASulD,GAAarlD,SAAU,YAChCF,QAAS6tD,GAAaptD,MAAOlB,MAC7BS,QAAS2sD,GAAqBlsD,UAC9BT,QAAS0lD,GAASjlD,WAsCpB07D,GAAY,IAAIn7E,EAAe,YAyB/Bo7E,GAAe,IAAIp7E,EAAe,gBAsBlCq7E,GAAsB,IAAIr7E,EAAe;;;;;;;;AAc7C,SAASs7E,KACL,OAAON,GAEX,SAASO,KACL,OAAON,GAEX,SAASO,GAAex5B,GACpB,OAAOA,GAAU,SApBVq3B,GAIRx/E,EAAQw/E,6BAA+Bx/E,EAAQw/E,gCAHnBA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK,SAuB3E,IAAIoC,KAEIz8D,QAAS6vD,GACTxuD,SAAUwuD,GACVpvD,MAAOsnD,GAAQrC,GAASnmD,GAAUy+C,GAAc/qB,GAA0BoxB,MAG1ErkD,QAASqkD,GACThjD,SAAUgjD,GACV5jD,OAAQ,IAAInU,GAAY83D,OAE1BpkD,QAASkmD,GAAU7kD,SAAU6kD,GAAUzlD,SACzC0kD,IACEnlD,QAASw7D,GAAiBp6D,WAAYk7D,GAAyB77D,UAC/DT,QAAS67D,GAAiBz6D,WAAYm7D,GAAyB97D,UAE7DT,QAASm8D,GACT/6D,WAAYo7D,GACZ/7D,OAAQ,IAAIpU,GAAO8vE,IAAY,IAAI7vE,GAAY,IAAIE,OAavDkwE,GAAmC,WAQnC,OAJoB3/E,GAChBy/D,IAAW77D,UAAW87E,KACtB5+E,EAAW,qBAAsBgyE,MAJrC,SAAS6M,EAAkBr0C,MAFO;;;;;;;;AAiCtC,SAASs0C,GAAe/qE,EAAMgrE,EAAgBC,GAU1C,IAAIt2D,EAAQ3U,EAAK2U,MACbu2D,EAAoB,KAARv2D,EAChB,OAAIu2D,IAAcF,GACdhrE,EAAK2U,OAAiB,KAARA,EAAsCs2D,EACpDjrE,EAAKmrE,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4BprE,EAAMkrE,EAAW95E,GAClD,OAAkB,KAAb4O,EAAK2U,SAAuCu2D,GAAalrE,EAAKmrE,WAAa/5E,IAC5E4O,EAAKmrE,UAAY/5E,EAAQ,GAClB,GAOf,SAASi6E,GAAWrrE,EAAM5O,GACtB,OAAO4O,EAAKsrE,MAAMl6E,GAKtB,SAASm6E,GAAcvrE,EAAM5O,GACzB,OAAO4O,EAAKsrE,MAAMl6E,GAKtB,SAASo6E,GAAexrE,EAAM5O,GAC1B,OAAO4O,EAAKsrE,MAAMl6E,GAKtB,SAASq6E,GAAqBzrE,EAAM5O,GAChC,OAAO4O,EAAKsrE,MAAMl6E,GAKtB,SAASs6E,GAAY1rE,EAAM5O,GACvB,OAAO4O,EAAKsrE,MAAMl6E,GAEtB,IAAIu6E,GACA,SAASA,OAQTC,IACAC,oBAAgBj9E,EAChBk9E,oBAAgBl9E,EAChB6oC,wBAAoB7oC,EACpBm9E,yBAAqBn9E,EACrBo9E,uBAAmBp9E,EACnBq9E,sBAAkBr9E,EAClBs9E,2BAAuBt9E,EACvBu9E,oBAAgBv9E,EAChBw9E,wBAAoBx9E,EACpBy9E,wBAAoBz9E,EACpB09E,iBAAa19E,EACb29E,gBAAY39E,EACZ49E,wBAAoB59E,EACpB69E,iBAAa79E,EACb89E,sBAAkB99E,EAClB+9E,oBAAgB/9E,EAChBg+E,wBAAoBh+E;;;;;;;;AAUxB,SAASi+E,GAA4CppE,EAASyF,EAAUiR,EAAW2yD,GAC/E,IAAIx4C,EAAM,8GAAgHprB,EAAW,sBAAwBiR,EAAY,KAMzK,OALI2yD,IACAx4C,GACI,wJAcZ,SAASy4C,EAAez4C,EAAK7wB,GACzB,IAAI8yC,EAAM,IAAIjpD,MAAMgnC,GAEpB,OADA04C,GAAiBz2B,EAAK9yC,GACf8yC,EAdAw2B,CAAez4C,EAAK7wB,GAgB/B,SAASupE,GAAiBz2B,EAAK9yC,GAC3B8yC,EAAIuV,IAAuBroD,EAC3B8yC,EAAIyV,IAAgBvoD,EAAQwpE,SAASz8E,KAAKiT,GAK9C,SAASypE,GAAmB96D,GACxB,OAAO,IAAI9kB,MAAM,wDAA0D8kB;;;;;;;OAU/E,IAAI+6D,GAAO,aACPC,GAAiB,IAAIh5E,IACzB,SAASi5E,GAASv4E,GACd,IAAIxJ,EAAM8hF,GAAe5xE,IAAI1G,GAK7B,OAJKxJ,IACDA,EAAMuJ,GAAUC,GAAS,IAAMs4E,GAAenf,KAC9Cmf,GAAex+D,IAAI9Z,EAAOxJ,IAEvBA,EAWX,IAYIgiF,GAAqB,EAkBzB,SAASC,GAAavtE,EAAMnK,EAAK23E,EAAY7gF,GAEzC,UAAkB,EAAbqT,EAAK2U,QACLjgB,GAFWsL,EAAKytE,UAES53E,EAAIs+B,aAAeq5C,GAAa7gF,IAKlE,SAAS+gF,GAAsB1tE,EAAMnK,EAAK23E,EAAY7gF,GAClD,QAAI4gF,GAAavtE,EAAMnK,EAAK23E,EAAY7gF,KACpCqT,EAAKytE,UAAU53E,EAAIs+B,aAAeq5C,GAAc7gF,GACzC,GAIf,SAASghF,GAAsB3tE,EAAMnK,EAAK23E,EAAY7gF,GAClD,IAAIuc,EAAWlJ,EAAKytE,UAAU53E,EAAIs+B,aAAeq5C,GACjD,GAAkB,EAAbxtE,EAAK2U,QAAsCxX,GAAa+L,EAAUvc,GAAQ,CAC3E,IAAIihF,EAAc/3E,EAAIg4E,SAASL,GAAY59E,KAC3C,MAAMi9E,GAA4CjB,GAASY,mBAAmBxsE,EAAMnK,EAAIqK,WAAY0tE,EAAc,KAAO1kE,EAAU0kE,EAAc,KAAOjhF,EAAmD,IAA9B,EAAbqT,EAAK2U,SAG7K,SAASm5D,GAAwB9tE,GAE7B,IADA,IAAI+tE,EAAW/tE,EACR+tE,GACsB,EAArBA,EAASl4E,IAAIyF,QACbyyE,EAASp5D,OAAS,GAEtBo5D,EAAWA,EAASC,qBAAuBD,EAAS3pE,OAG5D,SAAS6pE,GAAsCjuE,EAAMkuE,GAEjD,IADA,IAAIH,EAAW/tE,EACR+tE,GAAYA,IAAaG,GAC5BH,EAASp5D,OAAS,GAClBo5D,EAAWA,EAASC,qBAAuBD,EAAS3pE,OAG5D,SAAS+pE,GAAcnuE,EAAME,EAAWulB,EAAW2oD,GAC/C,IAMI,OADAN,GAHgC,SADlB9tE,EAAKnK,IAAIy1E,MAAMprE,GACL5E,MACpBiwE,GAAcvrE,EAAME,GAAW2S,cAC/B7S,GAEG4rE,GAASa,YAAYzsE,EAAME,EAAWulB,EAAW2oD,GAE5D,MAAOthF,GAEHkT,EAAKquE,KAAK7Q,aAAalR,YAAYx/D,IAG3C,SAASwhF,GAAsBtuE,GAC3B,OAAIA,EAAKoE,OAEEmnE,GADUvrE,EAAKoE,OACWpE,EAAKuuE,cAAcruE,WAEjD,KAOX,SAASsuE,GAAaxuE,GAElB,OADiBA,EAAKoE,OAEXpE,EAAKuuE,cAAcnqE,OAGnB,KAGf,SAASqqE,GAAWzuE,EAAMnK,GACtB,OAAoB,UAAZA,EAAIyF,OACR,KAAK,EACD,OAAOiwE,GAAcvrE,EAAMnK,EAAIqK,WAAWwuE,cAC9C,KAAK,EACD,OAAOrD,GAAWrrE,EAAMnK,EAAIqK,WAAWyuE,YAGnD,SAASC,GAAqBvjF,EAAQuE,GAClC,OAAOvE,EAASA,EAAS,IAAMuE,EAAOA,EAE1C,SAASi/E,GAAgB7uE,GACrB,QAASA,EAAKoE,WAAwC,MAA3BpE,EAAKuuE,cAAcjzE,OAElD,SAASwzE,GAAe9uE,GACpB,SAASA,EAAKoE,QAAuC,MAA3BpE,EAAKuuE,cAAcjzE,OAEjD,SAASyzE,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,KACAC,EAAkB,EAClBjN,KAaJ,OAZI+M,GACAA,EAAkBt2E,QAAQ,SAAUxI,GAChC,IAAI+2C,EAAKt6C,EAAOuD,EAAI,GAAI4+E,EAAU7nC,EAAG,GAAIkoC,EAAYloC,EAAG,GACjC,iBAAZ6nC,GACPG,EAAeH,GAAWK,EAC1BD,GAAmBL,GAAcC,IAGjC7M,EAAW6M,GAAWK,KAIzBF,eAAgBA,EAAgBhN,WAAYA,EAAYiN,gBAAiBA,GAEtF,SAASE,GAAazgE,EAAM0gE,GACxB,OAAO1gE,EAAK9Z,IAAI,SAAUpI,GACtB,IAAIyD,EACA0E,EACAwG,EAWJ,OAVIrR,MAAM2P,QAAQjN,IACS2O,GAAvBlL,EAAKvD,EAAOF,EAAO,IAAe,GAAImI,EAAQ1E,EAAG,KAGjDkL,EAAQ,EACRxG,EAAQnI,GAERmI,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBy6E,GACvEzlF,OAAO+B,eAAeiJ,EAAOwY,IAAU3gB,MAAO4iF,EAAYx5C,cAAc,KAEnEz6B,MAAOA,EAAOxG,MAAOA,EAAOu4E,SAAUA,GAASv4E,MAGhE,SAAS06E,GAAuBxvE,EAAMyvE,EAAY55E,GAC9C,IAAIwc,EAAexc,EAAIwc,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAa/W,QAC0C,IAAlC,SAArB+W,EAAa/W,QACb+W,EAAaqG,QAAQg3D,uBAClBr9D,EAAaqG,QAAQg3D,sBAAsB13E,gBACvC/O,EAAQ2J,kBAAkB+8E,OAG3BpE,GAAcvrE,EAAMnK,EAAIwc,aAAanS,WAAWwuE,mBAP3D,EAWOe,EAGf,IAAIG,GAAmB,IAAIC,QAC3B,SAASC,GAAkB9mF,GACvB,IAAI2D,EAAQijF,GAAiBp0E,IAAIxS,GAMjC,OALK2D,KACDA,EAAQ3D,EAAQ,WAAc,OAAOmkF,MAC/BnkF,QAAUA,EAChB4mF,GAAiBhhE,IAAI5lB,EAAS2D,IAE3BA,EAOX,SAASojF,GAAqB/vE,EAAMoS,EAAQtO,EAAYwiC,EAAaj7C,GAElD,IAAX+mB,IACAtO,EAAa9D,EAAKwB,SAASsC,WAAW2qE,GAAWzuE,EAAMA,EAAKnK,IAAIm6E,sBAEpEC,GAAwBjwE,EAAMoS,EAAQ,EAAGpS,EAAKnK,IAAIy1E,MAAMtgF,OAAS,EAAG8Y,EAAYwiC,EAAaj7C,GAEjG,SAAS4kF,GAAwBjwE,EAAMoS,EAAQxN,EAAY46B,EAAU17B,EAAYwiC,EAAaj7C,GAC1F,IAAK,IAAIR,EAAI+Z,EAAY/Z,GAAK20C,EAAU30C,IAAK,CACzC,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GACT,GAAhBqlF,EAAQ50E,OACR60E,GAAgBnwE,EAAMkwE,EAAS99D,EAAQtO,EAAYwiC,EAAaj7C,GAGpER,GAAKqlF,EAAQE,YAGrB,SAASC,GAA0BrwE,EAAMswE,EAAgBl+D,EAAQtO,EAAYwiC,EAAaj7C,GAEtF,IADA,IAAIklF,EAAWvwE,EACRuwE,IAAa1B,GAAgB0B,IAChCA,EAAWA,EAASnsE,OAMxB,IAJA,IAAItE,EAAWywE,EAASnsE,OACpBosE,EAAYhC,GAAa+B,GAEzB/wC,EAAWgxC,EAAUtwE,UAAYswE,EAAUJ,WACtCvlF,EAFQ2lF,EAAUtwE,UAAY,EAEdrV,GAAK20C,EAAU30C,IAAK,CACzC,IAAIqlF,EAAUpwE,EAASjK,IAAIy1E,MAAMzgF,GAC7BqlF,EAAQI,iBAAmBA,GAC3BH,GAAgBrwE,EAAUowE,EAAS99D,EAAQtO,EAAYwiC,EAAaj7C,GAGxER,GAAKqlF,EAAQE,WAEjB,IAAKtwE,EAASsE,OAAQ,CAElB,IAAIqsE,EAAiBzwE,EAAKquE,KAAKxsC,iBAAiByuC,GAChD,GAAIG,EACA,IAAS5lF,EAAI,EAAGA,EAAI4lF,EAAezlF,OAAQH,IACvC6lF,GAAqB1wE,EAAMywE,EAAe5lF,GAAIunB,EAAQtO,EAAYwiC,EAAaj7C,IAK/F,SAAS8kF,GAAgBnwE,EAAMkwE,EAAS99D,EAAQtO,EAAYwiC,EAAaj7C,GACrE,GAAoB,EAAhB6kF,EAAQ50E,MACR+0E,GAA0BrwE,EAAMkwE,EAAQS,UAAUv/E,MAAOghB,EAAQtO,EAAYwiC,EAAaj7C,OAEzF,CACD,IAAIulF,EAAKnC,GAAWzuE,EAAMkwE,GAe1B,GAde,IAAX99D,GAAmD,SAAhB89D,EAAQ50E,OACnB,GAAvB40E,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqB1wE,EAAM4wE,EAAIx+D,EAAQtO,EAAYwiC,EAAaj7C,GAEzC,GAAvB6kF,EAAQW,cAERH,GADenF,GAAcvrE,EAAMkwE,EAAQhwE,WAAW2S,cACvB+9D,EAAIx+D,EAAQtO,EAAYwiC,EAAaj7C,IAIxEqlF,GAAqB1wE,EAAM4wE,EAAIx+D,EAAQtO,EAAYwiC,EAAaj7C,GAEhD,SAAhB6kF,EAAQ50E,MAER,IADA,IAAIw1E,EAAgBvF,GAAcvrE,EAAMkwE,EAAQhwE,WAAW6wE,cAAcC,eAChEpgC,EAAI,EAAGA,EAAIkgC,EAAc9lF,OAAQ4lD,IACtCm/B,GAAqBe,EAAclgC,GAAIx+B,EAAQtO,EAAYwiC,EAAaj7C,GAG5D,EAAhB6kF,EAAQ50E,QAAgC40E,EAAQx3D,QAAQ9oB,MACxDqgF,GAAwBjwE,EAAMoS,EAAQ89D,EAAQhwE,UAAY,EAAGgwE,EAAQhwE,UAAYgwE,EAAQE,WAAYtsE,EAAYwiC,EAAaj7C,IAI1I,SAASqlF,GAAqB1wE,EAAMyuE,EAAYr8D,EAAQtO,EAAYwiC,EAAaj7C,GAC7E,IAAImW,EAAWxB,EAAKwB,SACpB,OAAQ4Q,GACJ,KAAK,EACD5Q,EAASqU,YAAY/R,EAAY2qE,GACjC,MACJ,KAAK,EACDjtE,EAASyR,aAAanP,EAAY2qE,EAAYnoC,GAC9C,MACJ,KAAK,EACD9kC,EAAS0R,YAAYpP,EAAY2qE,GACjC,MACJ,KAAK,EACDpjF,EAAO2B,KAAKyhF,IAIxB,IAAIwC,GAAe,kBACnB,SAASC,GAAethF,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAI+2C,EAAQ/2C,EAAK+2C,MAAMsqC,IACvB,OAAQtqC,EAAM,GAAIA,EAAM,IAE5B,OAAQ,GAAI/2C,GAEhB,SAASuhF,GAAiBtD,GAEtB,IADA,IAAIvyE,EAAQ,EACHzQ,EAAI,EAAGA,EAAIgjF,EAAS7iF,OAAQH,IACjCyQ,GAASuyE,EAAShjF,GAAGyQ,MAEzB,OAAOA,EA2CX,SAAS81E,GAAkBnoE,GACvB,OAAY,MAALA,EAAYA,EAAE1Z,WAAa,GAwItC,SAASqzB,GAAc5iB,EAAMyvE,EAAY55E,GACrC,IAGImwC,EAHAqrC,EAAQx7E,EAAI6iB,QACZopB,EAAqB9hC,EAAKquE,KAAKiD,eAC/B9vE,EAAWxB,EAAKwB,SAEpB,GAAIxB,EAAKoE,SAAW09B,EAAoB,CAEhCkE,EADAqrC,EAAMzhF,KACD4R,EAASohB,cAAcyuD,EAAMzhF,KAAMyhF,EAAME,IAGzC/vE,EAASstB,cAAc,IAEhC,IAAI9Y,EAAWw5D,GAAuBxvE,EAAMyvE,EAAY55E,GACpDmgB,GACAxU,EAASqU,YAAYG,EAAUgwB,QAOnCA,EAAKxkC,EAAS8jB,kBAAkBwc,IAFPuvC,EAAM3B,uBAC3B2B,EAAM3B,sBAAsB13E,gBAAkB/O,EAAQ2J,kBAAkB4+E,WAGhF,GAAIH,EAAM3mE,MACN,IAAK,IAAI7f,EAAI,EAAGA,EAAIwmF,EAAM3mE,MAAM1f,OAAQH,IAAK,CACzC,IAAIuF,EAAKvD,EAAOwkF,EAAM3mE,MAAM7f,GAAI,GAChC2W,EAASwjB,aAAaghB,EADmC51C,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO41C,EAEX,SAASyrC,GAAuBzxE,EAAMuwE,EAAU16E,EAAKmwC,GACjD,IAAK,IAAIn7C,EAAI,EAAGA,EAAIgL,EAAIW,QAAQxL,OAAQH,IAAK,CACzC,IAAI6mF,EAAS77E,EAAIW,QAAQ3L,GACrB8mF,EAAqBC,GAA0B5xE,EAAMnK,EAAIqK,UAAW0uE,GAAqB8C,EAAOrmF,OAAQqmF,EAAOjsD,YAC/GosD,EAAeH,EAAOrmF,OACtBymF,EAAe9xE,EACG,cAAlB0xE,EAAOrmF,SACPwmF,EAAe,KACfC,EAAevB,GAEnB,IAAIwB,EAAaD,EAAatwE,SAASqkB,OAAOgsD,GAAgB7rC,EAAI0rC,EAAOjsD,UAAWksD,GACpF3xE,EAAKgyE,YAAYn8E,EAAIo8E,YAAcpnF,GAAKknF,GAGhD,SAASH,GAA0B5xE,EAAM5O,EAAOq0B,GAC5C,OAAO,SAAU2oD,GAAS,OAAOD,GAAcnuE,EAAM5O,EAAOq0B,EAAW2oD,IAmC3E,SAAS8D,GAA2BlyE,EAAMnK,EAAK23E,EAAY7gF,GACvD,IAAK+gF,GAAsB1tE,EAAMnK,EAAK23E,EAAY7gF,GAC9C,OAAO,EAEX,IAAIq/C,EAAUn2C,EAAIg4E,SAASL,GACvB2E,EAAS5G,GAAcvrE,EAAMnK,EAAIqK,WACjCkyE,EAAgBD,EAAOzD,cACvB9+E,EAAOo8C,EAAQp8C,KACnB,OAAwB,GAAhBo8C,EAAQ1wC,OACZ,KAAK,GAmBb,SAAS+2E,EAAoBryE,EAAMgsC,EAASomC,EAAeb,EAAI3hF,EAAMjD,GACjE,IAAI2lF,EAAkBtmC,EAAQsmC,gBAC1BC,EAAcD,EAAkBtyE,EAAKquE,KAAK11D,UAAUoiC,SAASu3B,EAAiB3lF,GAASA,EAC3F4lF,EAA6B,MAAfA,EAAsBA,EAAYhjF,WAAa,KAC7D,IAAIiS,EAAWxB,EAAKwB,SACP,MAAT7U,EACA6U,EAASwjB,aAAaotD,EAAexiF,EAAM2iF,EAAahB,GAGxD/vE,EAASulB,gBAAgBqrD,EAAexiF,EAAM2hF,GA3B1Cc,CAAoBryE,EAAMgsC,EAASomC,EAAepmC,EAAQulC,GAAI3hF,EAAMjD,GACpE,MACJ,KAAK,GA4Bb,SAAS6lF,EAAgBxyE,EAAMoyE,EAAexiF,EAAMjD,GAChD,IAAI6U,EAAWxB,EAAKwB,SAChB7U,EACA6U,EAAS+a,SAAS61D,EAAexiF,GAGjC4R,EAASgb,YAAY41D,EAAexiF,GAjChC4iF,CAAgBxyE,EAAMoyE,EAAexiF,EAAMjD,GAC3C,MACJ,KAAK,GAkCb,SAAS8lF,EAAgBzyE,EAAMgsC,EAASomC,EAAexiF,EAAMjD,GACzD,IAAI4lF,EAAcvyE,EAAKquE,KAAK11D,UAAUoiC,SAAS9xD,EAAQ+wD,gBAAgBmB,MAAOxuD,GAC9E,GAAmB,MAAf4lF,EAAqB,CACrBA,EAAcA,EAAYhjF,WAC1B,IAAImjF,EAAO1mC,EAAQ3gB,OACP,MAARqnD,IACAH,GAA4BG,QAIhCH,EAAc,KAElB,IAAI/wE,EAAWxB,EAAKwB,SACD,MAAf+wE,EACA/wE,EAASqa,SAASu2D,EAAexiF,EAAM2iF,GAGvC/wE,EAAS0a,YAAYk2D,EAAexiF,GAlDhC6iF,CAAgBzyE,EAAMgsC,EAASomC,EAAexiF,EAAMjD,GACpD,MACJ,KAAK,GAmDb,SAASgmF,EAAmB3yE,EAAMgsC,EAASomC,EAAexiF,EAAMjD,GAC5D,IAAI2lF,EAAkBtmC,EAAQsmC,gBAC1BC,EAAcD,EAAkBtyE,EAAKquE,KAAK11D,UAAUoiC,SAASu3B,EAAiB3lF,GAASA,EAC3FqT,EAAKwB,SAASya,YAAYm2D,EAAexiF,EAAM2iF;;;;;;;OAjDvCI,CAJ4B,SAAZ98E,EAAIyF,OACA,GAAhB0wC,EAAQ1wC,MACR62E,EAAOt/D,cACP7S,EACyBgsC,EAASomC,EAAexiF,EAAMjD,GAGnE,OAAO,EAwDX,IAAIimF,GAAkB,IAAI9oF,OACtB+oF,GAAsBxF,GAAS1/D,IAC/BmlE,GAAsBzF,GAAS5/D,IAC/BslE,GAAsB1F,GAASz8D,IAkDnC,SAASoiE,GAAmB5gF,EAAM6gF,EAAQv3E,QAChB,IAAlBA,IAA4BA,EAAgBiS,GAASH,oBACzD,IAAIvS,EAASF,GAAmB3I,GAChC,IACI,GAAmB,EAAf6gF,EAAO33E,MACP,OAAO23E,EAAOn+E,MAKlB,GAHmB,EAAfm+E,EAAO33E,QACPI,EAAgB,MAED,EAAfu3E,EAAO33E,MACP,OAAOlJ,EAAKmvC,QAAQ/lC,IAAIy3E,EAAOn+E,MAAO4G,GAE1C,IAAIw3E,EAAaD,EAAO5F,SACxB,OAAQ6F,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAO3gF,EAEf,IACIuJ,EADAw3E,EAAc/gF,EAAKghF,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmBlhF,EAAKk+D,WAAW6iB,EAAY/hF,OAKnD,YAJyBxC,IAArB0kF,IACAA,EAAmBlhF,EAAKk+D,WAAW6iB,EAAY/hF,OAC3CmiF,GAAwBnhF,EAAM+gF,IAE/BG,IAAqBV,QAAkBhkF,EAAY0kF,EAEzD,IAAK33E,EAAgB1M,EAAiBgkF,EAAOn+E,SAwB1D,SAAS0+E,EAAcn1C,EAAUxoC,GAC7B,OAAyB,MAAlBA,EAAIlH,aAJf,SAAS8kF,EAA0Bp1C,EAAU+2B,GACzC,OAAO/2B,EAAS+0C,KAAKM,QAAQt+E,QAAQggE,IAAU,EAGbqe,CAA0Bp1C,EAAUxoC,EAAIlH,aACnD,SAAnBkH,EAAIlH,YAAyB0vC,EAAS+0C,KAAKO,QA1BkBH,CAAcphF,EAAMuJ,GAAgB,CAC7F,IAAIvK,EAAQgB,EAAKk+D,WAAWtlE,OAQ5B,OAPAoH,EAAKghF,KAAKC,eAAeJ,EAAO5F,WAC5B/xE,MAAO,KACP3O,MAAOgP,EAAc3S,QACrB6lB,QAAUzd,MAAOA,EACjB0D,MAAOm+E,EAAOn+E,OAElB1C,EAAKk+D,WAAWl/D,GAASwhF,GACjBxgF,EAAKk+D,WAAWl/D,GACpBmiF,GAAwBnhF,EAAMA,EAAKghF,KAAKC,eAAeJ,EAAO5F,WAEjE,OAAmB,EAAf4F,EAAO33E,MACLI,EAEJtJ,EAAKmvC,QAAQ/lC,IAAIy3E,EAAOn+E,MAAO4G,GAE1C,QACIX,GAAmBE,IAU3B,SAASs4E,GAAwBl1C,EAAU80C,GACvC,IAAIS,EACJ,OAA4B,UAApBT,EAAY73E,OAChB,KAAK,IACDs4E,EAsBZ,SAASC,EAAax1C,EAAUztC,EAAMie,GAClC,IAAI2hD,EAAM3hD,EAAK7jB,OACf,OAAQwlE,GACJ,KAAK,EACD,OAAO,IAAI5/D,EACf,KAAK,EACD,OAAO,IAAIA,EAAKoiF,GAAmB30C,EAAUxvB,EAAK,KACtD,KAAK,EACD,OAAO,IAAIje,EAAKoiF,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIje,EAAKoiF,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,KACpI,QAEI,IADA,IAAIilE,EAAY,IAAI7pF,MAAMumE,GACjB3lE,EAAI,EAAGA,EAAI2lE,EAAK3lE,IACrBipF,EAAUjpF,GAAKmoF,GAAmB30C,EAAUxvB,EAAKhkB,IAErD,OAAO,IAAK+F,EAAKJ,KAAKtF,MAAM0F,EAAM1D,QAAU,GAAS4mF,MAtCxCD,CAAax1C,EAAU80C,EAAYxmF,MAAOwmF,EAAYtkE,MACnE,MACJ,KAAK,KACD+kE,EAsCZ,SAASG,EAAa11C,EAAUr1C,EAAS6lB,GACrC,IAAI2hD,EAAM3hD,EAAK7jB,OACf,OAAQwlE,GACJ,KAAK,EACD,OAAOxnE,IACX,KAAK,EACD,OAAOA,EAAQgqF,GAAmB30C,EAAUxvB,EAAK,KACrD,KAAK,EACD,OAAO7lB,EAAQgqF,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,KAC5F,KAAK,EACD,OAAO7lB,EAAQgqF,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,IAAKmkE,GAAmB30C,EAAUxvB,EAAK,KACnI,QAEI,IADA,IAAIilE,EAAY7pF,MAAMumE,GACb3lE,EAAI,EAAGA,EAAI2lE,EAAK3lE,IACrBipF,EAAUjpF,GAAKmoF,GAAmB30C,EAAUxvB,EAAKhkB,IAErD,OAAO7B,EAAQkC,WAAM,EAAQgC,EAAS4mF,KAtDzBC,CAAa11C,EAAU80C,EAAYxmF,MAAOwmF,EAAYtkE,MACnE,MACJ,KAAK,KACD+kE,EAAaZ,GAAmB30C,EAAU80C,EAAYtkE,KAAK,IAC3D,MACJ,KAAK,IACD+kE,EAAaT,EAAYxmF,MAWjC,OAJIinF,IAAehB,IAAiC,MAAdgB,GAA4C,iBAAfA,GACzC,OAApBT,EAAY73E,OAAqE,mBAA3Bs4E,EAAWr8E,cACnE47E,EAAY73E,OAAS,aAEH1M,IAAfglF,EAA2BhB,GAAkBgB,EAgHxD,SAASI,GAAmBC,EAAa1vD,GACrC,IAAIusD,EAAgBmD,EAAYlD,cAAcC,eAI9C,IAHiB,MAAbzsD,GAAqBA,GAAausD,EAAc9lF,UAChDu5B,EAAYusD,EAAc9lF,OAAS,GAEnCu5B,EAAY,EACZ,OAAO,KAEX,IAAIvkB,EAAO8wE,EAAcvsD,GAMzB,OALAvkB,EAAKguE,oBAAsB,KAC3BkG,GAAgBpD,EAAevsD,GAE/BqnD,GAASgB,mBAAmB5sE,GAC5Bm0E,GAAiBn0E,GACVA,EA+BX,SAASo0E,GAAyBH,EAAaI,EAAUr0E,GACrD,IAAIs0E,EAAiBD,EAAW5F,GAAW4F,EAAUA,EAASx+E,IAAIm6E,oBAC9DiE,EAAYvF,cAKhBqB,GAAqB/vE,EAAM,EAJVA,EAAKwB,SAASsC,WAAWwwE,GACxBt0E,EAAKwB,SAAS8kC,YAAYguC,QAG8B1lF,GAE9E,SAASulF,GAAiBn0E,GACtB+vE,GAAqB/vE,EAAM,EAAqB,KAAM,UAAMpR,GAEhE,SAAS2lF,GAAW90E,EAAKrO,EAAOzE,GAExByE,GAASqO,EAAIzU,OACbyU,EAAIzS,KAAKL,GAGT8S,EAAImU,OAAOxiB,EAAO,EAAGzE,GAG7B,SAASunF,GAAgBz0E,EAAKrO,GAEtBA,GAASqO,EAAIzU,OAAS,EACtByU,EAAI8rC,MAGJ9rC,EAAImU,OAAOxiB,EAAO;;;;;;;OAW1B,IAAIojF,GAAgB,IAAI1qF,OAMxB,SAAS2qF,GAAkClV,GACvC,OAAOA,EAAiBmV,eAE5B,IAAIC,GAAmC,SAAUh+C,GAE7C,SAASg+C,EAAkBxiF,EAAUuvC,EAAegzC,EAAgBE,EAASC,EAAUjzC,GACnF,IAAIhL,EAGJD,EAAO1rC,KAAKvB,OAASA,KAOrB,OANAktC,EAAMzkC,SAAWA,EACjBykC,EAAM8K,cAAgBA,EACtB9K,EAAMg+C,QAAUA,EAChBh+C,EAAMi+C,SAAWA,EACjBj+C,EAAMgL,mBAAqBA,EAC3BhL,EAAM89C,eAAiBA,EAChB99C,EA2CX,OAvDAxsC,EAAUuqF,EAAmBh+C,GAc7B7sC,OAAO+B,eAAe8oF,EAAkBpqF,UAAW,UAC/CiR,IAAK,WACD,IAAIs5E,KACAv+E,EAAS7M,KAAKkrF,QAClB,IAAK,IAAI9jF,KAAYyF,EAEjBu+E,EAAU9nF,MAAO8D,SAAUA,EAAUmyC,aADlB1sC,EAAOzF,KAG9B,OAAOgkF,GAEXh/C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe8oF,EAAkBpqF,UAAW,WAC/CiR,IAAK,WACD,IAAIu5E,KACJ,IAAK,IAAIjkF,KAAYpH,KAAKmrF,SAEtBE,EAAW/nF,MAAO8D,SAAUA,EAAUmyC,aADnBv5C,KAAKmrF,SAAS/jF,KAGrC,OAAOikF,GAEXj/C,YAAY,EACZC,cAAc,IAKlB4+C,EAAkBpqF,UAAUC,OAAS,SAAUwQ,EAAU6mC,EAAkBC,EAAoBzD,GAC3F,IAAKA,EACD,MAAM,IAAI/wC,MAAM,+BAEpB,IAAI0nF,EAAUlF,GAAkBpmF,KAAKgrF,gBACjCO,EAAqBD,EAAQ1J,MAAM,GAAG5yD,QAAQw8D,kBAAkBh1E,UAChEF,EAAO4rE,GAASE,eAAe9wE,EAAU6mC,MAAwBC,EAAoBkzC,EAAS32C,EAAUm2C,IACxGxhF,EAAYw4E,GAAexrE,EAAMi1E,GAAoBryE,SAIzD,OAHIk/B,GACA9hC,EAAKwB,SAASwjB,aAAaumD,GAAcvrE,EAAM,GAAG0uE,cAAe,aAAc1jB,GAAQC,MAEpF,IAAIkqB,GAAcn1E,EAAM,IAAIo1E,GAASp1E,GAAOhN,IAEhD2hF,EAxD2B,CAyDpC5zC,IACEo0C,GAA+B,SAAUx+C,GAEzC,SAASw+C,EAAc5/C,EAAO8/C,EAAUC,GACpC,IAAI1+C,EAAQD,EAAO1rC,KAAKvB,OAASA,KAQjC,OAPAktC,EAAMrB,MAAQA,EACdqB,EAAMy+C,SAAWA,EACjBz+C,EAAM0+C,WAAaA,EACnB1+C,EAAM2+C,OAAS3+C,EAAMrB,MAAM1/B,IAAIy1E,MAAM,GACrC10C,EAAM92B,SAAWu1E,EACjBz+C,EAAMsN,kBAAoBmxC,EAC1Bz+C,EAAMh0B,SAAW0yE,EACV1+C,EAqBX,OA/BAxsC,EAAU+qF,EAAex+C,GAYzB7sC,OAAO+B,eAAespF,EAAc5qF,UAAW,YAC3CiR,IAAK,WACD,OAAO,IAAIumC,GAAWwpC,GAAc7hF,KAAK6rC,MAAO7rC,KAAK6rF,OAAOr1E,WAAWwuE,gBAE3E54C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAespF,EAAc5qF,UAAW,YAC3CiR,IAAK,WAAc,OAAO,IAAIg6E,GAAU9rF,KAAK6rC,MAAO7rC,KAAK6rF,SACzDz/C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAespF,EAAc5qF,UAAW,iBAC3CiR,IAAK,WAAc,OAAO9R,KAAK4rF,WAAWhrF,aAC1CwrC,YAAY,EACZC,cAAc,IAElBo/C,EAAc5qF,UAAU2qB,QAAU,WAAcxrB,KAAK2rF,SAASngE,WAC9DigE,EAAc5qF,UAAU+M,UAAY,SAAU2+B,GAAYvsC,KAAK2rF,SAAS/9E,UAAU2+B,IAC3Ek/C,EAhCuB,CAiChCr0C,IACF,SAAS20C,GAAwBz1E,EAAMqxE,EAAOc,GAC1C,OAAO,IAAIuD,GAAkB11E,EAAMqxE,EAAOc,GAE9C,IAAIuD,GAAmC,WACnC,SAASA,EAAkBngD,EAAOggD,EAAQI,GACtCjsF,KAAK6rC,MAAQA,EACb7rC,KAAK6rF,OAASA,EACd7rF,KAAKisF,MAAQA,EAIbjsF,KAAKsnF,kBA4FT,OA1FAlnF,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,WAC/CiR,IAAK,WAAc,OAAO,IAAIumC,GAAWr4C,KAAKisF,MAAMjH,gBACpD54C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,YAC/CiR,IAAK,WAAc,OAAO,IAAIg6E,GAAU9rF,KAAK6rC,MAAO7rC,KAAK6rF,SACzDz/C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,kBAE/CiR,IAAK,WAGD,IAFA,IAAIwE,EAAOtW,KAAK6rC,MACZ87C,EAAQ3nF,KAAK6rF,OAAOnxE,QAChBitE,GAASrxE,GACbqxE,EAAQ7C,GAAaxuE,GACrBA,EAAOA,EAAKoE,OAEhB,OAAOpE,EAAO,IAAIw1E,GAAUx1E,EAAMqxE,GAAS,IAAImE,GAAU9rF,KAAK6rC,MAAO,OAEzEO,YAAY,EACZC,cAAc,IAElB2/C,EAAkBnrF,UAAUszC,MAAQ,WAEhC,IADA,IACShzC,EADCnB,KAAKsnF,eAAehmF,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAImV,EAAOg0E,GAAmBtqF,KAAKisF,MAAO9qF,GAC1C+gF,GAASU,YAAYtsE,KAG7B01E,EAAkBnrF,UAAUiR,IAAM,SAAUpK,GACxC,IAAI4O,EAAOtW,KAAKsnF,eAAe5/E,GAC/B,GAAI4O,EAAM,CACN,IAAIwZ,EAAM,IAAI47D,GAASp1E,GAEvB,OADAwZ,EAAI6c,yBAAyB3sC,MACtB8vB,EAEX,OAAO,MAEX1vB,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,UAC/CiR,IAAK,WAAc,OAAO9R,KAAKsnF,eAAehmF,QAC9C8qC,YAAY,EACZC,cAAc,IAElB2/C,EAAkBnrF,UAAUktC,mBAAqB,SAAUm+C,EAAanyE,EAASrS,GAC7E,IAAIymC,EAAU+9C,EAAYn+C,mBAAmBh0B,OAE7C,OADA/Z,KAAKmsF,OAAOh+C,EAASzmC,GACdymC,GAEX69C,EAAkBnrF,UAAUurF,gBAAkB,SAAUvW,EAAkBnuE,EAAO4J,EAAU6mC,EAAkBk0C,GACzG,IAAIC,EAAkBh7E,GAAYtR,KAAKiqD,eAClCoiC,GAAiBxW,aAA4B59B,KAC9Co0C,EAAcC,EAAgBx6E,IAAIoV,KAEtC,IAAIkzB,EAAey7B,EAAiB/0E,OAAOwrF,EAAiBn0C,OAAkBjzC,EAAWmnF,GAEzF,OADArsF,KAAKmsF,OAAO/xC,EAAahkC,SAAU1O,GAC5B0yC,GAEX4xC,EAAkBnrF,UAAUsrF,OAAS,SAAUh+C,EAASzmC,GACpD,GAAIymC,EAAQsF,UACR,MAAM,IAAI7vC,MAAM,sDAEpB,IAAI2oF,EAAWp+C;;;;;;;;AAIf,OAvTR,SAASq+C,EAAmB30E,EAAY0yE,EAAa1vD,EAAWvkB,GAC5D,IAAI8wE,EAAgBmD,EAAYlD,cAAcC,eAC5B,OAAdzsD,QAAoC31B,IAAd21B,IACtBA,EAAYusD,EAAc9lF,QAE9BgV,EAAKguE,oBAAsBzsE,EAC3BgzE,GAAWzD,EAAevsD,EAAWvkB,GAMzC,SAASm2E,EAAoBC,EAAep2E,GACxC,IAAIq2E,EAAiB/H,GAAsBtuE,GAC3C,GAAKq2E,GAAkBA,IAAmBD,KACzB,GAAbp2E,EAAK2U,OADT,CAWA3U,EAAK2U,OAAS,GACd,IAAI2hE,EAAiBD,EAAengF,SAASqgF,gBACxCD,IACDA,EAAiBD,EAAengF,SAASqgF,oBAE7CD,EAAetpF,KAAKgT,GAKxB,SAASw2E,EAA4BxB,EAAS9E,GAC1C,KAAoB,EAAhBA,EAAQ50E,OAAZ,CAGA05E,EAAQtpE,WAAa,EACrBwkE,EAAQ50E,OAAS,EAEjB,IADA,IAAIizE,EAAgB2B,EAAQ9rE,OACrBmqE,GACHA,EAAckI,YAAc,EAC5BlI,EAAgBA,EAAcnqE,QAXlCoyE,CAA4Bx2E,EAAKoE,OAAOvO,IAAKmK,EAAKuuE,gBA1BlD4H,CAAoBlC,EAAaj0E,GACjC4rE,GAASgB,mBAAmB5sE,GAE5Bo0E,GAAyBH,EADV1vD,EAAY,EAAIusD,EAAcvsD,EAAY,GAAK,KACdvkB,GA2S5Ck2E,CAAmBxsF,KAAK6rC,MAAO7rC,KAAKisF,MAAOvkF,EAD5B6kF,EAAS1gD,OAExB0gD,EAAS5/C,yBAAyB3sC,MAC3BmuC,GAEX69C,EAAkBnrF,UAAUmsF,KAAO,SAAU7+C,EAASktC,GAClD,GAAIltC,EAAQsF,UACR,MAAM,IAAI7vC,MAAM,oDAEpB,IAAI63E,EAAgBz7E,KAAKsnF,eAAe57E,QAAQyiC,EAAQtC,OAExD,OAnPR,SAASohD,EAAiB1C,EAAa2C,EAAcC,GACjD,IAAI/F,EAAgBmD,EAAYlD,cAAcC,eAC1ChxE,EAAO8wE,EAAc8F,GACzB1C,GAAgBpD,EAAe8F,GACX,MAAhBC,IACAA,EAAe/F,EAAc9lF,QAEjCupF,GAAWzD,EAAe+F,EAAc72E,GAGxC4rE,GAASgB,mBAAmB5sE,GAC5Bm0E,GAAiBn0E,GAEjBo0E,GAAyBH,EADV4C,EAAe,EAAI/F,EAAc+F,EAAe,GAAK,KACpB72E,GAqO5C22E,CAAiBjtF,KAAKisF,MAAOxQ,EAAeJ,GACrCltC,GAEX69C,EAAkBnrF,UAAU6K,QAAU,SAAUyiC,GAC5C,OAAOnuC,KAAKsnF,eAAe57E,QAAQyiC,EAAQtC,QAE/CmgD,EAAkBnrF,UAAUkyB,OAAS,SAAUrrB,GAC3C,IAAI6Q,EAAW+xE,GAAmBtqF,KAAKisF,MAAOvkF,GAC1C6Q,GACA2pE,GAASU,YAAYrqE,IAG7ByzE,EAAkBnrF,UAAUyrC,OAAS,SAAU5kC,GAC3C,IAAI4O,EAAOg0E,GAAmBtqF,KAAKisF,MAAOvkF,GAC1C,OAAO4O,EAAO,IAAIo1E,GAASp1E,GAAQ,MAEhC01E,EApG2B,GAsGtC,SAASoB,GAAwB92E,GAC7B,OAAO,IAAIo1E,GAASp1E,GAExB,IAAIo1E,GAA0B,WAC1B,SAASA,EAAS7/C,GACd7rC,KAAK6rC,MAAQA,EACb7rC,KAAKisC,kBAAoB,KACzBjsC,KAAKgsC,QAAU,KAmEnB,OAjEA5rC,OAAO+B,eAAeupF,EAAS7qF,UAAW,aACtCiR,IAAK,WAAc,OAv+B3B,SAASu7E,EAAgB/2E,GACrB,IAAIg3E,KAEJ,OADAjH,GAAqB/vE,EAAM,OAAiBpR,OAAWA,EAAWooF,GAC3DA,EAo+BuBD,CAAgBrtF,KAAK6rC,QAC/CO,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeupF,EAAS7qF,UAAW,WACtCiR,IAAK,WAAc,OAAO9R,KAAK6rC,MAAM9xB,SACrCqyB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeupF,EAAS7qF,UAAW,aACtCiR,IAAK,WAAc,OAAoD,IAAzB,IAAnB9R,KAAK6rC,MAAM5gB,QACtCmhB,YAAY,EACZC,cAAc,IAElBq/C,EAAS7qF,UAAU2rC,aAAe,WAAc43C,GAAwBpkF,KAAK6rC,QAC7E6/C,EAAS7qF,UAAUyrC,OAAS,WAActsC,KAAK6rC,MAAM5gB,QAAS,GAC9DygE,EAAS7qF,UAAUgnC,cAAgB,WAC/B,IAAI0lD,EAAKvtF,KAAK6rC,MAAM84C,KAAK5sE,gBACrBw1E,EAAGn1D,OACHm1D,EAAGn1D,QAEP,IACI8pD,GAASQ,mBAAmB1iF,KAAK6rC,OAErC,QACQ0hD,EAAG7xE,KACH6xE,EAAG7xE,QAIfgwE,EAAS7qF,UAAU6rC,eAAiB,WAAcw1C,GAASS,mBAAmB3iF,KAAK6rC,QACnF6/C,EAAS7qF,UAAU4rC,SAAW,WAAczsC,KAAK6rC,MAAM5gB,OAAS,GAChEygE,EAAS7qF,UAAU+M,UAAY,SAAU2+B,GAChCvsC,KAAK6rC,MAAMy8C,cACZtoF,KAAK6rC,MAAMy8C,gBAEftoF,KAAK6rC,MAAMy8C,YAAYhlF,KAAKipC,IAEhCm/C,EAAS7qF,UAAU2qB,QAAU,WACrBxrB,KAAKgsC,QACLhsC,KAAKgsC,QAAQ7hB,WAAWnqB,MAEnBA,KAAKisC,mBACVjsC,KAAKisC,kBAAkBK,OAAOtsC,KAAKisC,kBAAkBvgC,QAAQ1L,OAEjEkiF,GAASU,YAAY5iF,KAAK6rC,QAE9B6/C,EAAS7qF,UAAUgsC,iBAAmB,WAClC7sC,KAAKgsC,QAAU,KACfy+C,GAAiBzqF,KAAK6rC,OACtBq2C,GAASgB,mBAAmBljF,KAAK6rC,QAErC6/C,EAAS7qF,UAAUisC,eAAiB,SAAUC,GAC1C,GAAI/sC,KAAKisC,kBACL,MAAM,IAAIroC,MAAM,qDAEpB5D,KAAKgsC,QAAUe,GAEnB2+C,EAAS7qF,UAAU8rC,yBAA2B,SAAUC,GACpD,GAAI5sC,KAAKgsC,QACL,MAAM,IAAIpoC,MAAM,iEAEpB5D,KAAKisC,kBAAoBW,GAEtB8+C,EAvEkB,GAyE7B,SAAS8B,GAAmBl3E,EAAMnK,GAC9B,OAAO,IAAIshC,GAAan3B,EAAMnK,GAElC,IAAIshC,GAA8B,SAAUR,GAExC,SAASQ,EAAaggD,EAAa/D,GAC/B,IAAIx8C,EAAQD,EAAO1rC,KAAKvB,OAASA,KAGjC,OAFAktC,EAAMugD,YAAcA,EACpBvgD,EAAMw8C,KAAOA,EACNx8C,EAYX,OAjBAxsC,EAAU+sC,EAAcR,GAOxBQ,EAAa5sC,UAAUktC,mBAAqB,SAAUh0B,GAClD,OAAO,IAAI2xE,GAASxJ,GAASn0C,mBAAmB/tC,KAAKytF,YAAaztF,KAAK0pF,KAAM1pF,KAAK0pF,KAAK16D,QAAQxiB,SAAUuN,KAE7G3Z,OAAO+B,eAAesrC,EAAa5sC,UAAW,cAC1CiR,IAAK,WACD,OAAO,IAAIumC,GAAWwpC,GAAc7hF,KAAKytF,YAAaztF,KAAK0pF,KAAKlzE,WAAWwuE,gBAE/E54C,YAAY,EACZC,cAAc,IAEXoB,EAlBsB,CAmB/Byf,IACF,SAASwgC,GAAiBp3E,EAAMqxE,GAC5B,OAAO,IAAImE,GAAUx1E,EAAMqxE,GAE/B,IAAImE,GAA2B,WAC3B,SAASA,EAAUx1E,EAAMqxE,GACrB3nF,KAAKsW,KAAOA,EACZtW,KAAK2nF,MAAQA,EAOjB,OALAmE,EAAUjrF,UAAUiR,IAAM,SAAU1G,EAAO4G,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBiS,GAASH,oBAElDo+D,GAASW,WAAW7iF,KAAKsW,KAAMtW,KAAK2nF,QADhB3nF,KAAK2nF,OAA8D,IAAlC,SAAnB3nF,KAAK2nF,MAAM/1E,QACsBA,MAAO,EAAcxG,MAAOA,EAAOu4E,SAAUA,GAASv4E,IAAU4G,IAEvI85E,EAVmB,GA0B9B,SAAS6B,GAAiBr3E,GACtB,OAAO,IAAIs3E,GAAgBt3E,EAAKwB,UAEpC,IAAI81E,GAAiC,WACjC,SAASA,EAAgBhgB,GACrB5tE,KAAK4tE,SAAWA,EA4FpB,OA1FAggB,EAAgB/sF,UAAU+6B,kBAAoB,SAAUgsD,GACpD,OAAO5nF,KAAK4tE,SAAShyC,kBAAkBgsD,IAE3CgG,EAAgB/sF,UAAUq4B,cAAgB,SAAUxe,EAAQmzE,GACxD,IAAInnF,EAAKvD,EAAOqkF,GAAeqG,GAAmB,GAC9CvxC,EAAKt8C,KAAK4tE,SAAS10C,cADkDxyB,EAAG,GAAjBA,EAAG,IAK9D,OAHIgU,GACA1a,KAAK4tE,SAASzhD,YAAYzR,EAAQ4hC,GAE/BA,GAEXsxC,EAAgB/sF,UAAUitF,eAAiB,SAAUnmE,GAAe,OAAOA,GAC3EimE,EAAgB/sF,UAAUktF,qBAAuB,SAAUC,GACvD,IAAI7oD,EAAUnlC,KAAK4tE,SAASxoC,cAAc,IAI1C,OAHI4oD,GACAhuF,KAAK4tE,SAASzhD,YAAY6hE,EAAe7oD,GAEtCA,GAEXyoD,EAAgB/sF,UAAU8oB,WAAa,SAAUqkE,EAAe/qF,GAC5D,IAAIof,EAAOriB,KAAK4tE,SAASjkD,WAAW1mB,GAIpC,OAHI+qF,GACAhuF,KAAK4tE,SAASzhD,YAAY6hE,EAAe3rE,GAEtCA,GAEXurE,EAAgB/sF,UAAUotF,aAAe,SAAUD,EAAepM,GAC9D,IAAK,IAAIzgF,EAAI,EAAGA,EAAIygF,EAAMtgF,OAAQH,IAC9BnB,KAAK4tE,SAASzhD,YAAY6hE,EAAepM,EAAMzgF,KAGvDysF,EAAgB/sF,UAAUqtF,gBAAkB,SAAU7rE,EAAM8rE,GAGxD,IAFA,IAAIH,EAAgBhuF,KAAK4tE,SAASxzD,WAAWiI,GACzCu6B,EAAc58C,KAAK4tE,SAAShxB,YAAYv6B,GACnClhB,EAAI,EAAGA,EAAIgtF,EAAc7sF,OAAQH,IACtCnB,KAAK4tE,SAASrkD,aAAaykE,EAAeG,EAAchtF,GAAIy7C,IAGpEgxC,EAAgB/sF,UAAUspB,WAAa,SAAUgkE,GAC7C,IAAK,IAAIhtF,EAAI,EAAGA,EAAIgtF,EAAc7sF,OAAQH,IAAK,CAC3C,IAAIkhB,EAAO8rE,EAAchtF,GACrB6sF,EAAgBhuF,KAAK4tE,SAASxzD,WAAWiI,GAC7CriB,KAAK4tE,SAASpkD,YAAYwkE,EAAe3rE,KAGjDurE,EAAgB/sF,UAAU+hF,YAAc,SAAUj7D,EAAaymE,GAC3D,IAAK,IAAIjtF,EAAI,EAAGA,EAAIitF,EAAa9sF,OAAQH,IACrCnB,KAAK4tE,SAASnkD,YAAY2kE,EAAajtF,KAG/CysF,EAAgB/sF,UAAUs7B,OAAS,SAAU6oD,EAAe9+E,EAAMqmC,GAC9D,OAAOvsC,KAAK4tE,SAASzxC,OAAO6oD,EAAe9+E,EAAMqmC,IAErDqhD,EAAgB/sF,UAAUwtF,aAAe,SAAU1sF,EAAQuE,EAAMqmC,GAC7D,OAAOvsC,KAAK4tE,SAASzxC,OAAOx6B,EAAQuE,EAAMqmC,IAE9CqhD,EAAgB/sF,UAAUooF,mBAAqB,SAAUjE,EAAelmB,EAAcwvB,GAClFtuF,KAAK4tE,SAASr7C,YAAYyyD,EAAelmB,EAAcwvB,IAE3DV,EAAgB/sF,UAAU8nF,oBAAsB,SAAU3D,EAAe6I,EAAkBU,GACvF,IAAI7nF,EAAKvD,EAAOqkF,GAAeqG,GAAmB,GAAIhG,EAAKnhF,EAAG,GAAIR,EAAOQ,EAAG,GACtD,MAAlB6nF,EACAvuF,KAAK4tE,SAAStyC,aAAa0pD,EAAe9+E,EAAMqoF,EAAgB1G,GAGhE7nF,KAAK4tE,SAASvwC,gBAAgB2nD,EAAe9+E,EAAM2hF,IAG3D+F,EAAgB/sF,UAAU2tF,oBAAsB,SAAUxJ,EAAelmB,EAAcwvB,KACvFV,EAAgB/sF,UAAUioF,gBAAkB,SAAU9D,EAAeryD,EAAW87D,GACxEA,EACAzuF,KAAK4tE,SAAS/6C,SAASmyD,EAAeryD,GAGtC3yB,KAAK4tE,SAAS96C,YAAYkyD,EAAeryD,IAGjDi7D,EAAgB/sF,UAAUkoF,gBAAkB,SAAU/D,EAAe0J,EAAWC,GAC1D,MAAdA,EACA3uF,KAAK4tE,SAASz7C,SAAS6yD,EAAe0J,EAAWC,GAGjD3uF,KAAK4tE,SAASp7C,YAAYwyD,EAAe0J,IAGjDd,EAAgB/sF,UAAU+tF,oBAAsB,SAAU5J,EAAe6J,EAAYloF,GACjFq+E,EAAc6J,GAAYrtF,MAAMwjF,EAAer+E,IAEnDinF,EAAgB/sF,UAAUiuF,QAAU,SAAUpG,EAAe/+E,GAAQ3J,KAAK4tE,SAASn8C,SAASi3D,EAAe/+E,IAC3GikF,EAAgB/sF,UAAUkuF,QAAU,WAAc,MAAM,IAAInrF,MAAM,6CAC3DgqF,EA9FyB,GAgGpC,SAAStL,GAAkBh4B,EAAY5vC,EAAQs0E,EAAqB7iF,GAChE,OAAO,IAAI8iF,GAAa3kC,EAAY5vC,EAAQs0E,EAAqB7iF,GAErE,IAAI8iF,GAA8B,WAC9B,SAASA,EAAaC,EAAar3C,EAASqS,EAAsBw/B,GAC9D1pF,KAAKkvF,YAAcA,EACnBlvF,KAAK63C,QAAUA,EACf73C,KAAKkqD,qBAAuBA,EAC5BlqD,KAAK0pF,KAAOA,EACZ1pF,KAAKmzE,qBACLnzE,KAAKozE,YAAa,EAClBpzE,KAAKsR,SAAWtR,KA9tBxB,SAASmvF,EAAazmF,GAGlB,IAFA,IAAIyD,EAAMzD,EAAKghF,KACXrkF,EAAYqD,EAAKk+D,WAAa,IAAIrmE,MAAM4L,EAAI9G,UAAU/D,QACjDH,EAAI,EAAGA,EAAIgL,EAAI9G,UAAU/D,OAAQH,IAAK,CAC3C,IAAIiuF,EAAUjjF,EAAI9G,UAAUlE,GACN,KAAhBiuF,EAAQx9E,YAEW1M,IAAjBG,EAAUlE,KACVkE,EAAUlE,GAAK0oF,GAAwBnhF,EAAM0mF,KAutBrDD,CAAanvF,MAiCjB,OA/BAivF,EAAapuF,UAAUiR,IAAM,SAAU1G,EAAO4G,EAAeq9E,QACnC,IAAlBr9E,IAA4BA,EAAgBiS,GAASH,yBACrC,IAAhBurE,IAA0BA,EAAc,GAC5C,IAAIz9E,EAAQ,EAOZ,OANkB,EAAdy9E,EACAz9E,GAAS,EAEU,EAAdy9E,IACLz9E,GAAS,GAEN03E,GAAmBtpF,MAAQoL,MAAOA,EAAOu4E,SAAUA,GAASv4E,GAAQwG,MAAOA,GAASI,IAE/F5R,OAAO+B,eAAe8sF,EAAapuF,UAAW,YAC1CiR,IAAK,WAAc,OAAO9R,KAAK8R,IAAI9R,KAAKkvF,cACxC9iD,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe8sF,EAAapuF,UAAW,4BAC1CiR,IAAK,WAAc,OAAO9R,KAAK8R,IAAI6lC,KACnCvL,YAAY,EACZC,cAAc,IAElB4iD,EAAapuF,UAAU2qB,QAAU,WAC7B,GAAIxrB,KAAKozE,WACL,MAAM,IAAIxvE,MAAM,iBAAmBuH,GAAUnL,KAAKkZ,SAAStY,aAAe,gCAE9EZ,KAAKozE,YAAa,EApnB1B,SAASkc,EAAsB36C,EAAU46C,GAGrC,IAFA,IAAIpjF,EAAMwoC,EAAS+0C,KACfj2C,EAAY,IAAIrqC,IACXjI,EAAI,EAAGA,EAAIgL,EAAI9G,UAAU/D,OAAQH,IAEtC,GAAoB,OADNgL,EAAI9G,UAAUlE,GAChByQ,MAAgC,CACxC,IAAIsH,EAAWy7B,EAASiyB,WAAWzlE,GACnC,GAAI+X,GAAYA,IAAagwE,GAAiB,CAC1C,IAAIt7E,EAAYsL,EAASrL,YACA,mBAAdD,GAA6B6lC,EAAUO,IAAI96B,KAClDtL,EAAUpM,MAAM0X,GAChBu6B,EAAU7gB,IAAI1Z,MA0mB1Bo2E,CAAsBtvF,MACtBA,KAAKmzE,kBAAkBjkE,QAAQ,SAAU4sB,GAAY,OAAOA,OAEhEmzD,EAAapuF,UAAU+M,UAAY,SAAU2+B,GAAYvsC,KAAKmzE,kBAAkB7vE,KAAKipC,IAC9E0iD,EA1CsB,GAoD7BO,GAAqB7L,GAAS/qC,IAC9B62C,GAAoB9L,GAAS5qC,IAC7B22C,GAAqB/L,GAAStrC,IAC9Bs3C,GAA2BhM,GAAS/L,IACpCgY,GAAsBjM,GAASz2B,IAC/B2iC,GAA4BlM,GAAS7L,IACrCgY,GAAwBnM,GAAS1/D,IACjC8rE,GAAwBpM,GAAS5/D;;;;;;;OA+BrC,SAAS2lE,GAAKsG,EAAYp+E,EAAO4zE,EAAmBkB,EAAYt7E,EAAOnI,EAAOkiB,EAAMg/D,EAAUr3E,GAC1F,IAAIpG,EAAK6+E,GAAuBC,GAAoBC,EAAiB/+E,EAAG++E,eAAgBhN,EAAa/xE,EAAG+xE,WAAYiN,EAAkBh/E,EAAGg/E,gBACpI54E,IACDA,MAECq3E,IACDA,MAKJlhF,EAAQ0gB,GAAkB1gB,GAC1B,IAAIgtF,EAAUrK,GAAazgE,EAAMha,GAAUC,IAC3C,OAEIoL,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEdyH,WAAYA,EACZp+E,MAAOA,EACPm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAG1K,eAAgBA,EAAgBC,gBAAiBA,EAAiBjN,WAAYA,EACtGmO,gBAAiB,EAAGF,WAAYA,EAAYvC,SAAUA,EACtDgD,aAAcM,GAAiBtD,GAAWr3E,QAASA,EACnDkiB,QAAS,KACT1J,UAAYla,MAAOA,EAAOnI,MAAOA,EAAOkiB,KAAM8qE,GAC9CtmF,KAAM,KACNykD,MAAO,KACP64B,UAAW,MAGnB,SAASmJ,GAAuB95E,EAAMnK,GAClC,OAAOkkF,GAA0B/5E,EAAMnK,GAE3C,SAASmkF,GAAmBh6E,EAAMnK,GAG9B,IADA,IAAI06E,EAAWvwE,EACRuwE,EAASnsE,SAAWyqE,GAAgB0B,IACvCA,EAAWA,EAASnsE,OAKxB,OAAO61E,GAAY1J,EAASnsE,OAAQoqE,GAAa+B,IAFtB,EAEuD16E,EAAImZ,SAASriB,MAAOkJ,EAAImZ,SAASH,MAEvH,SAASqrE,GAAwBl6E,EAAMnK,GAEnC,IAEI+M,EAAWq3E,GAAYj6E,EAAMnK,EAAIuO,QAFG,MAAZvO,EAAIyF,OAAiC,EAEEzF,EAAImZ,SAASriB,MAAOkJ,EAAImZ,SAASH,MACpG,GAAIhZ,EAAIW,QAAQxL,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAIgL,EAAIW,QAAQxL,OAAQH,IAAK,CACzC,IAAI6mF,EAAS77E,EAAIW,QAAQ3L,GACrBsvF,EAAmBv3E,EAAS8uE,EAAO5gF,UACvC,IAAIyhE,GAAa4nB,GAKb,MAAM,IAAI7sF,MAAM,WAAaokF,EAAO5gF,SAAW,wBAA0B8R,EAAStY,YAAYsF,KAAO,MAJrG,IAAI22B,EAAe4zD,EAAiB3zD,UAAU4zD,GAAoBp6E,EAAMnK,EAAIuO,OAAOlE,UAAWwxE,EAAOjsD,YACrGzlB,EAAKgyE,YAAYn8E,EAAIo8E,YAAcpnF,GAAK07B,EAAaG,YAAYl2B,KAAK+1B,GAOlF,OAAO3jB,EAEX,SAASw3E,GAAoBp6E,EAAM5O,EAAOq0B,GACtC,OAAO,SAAU2oD,GAAS,OAAOD,GAAcnuE,EAAM5O,EAAOq0B,EAAW2oD,IAmF3E,SAAS2L,GAA0B/5E,EAAMnK,GAErC,IAAIwkF,GAAoC,KAAZxkF,EAAIyF,OAAsC,EAClE63E,EAAct9E,EAAImZ,SACtB,OAAoB,UAAZnZ,EAAIyF,OACR,KAAK,IACD,OAAO2+E,GAAYj6E,EAAMnK,EAAIuO,OAAQi2E,EAAsBlH,EAAYxmF,MAAOwmF,EAAYtkE,MAC9F,KAAK,KACD,OA0BZ,SAASyrE,EAAYt6E,EAAMqxE,EAAOgJ,EAAsBrxF,EAAS6lB,GAC7D,IAAI2hD,EAAM3hD,EAAK7jB,OACf,OAAQwlE,GACJ,KAAK,EACD,OAAOxnE,IACX,KAAK,EACD,OAAOA,EAAQujF,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KACtE,KAAK,EACD,OAAO7lB,EAAQujF,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KAC9H,KAAK,EACD,OAAO7lB,EAAQujF,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KACtL,QAEI,IADA,IAAIilE,EAAY7pF,MAAMumE,GACb3lE,EAAI,EAAGA,EAAI2lE,EAAK3lE,IACrBipF,EAAUjpF,GAAK0hF,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAKhkB,IAEtE,OAAO7B,EAAQkC,WAAM,EAAQgC,EAAS4mF,KA1C/BwG,CAAYt6E,EAAMnK,EAAIuO,OAAQi2E,EAAsBlH,EAAYxmF,MAAOwmF,EAAYtkE,MAC9F,KAAK,KACD,OAAO09D,GAAWvsE,EAAMnK,EAAIuO,OAAQi2E,EAAsBlH,EAAYtkE,KAAK,IAC/E,KAAK,IACD,OAAOskE,EAAYxmF,OAG/B,SAASstF,GAAYj6E,EAAMqxE,EAAOgJ,EAAsBzpF,EAAMie,GAC1D,IAAI2hD,EAAM3hD,EAAK7jB,OACf,OAAQwlE,GACJ,KAAK,EACD,OAAO,IAAI5/D,EACf,KAAK,EACD,OAAO,IAAIA,EAAK27E,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KACvE,KAAK,EACD,OAAO,IAAIje,EAAK27E,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIje,EAAK27E,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,IAAK09D,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAK,KACvL,QAEI,IADA,IAAIilE,EAAY,IAAI7pF,MAAMumE,GACjB3lE,EAAI,EAAGA,EAAI2lE,EAAK3lE,IACrBipF,EAAUjpF,GAAK0hF,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBxrE,EAAKhkB,IAEtE,OAAO,IAAK+F,EAAKJ,KAAKtF,MAAM0F,EAAM1D,QAAU,GAAS4mF,MAuCjE,IAyvCIyG,GAzvCAC,MACJ,SAASjO,GAAWvsE,EAAMqxE,EAAOgJ,EAAsBpH,EAAQv3E,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBiS,GAASH,oBACtC,EAAfylE,EAAO33E,MACP,OAAO23E,EAAOn+E,MAElB,IAAIuM,EAAYrB,EACG,EAAfizE,EAAO33E,QACPI,EAAgB,MAEpB,IAAI++E,EAAcxH,EAAO5F,SACrBoN,IAAgBlB,KAGhBc,KAA0BhJ,IAASA,EAAM34D,QAAQ7F,gBAEjDw+D,GAAyB,EAAf4B,EAAO33E,QACjB++E,GAAuB,EACvBhJ,EAAQA,EAAMjtE,QAGlB,IADA,IAAIs2E,EAAa16E,EACV06E,GAAY,CACf,GAAIrJ,EACA,OAAQoJ,GACJ,KAAKvB,GAED,OAAO7B,GADQsD,GAAaD,EAAYrJ,EAAOgJ,IAGnD,KAAKlB,GAED,OADewB,GAAaD,EAAYrJ,EAAOgJ,GAC/B74E,SAEpB,KAAK43E,GACD,OAAO,IAAIr3C,GAAWwpC,GAAcmP,EAAYrJ,EAAMnxE,WAAWwuE,eACrE,KAAK2K,GACD,OAAO9N,GAAcmP,EAAYrJ,EAAMnxE,WAAW6wE,cACtD,KAAKuI,GACD,GAAIjI,EAAM34D,QAAQxiB,SACd,OAAOq1E,GAAcmP,EAAYrJ,EAAMnxE,WAAWhK,SAEtD,MAEJ,KAAKqjF,GAED,OAAOzC,GADM6D,GAAaD,EAAYrJ,EAAOgJ,IAGjD,KAAKb,GACL,KAAKC,GACD,OAAOrC,GAAiBsD,EAAYrJ,GACxC,QACI,IAAIuJ,GAAiBP,EAAuBhJ,EAAM34D,QAAQmiE,aACtDxJ,EAAM34D,QAAQoiE,iBAAiBL,GACnC,GAAIG,EAAe,CACf,IAAIG,EAAevP,GAAekP,EAAYE,EAAc16E,WAK5D,OAJK66E,IACDA,GAAiBn4E,SAAUm3E,GAA0BW,EAAYE,IACjEF,EAAWpP,MAAMsP,EAAc16E,WAAa66E,GAEzCA,EAAan4E,UAIpCy3E,EAAuBxL,GAAgB6L,GACvCrJ,EAAQ7C,GAAakM,GACrBA,EAAaA,EAAWt2E,OACL,EAAf6uE,EAAO33E,QACPo/E,EAAa,MAGrB,IAAI/tF,EAAQ0U,EAAUgtE,KAAKrzE,SAASQ,IAAIy3E,EAAOn+E,MAAO0lF,IACtD,OAAI7tF,IAAU6tF,IACV9+E,IAAkB8+E,GAMX7tF,EAEJ0U,EAAUgtE,KAAKhwC,SAASrjC,SAASQ,IAAIy3E,EAAOn+E,MAAO4G,GAE9D,SAASi/E,GAAa36E,EAAMqxE,EAAOgJ,GAC/B,IAAI9J,EACJ,GAAI8J,EACA9J,EAAWhF,GAAcvrE,EAAMqxE,EAAMnxE,WAAW2S,mBAIhD,IADA09D,EAAWvwE,EACJuwE,EAASnsE,SAAWyqE,GAAgB0B,IACvCA,EAAWA,EAASnsE,OAG5B,OAAOmsE,EAEX,SAASyK,GAAWh7E,EAAM+6E,EAAcllF,EAAK23E,EAAY7gF,EAAOssD,GAC5D,GAAgB,MAAZpjD,EAAIyF,MAA+B,CACnC,IAAIi1E,EAAWhF,GAAcvrE,EAAMnK,EAAIuO,OAAOlE,WAAW2S,cAChC,EAArB09D,EAAS16E,IAAIyF,QACbi1E,EAAS57D,OAAS,GAS1B,GADAomE,EAAan4E,SALC/M,EAAIg4E,SAASL,GACJ59E,MAIWjD,EAClB,OAAZkJ,EAAIyF,MAAgC,CACpC29C,EAAUA,MACV,IAAI/vC,EAAWrL,GAAaG,OAAOgC,EAAKytE,UAAU53E,EAAIs+B,aAAeq5C,IAErEv0B,EADgBpjD,EAAIg4E,SAASL,GACXyN,iBACd,IAAI/8E,GAAagL,EAAUvc,EAA6C,IAAxB,EAAbqT,EAAK2U,QAGhD,OADA3U,EAAKytE,UAAU53E,EAAIs+B,aAAeq5C,GAAc7gF,EACzCssD,EA6CX,SAASiiC,GAAgCl7E,EAAMi5E,GAC3C,GAAMj5E,EAAKnK,IAAI6V,UAAYutE,EAK3B,IAFA,IAAI3N,EAAQtrE,EAAKnK,IAAIy1E,MACjBH,EAAY,EACPtgF,EAAI,EAAGA,EAAIygF,EAAMtgF,OAAQH,IAAK,CACnC,IAAIqlF,EAAU5E,EAAMzgF,GAChBgZ,EAAWqsE,EAAQ9rE,OASvB,KARKP,GAAYqsE,EAAQ50E,MAAQ29E,GAE7BkC,GAAuBn7E,EAAMnV,EAAGqlF,EAAQ50E,MAAQ29E,EAAY9N,KAEtB,IAArC+E,EAAQuG,WAAawC,KAEtBpuF,GAAKqlF,EAAQE,YAEVvsE,GAA8B,EAAjBA,EAASvI,OACzBzQ,IAAMgZ,EAAS3D,UAAY2D,EAASusE,YAEhCvsE,EAAS+1E,iBAAmBX,IAC5B9N,EAAYiQ,GAA+Bp7E,EAAM6D,EAAUo1E,EAAY9N,IAE3EtnE,EAAWA,EAASO,QAIhC,SAASg3E,GAA+Bp7E,EAAMqxE,EAAO4H,EAAY9N,GAC7D,IAAK,IAAItgF,EAAIwmF,EAAMnxE,UAAY,EAAGrV,GAAKwmF,EAAMnxE,UAAYmxE,EAAMjB,WAAYvlF,IAAK,CAC5E,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GACzBqlF,EAAQ50E,MAAQ29E,GAChBkC,GAAuBn7E,EAAMnV,EAAGqlF,EAAQ50E,MAAQ29E,EAAY9N,KAGhEtgF,GAAKqlF,EAAQE,WAEjB,OAAOjF,EAEX,SAASgQ,GAAuBn7E,EAAM5O,EAAO6nF,EAAY9N,GACrD,IAAI4P,EAAevP,GAAexrE,EAAM5O,GACxC,GAAK2pF,EAAL,CAGA,IAAI/rE,EAAW+rE,EAAan4E,SACvBoM,IAGL48D,GAASC,eAAe7rE,EAAM5O,GACb,QAAb6nF,GACA7N,GAA4BprE,EAAM,IAA6CmrE,IAC/En8D,EAASjY,qBAEI,QAAbkiF,GACAjqE,EAAS/X,wBAEI,QAAbgiF,GACA7N,GAA4BprE,EAAM,IAA0CmrE,IAC5En8D,EAAS7X,kBAEI,QAAb8hF,GACAjqE,EAAS3X,qBAEI,OAAb4hF,GACAjqE,EAASzX;;;;;;;OAgDjB,SAASq1E,GAAmB5sE,GAExB,IADA,IAAIq7E,EAAWr7E,EAAKnK,IAAIylF,mBACjBt7E,EAAKoE,QAAU0qE,GAAe9uE,IAAO,CACxC,IAAIu7E,EAASv7E,EAAKuuE,cAClBvuE,EAAOA,EAAKoE,OAGZ,IADA,IAAIgB,EAAMm2E,EAAOr7E,UAAYq7E,EAAOnL,WAC3BvlF,EAAI,EAAGA,GAAKua,EAAKva,IAED,UADjBqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,IAChByQ,OACQ,UAAhB40E,EAAQ50E,QACR40E,EAAQp4B,MAAM0jC,SAAWH,KAAcnL,EAAQp4B,MAAM0jC,UACtD9P,GAAY1rE,EAAMnV,GAAG6wB,aAEJ,EAAhBw0D,EAAQ50E,OAA+BzQ,EAAIqlF,EAAQE,WAAamL,EAAOr7E,YACjD,SAArBgwE,EAAQuG,YACa,UAArBvG,EAAQuG,aAEV5rF,GAAKqlF,EAAQE,YAKzB,GAAyB,UAArBpwE,EAAKnK,IAAI6V,UACT,IAAS7gB,EAAI,EAAGA,EAAImV,EAAKnK,IAAIy1E,MAAMtgF,OAAQH,IAAK,CAC5C,IAAIqlF,EACiB,WADjBA,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,IAChByQ,OAA2D,UAAhB40E,EAAQ50E,OAC5DowE,GAAY1rE,EAAMnV,GAAG6wB,WAGzB7wB,GAAKqlF,EAAQE,YAIzB,SAASqL,GAAoBz7E,EAAMkwE,GAC/B,IAAIn7C,EAAY22C,GAAY1rE,EAAMkwE,EAAQhwE,WAC1C,GAAK60B,EAAUvI,MAAf,CAGA,IAAI1pB,EACA44E,OAAY9sF,EAChB,GAAoB,SAAhBshF,EAAQ50E,MAAyC,CACjD,IAAIqgF,EAAazL,EAAQ9rE,OAAOA,OAChCs3E,EAAYE,GAAgB57E,EAAM27E,EAAWz7E,UAAWy7E,EAAWz7E,UAAYy7E,EAAWvL,WAAYF,EAAQp4B,UAC9Gh1C,EAAoB0oE,GAAexrE,EAAMkwE,EAAQ9rE,OAAOlE,WAAW0C,cAE9C,UAAhBstE,EAAQ50E,QACbogF,EAAYE,GAAgB57E,EAAM,EAAGA,EAAKnK,IAAIy1E,MAAMtgF,OAAS,EAAGklF,EAAQp4B,UACxEh1C,EAAoB9C,EAAKhN,WAE7B+hC,EAAUykB,MAAMkiC,GAGhB,IAFA,IAAI7N,EAAWqC,EAAQp4B,MAAM+1B,SACzBgO,GAAS,EACJhxF,EAAI,EAAGA,EAAIgjF,EAAS7iF,OAAQH,IAAK,CACtC,IAAImhD,EAAU6hC,EAAShjF,GACnBixF,OAAa,EACjB,OAAQ9vC,EAAQ+vC,aACZ,KAAK,EACDD,EAAa/mD,EAAU1iC,MACvB,MACJ,KAAK,EACDypF,EAAa/mD,EACb8mD,GAAS,EAGjB/4E,EAAkBkpC,EAAQl7C,UAAYgrF,EAEtCD,GACA9mD,EAAU2kB,mBAGlB,SAASkiC,GAAgB57E,EAAM4E,EAAY46B,EAAUw8C,EAAUnrF,GAC3D,IAAK,IAAIhG,EAAI+Z,EAAY/Z,GAAK20C,EAAU30C,IAAK,CACzC,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GACzBwkF,EAAYa,EAAQf,eAAe6M,EAAS9jF,IAIhD,GAHiB,MAAbm3E,GACAx+E,EAAO7D,KAAKivF,GAAcj8E,EAAMkwE,EAASb,IAEzB,EAAhBa,EAAQ50E,OAA+B40E,EAAQx3D,QAAQxiB,WACtDg6E,EAAQx3D,QAAQxiB,SAASolF,mBAAqBU,EAASR,YACpDQ,EAASR,SAAU,CACvB,IAAIvH,EAAc1I,GAAcvrE,EAAMnV,GAOtC,IAJKqlF,EAAQ2J,oBAAsBmC,EAASR,YAAcQ,EAASR,WAC/DI,GAAgB57E,EAAMnV,EAAI,EAAGA,EAAIqlF,EAAQE,WAAY4L,EAAUnrF,GAC/DhG,GAAKqlF,EAAQE,YAEG,SAAhBF,EAAQ50E,MAER,IADA,IAAIw1E,EAAgBmD,EAAYlD,cAAcC,eACrCpgC,EAAI,EAAGA,EAAIkgC,EAAc9lF,OAAQ4lD,IAAK,CAC3C,IAAIh/B,EAAek/D,EAAclgC,GAC7BsrC,EAAM5N,GAAsB18D,GAC5BsqE,GAAOA,IAAQjI,GACf2H,GAAgBhqE,EAAc,EAAGA,EAAa/b,IAAIy1E,MAAMtgF,OAAS,EAAGgxF,EAAUnrF,GAI1F,IAAIylF,EAAiBrC,EAAY/9E,SAASqgF,gBAC1C,GAAID,EACA,IAAS1lC,EAAI,EAAGA,EAAI0lC,EAAetrF,OAAQ4lD,IAAK,CAC5C,IAAI/f,EAAgBylD,EAAe1lC,GACnCgrC,GAAgB/qD,EAAe,EAAGA,EAAch7B,IAAIy1E,MAAMtgF,OAAS,EAAGgxF,EAAUnrF,KAIvFq/E,EAAQ2J,oBAAsBmC,EAASR,YAAcQ,EAASR,WAE/D3wF,GAAKqlF,EAAQE,YAGrB,OAAOv/E,EAEX,SAASorF,GAAcj8E,EAAMkwE,EAASiM,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAO5Q,GAAcvrE,EAAMkwE,EAAQhwE,WAAWwuE,cAClD,KAAK,EACD,OAAO,IAAI3sC,GAAWwpC,GAAcvrE,EAAMkwE,EAAQhwE,WAAWwuE,eACjE,KAAK,EACD,OAAOnD,GAAcvrE,EAAMkwE,EAAQhwE,WAAWhK,SAClD,KAAK,EACD,OAAOq1E,GAAcvrE,EAAMkwE,EAAQhwE,WAAW6wE,cAClD,KAAK,EACD,OAAOvF,GAAexrE,EAAMkwE,EAAQhwE,WAAW0C;;;;;;;OAwC/D,SAASw5E,GAAgBp8E,EAAMyvE,EAAY55E,GACvC,IAAImgB,EAAWw5D,GAAuBxvE,EAAMyvE,EAAY55E,GACnDmgB,GAKLq6D,GAA0BrwE,EADLnK,EAAI86E,UAAUv/E,MACa,EAAqB4kB,EAAU,UAAMpnB;;;;;;;OA4BzF,SAASytF,GAAmB/gF,EAAOo+E,EAAY4C,GAE3C,IADA,IAAIzO,EAAW,IAAI5jF,MAAMqyF,EAActxF,QAC9BH,EAAI,EAAGA,EAAIyxF,EAActxF,OAAQH,IAAK,CAC3C,IAAIixB,EAAOwgE,EAAczxF,GACzBgjF,EAAShjF,IACLyQ,MAAO,EACP1L,KAAMksB,EACNy1D,GAAI,KACJ0J,gBAAiBn/D,EACjBw2D,gBAAiB,KACjBjnD,OAAQ,MAGhB,OAEInrB,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEdyH,WAAYA,EACZp+E,MAAOA,EACPm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrB1K,kBACAC,gBAAiB,EACjBjN,cACAmO,gBAAiB,EACjBF,WAAY,EAAGvC,SAAUA,EACzBgD,aAAcM,GAAiBtD,GAC/Br3E,WACAkiB,QAAS,KACT1J,SAAU,KACV3b,KAAM,KACNykD,MAAO,KACP64B,UAAW,MAuMnB,SAASt9D,GAAWrT,EAAMyvE,EAAY55E,GAClC,IAAIu8E,EACA5wE,EAAWxB,EAAKwB,SACpB4wE,EAAgB5wE,EAAS6R,WAAWxd,EAAIxC,KAAK8+B,QAC7C,IAAInc,EAAWw5D,GAAuBxvE,EAAMyvE,EAAY55E,GAIxD,OAHImgB,GACAxU,EAASqU,YAAYG,EAAUo8D,IAE1BzD,WAAYyD,GA0EzB,SAASmK,GAAsB5vF,EAAOq/C,GAElC,OADwB,MAATr/C,EAAgBA,EAAM4C,WAAa,IAChCy8C,EAAQ3gB;;;;;;;OAmI9B,SAASmxD,GAAczwE,GACnB,OAA8C,IAAzB,EAAbA,EAAKzQ,QAA4D,OAAtByQ,EAAK2M,QAAQ9oB,KAEpE,SAAS6sF,GAAar4E,EAAQ2H,EAAM2wE,GAChC,IAAIxmF,EAAW6V,EAAK2M,SAAW3M,EAAK2M,QAAQxiB,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAAS85E,mBACV,MAAM,IAAI1iF,MAAM,oEAEpB,GAAI4I,EAAS85E,oBAC2B,SAApC95E,EAAS85E,mBAAmB10E,MAC5B,MAAM,IAAIhO,MAAM,mFAAqFye,EAAK7L,UAAY,KAG9H,GAAiB,MAAb6L,EAAKzQ,OAEuC,IAAzB,GADD8I,EAASA,EAAO9I,MAAQ,IAEtC,MAAM,IAAIhO,MAAM,sGAAwGye,EAAK7L,UAAY,KAGjJ,GAAI6L,EAAK+rC,MAAO,CACZ,GAAiB,SAAb/rC,EAAKzQ,SACH8I,GAAyD,IAA/B,MAAfA,EAAO9I,QACpB,MAAM,IAAIhO,MAAM,kFAAoFye,EAAK7L,UAAY,KAEzH,GAAiB,UAAb6L,EAAKzQ,OAAyC8I,EAC9C,MAAM,IAAI9W,MAAM,wEAA0Eye,EAAK7L,UAAY,KAGnH,GAAI6L,EAAKqkE,WAAY,CACjB,IAAIuM,EAAYv4E,EAASA,EAAOlE,UAAYkE,EAAOgsE,WAAasM,EAAY,EAC5E,GAAI3wE,EAAK7L,WAAay8E,GAAa5wE,EAAK7L,UAAY6L,EAAKqkE,WAAauM,EAClE,MAAM,IAAIrvF,MAAM,uEAAyEye,EAAK7L,UAAY,MAItH,SAASu3B,GAAmBrzB,EAAQw4E,EAAc5H,EAASvxE,GAGvD,IAAIzD,EAAO2vB,GAAWvrB,EAAOiqE,KAAMjqE,EAAO5C,SAAU4C,EAAQw4E,EAAc5H,GAG1E,OAFA6H,GAAS78E,EAAMoE,EAAOpR,UAAWyQ,GACjCq5E,GAAgB98E,GACTA,EAEX,SAAS8rE,GAAeuC,EAAMx4E,EAAK4N,GAC/B,IAAIzD,EAAO2vB,GAAW0+C,EAAMA,EAAK7sE,SAAU,KAAM,KAAM3L,GAGvD,OAFAgnF,GAAS78E,EAAMyD,EAASA,GACxBq5E,GAAgB98E,GACTA,EAEX,SAAS+rE,GAAoBxqE,EAAY2uE,EAAS8E,EAAS3jE,GACvD,IACI0rE,EADAzrE,EAAe4+D,EAAQx3D,QAAQg3D,sBAQnC,OAFIqN,EAJCzrE,EAIc/P,EAAW8sE,KAAK5sE,gBAAgB2P,eAAeC,EAAaC,GAH5D/P,EAAW8sE,KAAK7sE,SAK5BmuB,GAAWpuB,EAAW8sE,KAAM0O,EAAcx7E,EAAY2uE,EAAQx3D,QAAQw8D,kBAAmBF,GAEpG,SAASrlD,GAAW0+C,EAAM7sE,EAAU4C,EAAQmqE,EAAe14E,GACvD,IAAIy1E,EAAQ,IAAIrhF,MAAM4L,EAAIy1E,MAAMtgF,QAC5BgnF,EAAcn8E,EAAImnF,YAAc,IAAI/yF,MAAM4L,EAAImnF,aAAe,KAWjE,OATInnF,IAAKA,EACLuO,OAAQA,EACR4pE,oBAAqB,KAAMO,cAAeA,EAC1C9qE,QAAS,KACTzQ,UAAW,KAAMs4E,MAAOA,EACxB32D,MAAO,GAAkB05D,KAAMA,EAAM7sE,SAAUA,EAC/CisE,UAAW,IAAIxjF,MAAM4L,EAAIonF,cAAejL,YAAaA,EACrD7G,WAAY,GAIpB,SAAS0R,GAAS78E,EAAMhN,EAAWyQ,GAC/BzD,EAAKhN,UAAYA,EACjBgN,EAAKyD,QAAUA,EAEnB,SAASq5E,GAAgB98E,GACrB,IAAIyvE,EACAZ,GAAgB7uE,KAEhByvE,EAAalE,GAAcvrE,EAAKoE,OADlBpE,EAAKuuE,cAC6BnqE,OAAOlE,WAAWwuE,eAItE,IAFA,IAAI74E,EAAMmK,EAAKnK,IACXy1E,EAAQtrE,EAAKsrE,MACRzgF,EAAI,EAAGA,EAAIgL,EAAIy1E,MAAMtgF,OAAQH,IAAK,CACvC,IAAIqlF,EAAUr6E,EAAIy1E,MAAMzgF,GACxB+gF,GAASC,eAAe7rE,EAAMnV,GAC9B,IAAIqyF,OAAW,EACf,OAAwB,UAAhBhN,EAAQ50E,OACZ,KAAK,EACD,IAAI0qC,EAAKpjB,GAAc5iB,EAAMyvE,EAAYS,GACrCr9D,OAAgBjkB,EACpB,GAAoB,SAAhBshF,EAAQ50E,MAAsC,CAC9C,IAAI6hF,EAAcrN,GAAkBI,EAAQx3D,QAAQ7F,eACpDA,EAAgB+4D,GAASG,oBAAoB/rE,EAAMkwE,EAASiN,EAAan3C,GAE7EyrC,GAAuBzxE,EAAM6S,EAAeq9D,EAASlqC,GACrDk3C,GACIxO,cAAe1oC,EACfnzB,cAAeA,EACfk+D,cAAe,KACf76E,SAAUg6E,EAAQx3D,QAAQxiB,SAAWghF,GAAmBl3E,EAAMkwE,QAAWthF,GAEzD,SAAhBshF,EAAQ50E,QACR4hF,EAASnM,cAAgB0E,GAAwBz1E,EAAMkwE,EAASgN,IAEpE,MACJ,KAAK,EACDA,EAAW7pE,GAAWrT,EAAMyvE,EAAYS,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACDgN,EAAW5R,EAAMzgF,KACkB,KAAhBqlF,EAAQ50E,QAEvB4hF,GAAat6E,SADEk3E,GAAuB95E,EAAMkwE,KAGhD,MAEJ,KAAK,GAEDgN,GAAat6E,SADEo3E,GAAmBh6E,EAAMkwE,IAExC,MAEJ,KAAK,OACDgN,EAAW5R,EAAMzgF,MAGbqyF,GAAat6E,SADEs3E,GAAwBl6E,EAAMkwE,KAG7B,MAAhBA,EAAQ50E,OAERuhF,GADetR,GAAcvrE,EAAMkwE,EAAQ9rE,OAAOlE,WAAW2S,cAC1CqqE,EAASt6E,SAAUs6E,EAASt6E,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACDs6E,GA3iBHvwF,WAAOiC,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACDsuF,EAnyBL,IAAInd,GAoyBC,MACJ,KAAK,EACDqc,GAAgBp8E,EAAMyvE,EAAYS,GAElCgN,OAAWtuF,EAGnB08E,EAAMzgF,GAAKqyF,EAIfE,GAAyBp9E,EAAMu6E,GAAW8C,iBAE1CC,GAAkBt9E,EAAM,UAAiE,UAA6B,GAE1H,SAASqsE,GAAmBrsE,GACxBu9E,GAA2Bv9E,GAC3B4rE,GAASc,iBAAiB1sE,EAAM,GAChCw9E,GAAwBx9E,EAAMu6E,GAAWkD,gBACzC7R,GAASe,eAAe3sE,EAAM,GAC9Bo9E,GAAyBp9E,EAAMu6E,GAAWkD,gBAG1Cz9E,EAAK2U,QAAS,GAElB,SAASy3D,GAAmBpsE,GACP,EAAbA,EAAK2U,OACL3U,EAAK2U,QAAS,EACd3U,EAAK2U,OAAS,GAGd3U,EAAK2U,QAAS,EAElBo2D,GAAe/qE,EAAM,EAA8B,KACnDu9E,GAA2Bv9E,GAC3B4rE,GAASc,iBAAiB1sE,EAAM,GAChCw9E,GAAwBx9E,EAAMu6E,GAAWmD,gBACzCJ,GAAkBt9E,EAAM,SAAiC,UAA8B,GACvF,IAAI29E,EAAW5S,GAAe/qE,EAAM,IAAmC,KACvEk7E,GAAgCl7E,EAAM,SAAqC29E,EAAW,QAAiC,IACvH/R,GAASe,eAAe3sE,EAAM,GAC9Bo9E,GAAyBp9E,EAAMu6E,GAAWmD,gBAC1CJ,GAAkBt9E,EAAM,UAA+B,UAA8B,GAErFk7E,GAAgCl7E,EAAM,UADtC29E,EAAW5S,GAAe/qE,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKnK,IAAIyF,QACT0E,EAAK2U,QAAS,GAElB3U,EAAK2U,QAAS,GACdo2D,GAAe/qE,EAAM,IAA0C,MAEnE,SAAS49E,GAAmB59E,EAAMkwE,EAAS2N,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyBh+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACjF,OAAwB,UAAhB7N,EAAQ50E,OACZ,KAAK,EACD,OAlzEZ,SAAS2iF,EAA4Bj+E,EAAMnK,EAAKu8B,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAChF,IAAIG,EAAUroF,EAAIg4E,SAAS7iF,OACvBmzF,GAAU,EAqBd,OApBID,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGu8B,KACxD+rD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAG08B,KACxD4rD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAG88B,KACxDwrD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGk9B,KACxDorD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGs9B,KACxDgrD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGy9B,KACxD6qD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAG49B,KACxD0qD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAG+9B,KACxDuqD,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGioF,KACxDK,GAAU,GACVD,EAAU,GAAKhM,GAA2BlyE,EAAMnK,EAAK,EAAGkoF,KACxDI,GAAU,GACPA,EA2xEQF,CAA4Bj+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASK,EAAyBp+E,EAAMnK,EAAKu8B,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAC7E,IAAII,GAAU,EACVtQ,EAAWh4E,EAAIg4E,SACfqQ,EAAUrQ,EAAS7iF,OAqBvB,GApBIkzF,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGu8B,KACnD+rD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG08B,KACnD4rD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG88B,KACnDwrD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGk9B,KACnDorD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGs9B,KACnDgrD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGy9B,KACnD6qD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG49B,KACnD0qD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG+9B,KACnDuqD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGioF,KACnDK,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGkoF,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIxxF,EAAQkJ,EAAIxC,KAAK8+B,OACjB+rD,EAAU,IACVvxF,GAAS4vF,GAAsBnqD,EAAIy7C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBhqD,EAAIs7C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsB5pD,EAAIk7C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBxpD,EAAI86C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBppD,EAAI06C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBjpD,EAAIu6C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsB9oD,EAAIo6C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsB3oD,EAAIi6C,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBuB,EAAIjQ,EAAS,KAC5CqQ,EAAU,IACVvxF,GAAS4vF,GAAsBwB,EAAIlQ,EAAS,KAChD,IAAIuE,EAAgB/G,GAAWrrE,EAAMnK,EAAIqK,WAAWyuE,WACpD3uE,EAAKwB,SAAS2Z,SAASi3D,EAAezlF,GAE1C,OAAOwxF,EA2YQC,CAAyBp+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACvF,KAAK,MACD,OAnyCZ,SAASM,EAA8Br+E,EAAMnK,EAAKu8B,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAClF,IAAIhD,EAAevP,GAAexrE,EAAMnK,EAAIqK,WACxCytB,EAAYotD,EAAan4E,SACzBu7E,GAAU,EACVllC,OAAUrqD,EACVsvF,EAAUroF,EAAIg4E,SAAS7iF,OAmD3B,OAlDIkzF,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGu8B,KAC1C+rD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGu8B,EAAI6mB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAG08B,KAC1C4rD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAG08B,EAAI0mB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAG88B,KAC1CwrD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAG88B,EAAIsmB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGk9B,KAC1CorD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGk9B,EAAIkmB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGs9B,KAC1CgrD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGs9B,EAAI8lB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGy9B,KAC1C6qD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGy9B,EAAI2lB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAG49B,KAC1C0qD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAG49B,EAAIwlB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAG+9B,KAC1CuqD,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAG+9B,EAAIqlB,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGioF,KAC1CK,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGioF,EAAI7kC,IAErDilC,EAAU,GAAK3Q,GAAavtE,EAAMnK,EAAK,EAAGkoF,KAC1CI,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAK,EAAGkoF,EAAI9kC,IAErDA,GACAtrB,EAAU4O,YAAY0c,GAET,MAAZpjD,EAAIyF,OACL8vE,GAA4BprE,EAAM,IAAmCnK,EAAIqK,YACzEytB,EAAUh3B,WAEE,OAAZd,EAAIyF,OACJqyB,EAAU92B,YAEPsnF,EA2uCQE,CAA8Br+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASO,EAAmCt+E,EAAMnK,EAAKu8B,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACvF,IAAIlQ,EAAWh4E,EAAIg4E,SACfsQ,GAAU,EACVD,EAAUrQ,EAAS7iF,OAqBvB,GApBIkzF,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGu8B,KACnD+rD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG08B,KACnD4rD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG88B,KACnDwrD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGk9B,KACnDorD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGs9B,KACnDgrD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGy9B,KACnD6qD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG49B,KACnD0qD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAG+9B,KACnDuqD,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGioF,KACnDK,GAAU,GACVD,EAAU,GAAKxQ,GAAsB1tE,EAAMnK,EAAK,EAAGkoF,KACnDI,GAAU,GACVA,EAAS,CACT,IAAI/rF,EAAOq5E,GAAqBzrE,EAAMnK,EAAIqK,WACtCvT,OAAQ,EACZ,OAAoB,UAAZkJ,EAAIyF,OACR,KAAK,GACD3O,EAAQ,IAAI1C,MAAM4jF,EAAS7iF,QACvBkzF,EAAU,IACVvxF,EAAM,GAAKylC,GACX8rD,EAAU,IACVvxF,EAAM,GAAK4lC,GACX2rD,EAAU,IACVvxF,EAAM,GAAKgmC,GACXurD,EAAU,IACVvxF,EAAM,GAAKomC,GACXmrD,EAAU,IACVvxF,EAAM,GAAKwmC,GACX+qD,EAAU,IACVvxF,EAAM,GAAK2mC,GACX4qD,EAAU,IACVvxF,EAAM,GAAK8mC,GACXyqD,EAAU,IACVvxF,EAAM,GAAKinC,GACXsqD,EAAU,IACVvxF,EAAM,GAAKmxF,GACXI,EAAU,IACVvxF,EAAM,GAAKoxF,GACf,MACJ,KAAK,GACDpxF,KACIuxF,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQwiC,GAC1B8rD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQ2iC,GAC1B2rD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQ+iC,GAC1BurD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQmjC,GAC1BmrD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQujC,GAC1B+qD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQ0jC,GAC1B4qD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQ6jC,GAC1ByqD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQgkC,GAC1BsqD,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQkuF,GAC1BI,EAAU,IACVvxF,EAAMkhF,EAAS,GAAGj+E,MAAQmuF,GAC9B,MACJ,KAAK,IACD,IAAI3oC,EAAOhjB,EACX,OAAQ8rD,GACJ,KAAK,EACDvxF,EAAQyoD,EAAKM,UAAUtjB,GACvB,MACJ,KAAK,EACDzlC,EAAQyoD,EAAKM,UAAUnjB,GACvB,MACJ,KAAK,EACD5lC,EAAQyoD,EAAKM,UAAUnjB,EAAII,GAC3B,MACJ,KAAK,EACDhmC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,GAC/B,MACJ,KAAK,EACDpmC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,GACnC,MACJ,KAAK,EACDxmC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,EAAIG,GACvC,MACJ,KAAK,EACD3mC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACD9mC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDjnC,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,GACnD,MACJ,KAAK,GACDnxF,EAAQyoD,EAAKM,UAAUnjB,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,IAKvE3rF,EAAKzF,MAAQA,EAEjB,OAAOwxF,EA6hBQG,CAAmCt+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyBh+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GA+C3F,SAASQ,EAA0Bv+E,EAAMkwE,EAASr/E,GAC9C,OAAwB,UAAhBq/E,EAAQ50E,OACZ,KAAK,EACD,OAzyEZ,SAASkjF,EAA6Bx+E,EAAMnK,EAAKhF,GAE7C,IADA,IAAIstF,GAAU,EACLtzF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC3BqnF,GAA2BlyE,EAAMnK,EAAKhL,EAAGgG,EAAOhG,MAChDszF,GAAU,GAElB,OAAOA,EAmyEQK,CAA6Bx+E,EAAMkwE,EAASr/E,GACvD,KAAK,EACD,OAzZZ,SAAS4tF,EAA0Bz+E,EAAMnK,EAAKhF,GAG1C,IAFA,IAAIg9E,EAAWh4E,EAAIg4E,SACfsQ,GAAU,EACLtzF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAG3B6iF,GAAsB1tE,EAAMnK,EAAKhL,EAAGgG,EAAOhG,MAC3CszF,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIxxF,EAAQ,GACZ,IAAS9B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/B8B,GAAgB4vF,GAAsB1rF,EAAOhG,GAAIgjF,EAAShjF,IAE9D8B,EAAQkJ,EAAIxC,KAAK8+B,OAASxlC,EAC1B,IAAIylF,EAAgB/G,GAAWrrE,EAAMnK,EAAIqK,WAAWyuE,WACpD3uE,EAAKwB,SAAS2Z,SAASi3D,EAAezlF,GAE1C,OAAOwxF,EAsYQM,CAA0Bz+E,EAAMkwE,EAASr/E,GACpD,KAAK,MACD,OAzvCZ,SAAS6tF,EAA+B1+E,EAAMnK,EAAKhF,GAK/C,IAJA,IAAIkqF,EAAevP,GAAexrE,EAAMnK,EAAIqK,WACxCytB,EAAYotD,EAAan4E,SACzBu7E,GAAU,EACVllC,OAAUrqD,EACL/D,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC3B0iF,GAAavtE,EAAMnK,EAAKhL,EAAGgG,EAAOhG,MAClCszF,GAAU,EACVllC,EAAU+hC,GAAWh7E,EAAM+6E,EAAcllF,EAAKhL,EAAGgG,EAAOhG,GAAIouD,IAapE,OAVIA,GACAtrB,EAAU4O,YAAY0c,GAET,MAAZpjD,EAAIyF,OACL8vE,GAA4BprE,EAAM,IAAmCnK,EAAIqK,YACzEytB,EAAUh3B,WAEE,OAAZd,EAAIyF,OACJqyB,EAAU92B,YAEPsnF,EAouCQO,CAA+B1+E,EAAMkwE,EAASr/E,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAAS8tF,EAAoC3+E,EAAMnK,EAAKhF,GAGpD,IAFA,IAAIg9E,EAAWh4E,EAAIg4E,SACfsQ,GAAU,EACLtzF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAG3B6iF,GAAsB1tE,EAAMnK,EAAKhL,EAAGgG,EAAOhG,MAC3CszF,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAI/rF,EAAOq5E,GAAqBzrE,EAAMnK,EAAIqK,WACtCvT,OAAQ,EACZ,OAAoB,UAAZkJ,EAAIyF,OACR,KAAK,GACD3O,EAAQkE,EACR,MACJ,KAAK,GAED,IADAlE,KACS9B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/B8B,EAAMkhF,EAAShjF,GAAG+E,MAAQiB,EAAOhG,GAErC,MACJ,KAAK,IACD,IAAIuqD,EAAOvkD,EAAO,GACdy8D,EAASz8D,EAAO8T,MAAM,GAC1BhY,EAAQyoD,EAAKM,UAAUxqD,MAAMkqD,EAAMloD,EAASogE,IAGpDl7D,EAAKzF,MAAQA,EAEjB,OAAOwxF;;;;;;;OA4gBQQ,CAAoC3+E,EAAMkwE,EAASr/E,GAC9D,QACI,KAAM,eAzDH0tF,CAA0Bv+E,EAAMkwE,EAAS99C,GAGxD,SAASmrD,GAA2Bv9E,GAChC,IAAInK,EAAMmK,EAAKnK,IACf,GAAsB,EAAhBA,EAAI6V,UAGV,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgL,EAAIy1E,MAAMtgF,OAAQH,IAAK,CACvC,IAAIqlF,EAAUr6E,EAAIy1E,MAAMzgF,GACxB,GAAoB,EAAhBqlF,EAAQ50E,MAAmC,CAC3C,IAAIg7E,EAAiB/K,GAAcvrE,EAAMnV,GAAGqL,SAASqgF,gBACrD,GAAID,EACA,IAAK,IAAIsI,EAAM,EAAGA,EAAMtI,EAAetrF,OAAQ4zF,IAAO,CAClD,IAAI/tD,EAAgBylD,EAAesI,GACnC/tD,EAAclc,OAAS,GACvBs5D,GAAsCp9C,EAAe7wB,SAIH,IAA/B,EAArBkwE,EAAQuG,cAId5rF,GAAKqlF,EAAQE,aAoCzB,SAASyO,GAAmB7+E,EAAMkwE,EAAS2N,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASiB,EAAyB9+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACjF,IAAIG,EAAUhO,EAAQrC,SAAS7iF,OAC3BkzF,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG99C,GACxC8rD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG39C,GACxC2rD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAGv9C,GACxCurD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAGn9C,GACxCmrD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG/8C,GACxC+qD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG58C,GACxC4qD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAGz8C,GACxCyqD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAGt8C,GACxCsqD,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG4N,GACxCI,EAAU,GACVvQ,GAAsB3tE,EAAMkwE,EAAS,EAAG6N,GA7BxCe,CAAyB9+E,EAAMkwE,EAAS99C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GA+BpF,SAASgB,EAA0B/+E,EAAMkwE,EAASr/E,GAC9C,IAAK,IAAIhG,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/B8iF,GAAsB3tE,EAAMkwE,EAASrlF,EAAGgG,EAAOhG,IA9B/Ck0F,CAA0B/+E,EAAMkwE,EAAS99C,IAGtC,EAkCX,SAAS4sD,GAAoBh/E,EAAMkwE,GAE/B,GADgBxE,GAAY1rE,EAAMkwE,EAAQhwE,WAC5BssB,MACV,MAAMqgD,GAA4CjB,GAASY,mBAAmBxsE,EAAMkwE,EAAQhwE,WAAY,SAAWgwE,EAAQp4B,MAAM5/C,GAAK,aAAc,SAAWg4E,EAAQp4B,MAAM5/C,GAAK,SAAsD,IAA9B,EAAb8H,EAAK2U,QAG1M,SAAS23D,GAAYtsE,GACjB,KAAiB,IAAbA,EAAK2U,OAAT,CAMA,GAHA6oE,GAAwBx9E,EAAMu6E,GAAW0E,SACzC7B,GAAyBp9E,EAAMu6E,GAAW0E,SAC1C/D,GAAgCl7E,EAAM,QAClCA,EAAKgyE,YACL,IAAK,IAAInnF,EAAI,EAAGA,EAAImV,EAAKgyE,YAAYhnF,OAAQH,IACzCmV,EAAKgyE,YAAYnnF,MA9gE7B,SAASq0F,EAAoBl/E,GACzB,GAAmB,GAAbA,EAAK2U,MAAX,CAGA,IAAI0hE,EAAiB/H,GAAsBtuE,GAC3C,GAAIq2E,EAAgB,CAChB,IAAIC,EAAiBD,EAAengF,SAASqgF,gBACzCD,IACApC,GAAgBoC,EAAgBA,EAAelhF,QAAQ4K,IACvD4rE,GAASgB,mBAAmB5sE,MAwgEpCk/E,CAAoBl/E,GAChBA,EAAKwB,SAAS2R,aAQtB,SAASgsE,EAAiBn/E,GAEtB,IADA,IAAIwwD,EAAMxwD,EAAKnK,IAAIy1E,MAAMtgF,OAChBH,EAAI,EAAGA,EAAI2lE,EAAK3lE,IAAK,CAC1B,IAAIgL,EAAMmK,EAAKnK,IAAIy1E,MAAMzgF,GACT,EAAZgL,EAAIyF,MACJ0E,EAAKwB,SAAS2R,YAAYo4D,GAAcvrE,EAAMnV,GAAG6jF,eAEhC,EAAZ74E,EAAIyF,MACT0E,EAAKwB,SAAS2R,YAAYk4D,GAAWrrE,EAAMnV,GAAG8jF,aAE7B,SAAZ94E,EAAIyF,OAAuD,UAAZzF,EAAIyF,QACxDowE,GAAY1rE,EAAMnV,GAAGqqB,WAlBzBiqE,CAAiBn/E,GAEjB6uE,GAAgB7uE,IAChBA,EAAKwB,SAAS0T,UAElBlV,EAAK2U,OAAS,KA0BlB,SAASyoE,GAAyBp9E,EAAMoS,GACpC,IAAIvc,EAAMmK,EAAKnK,IACf,GAAsB,SAAhBA,EAAI6V,UAGV,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgL,EAAIy1E,MAAMtgF,OAAQH,IAAK,CACvC,IAAIqlF,EAAUr6E,EAAIy1E,MAAMzgF,GACJ,SAAhBqlF,EAAQ50E,MAER8jF,GAAe7T,GAAcvrE,EAAMnV,GAAGgoB,cAAeT,GAEQ,IAAlC,SAArB89D,EAAQuG,cAId5rF,GAAKqlF,EAAQE,aAIzB,SAASoN,GAAwBx9E,EAAMoS,GACnC,IAAIvc,EAAMmK,EAAKnK,IACf,GAAsB,SAAhBA,EAAI6V,UAGV,IAAK,IAAI7gB,EAAI,EAAGA,EAAIgL,EAAIy1E,MAAMtgF,OAAQH,IAAK,CACvC,IAAIqlF,EAAUr6E,EAAIy1E,MAAMzgF,GACxB,GAAoB,SAAhBqlF,EAAQ50E,MAGR,IADA,IAAIw1E,EAAgBvF,GAAcvrE,EAAMnV,GAAGkmF,cAAcC,eAChDpgC,EAAI,EAAGA,EAAIkgC,EAAc9lF,OAAQ4lD,IACtCwuC,GAAetO,EAAclgC,GAAIx+B,QAGwB,IAAlC,SAArB89D,EAAQuG,cAId5rF,GAAKqlF,EAAQE,aAIzB,SAASgP,GAAep/E,EAAMoS,GAC1B,IAAIitE,EAAYr/E,EAAK2U,MACrB,OAAQvC,GACJ,KAAKmoE,GAAWkD,eAC8B,IAAzB,IAAZ4B,KAC+C,KAA/B,GAAZA,GACDhT,GAAmBrsE,GAEF,GAAZq/E,GACLC,GAAyBt/E,EAAMu6E,GAAWgF,+BAGlD,MACJ,KAAKhF,GAAWgF,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACAhT,GAAmBrsE,GAEF,GAAZq/E,GACLC,GAAyBt/E,EAAMoS,IAGvC,MACJ,KAAKmoE,GAAWmD,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACDjT,GAAmBpsE,GAEF,GAAZq/E,GACLC,GAAyBt/E,EAAMu6E,GAAWiF,+BAGlD,MACJ,KAAKjF,GAAWiF,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACAjT,GAAmBpsE,GAEF,GAAZq/E,GACLC,GAAyBt/E,EAAMoS,IAGvC,MACJ,KAAKmoE,GAAW0E,QAGZ3S,GAAYtsE,GACZ,MACJ,KAAKu6E,GAAW8C,gBACZP,GAAgB98E,IAI5B,SAASs/E,GAAyBt/E,EAAMoS,GACpCorE,GAAwBx9E,EAAMoS,GAC9BgrE,GAAyBp9E,EAAMoS,GAEnC,SAASkrE,GAAkBt9E,EAAMy/E,EAAYC,EAAwBC,GACjE,GAAM3/E,EAAKnK,IAAI6V,UAAY+zE,GAAiBz/E,EAAKnK,IAAI6V,UAAYg0E,EAIjE,IADA,IAAIhD,EAAY18E,EAAKnK,IAAIy1E,MAAMtgF,OACtBH,EAAI,EAAGA,EAAI6xF,EAAW7xF,IAAK,CAChC,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GAC7B,GAAKqlF,EAAQ50E,MAAQmkF,GAAgBvP,EAAQ50E,MAAQokF,EAEjD,OADA9T,GAASC,eAAe7rE,EAAMkwE,EAAQhwE,WAC9By/E,GACJ,KAAK,EACDlE,GAAoBz7E,EAAMkwE,GAC1B,MACJ,KAAK,EACD8O,GAAoBh/E,EAAMkwE,GAIhCA,EAAQuG,WAAagJ,GAAiBvP,EAAQuG,WAAaiJ,IAG7D70F,GAAKqlF,EAAQE;;;;;;;QA/HzB,SAAWmK,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,QAoIlB,IAAI5nB,IAAc,EAClB,SAASitB,KACL,IAAIjtB,GAAJ,CAGAA,IAAc,EACd,IAAIktB,EAAWx7C,KA0CnB,SAASy7C,IACL,OACIjU,eAAgBkU,GAChBjU,eAAgBkU,GAChBvoD,mBAAoBwoD,GACpBlU,oBAAqBmU,GACrBlU,kBAAmBmU,GACnBlU,iBAAkBmU,GAClBlU,sBAAuBmU,GACvBlU,eAAgBmU,GAChBlU,mBAAoBmU,GACpBlU,mBAAoBmU,GACpBlU,YAAamU,GACbjU,mBAAoB,SAAUxsE,EAAME,GAAa,OAAO,IAAIwgF,GAAc1gF,EAAME,IAChFusE,YAAakU,GACbjU,iBAAkBkU,GAClBjU,eAAgBkU,IA1DSf,GAmBjC,SAASgB,IACL,OACIjV,eAAgB,aAChBC,eAAgBiV,GAChBtpD,mBAAoBA,GACpBs0C,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBkB,GAClBjB,sBAAuBiB,GACvBhB,eAAgBgB,GAChBf,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUxsE,EAAME,GAAa,OAAO,IAAIwgF,GAAc1gF,EAAME,IAChFusE,YAAa,SAAUzsE,EAAME,EAAWulB,EAAW2oD,GAC/C,OAAOpuE,EAAKnK,IAAI42E,YAAYzsE,EAAME,EAAWulB,EAAW2oD,IAE5D1B,iBAAkB,SAAU1sE,EAAM2/E,GAAa,OAAO3/E,EAAKnK,IAAI62E,iBAA+B,IAAdiT,EAAuCqB,GACnHC,GAAwBjhF,IAC5B2sE,eAAgB,SAAU3sE,EAAM2/E,GAAa,OAAO3/E,EAAKnK,IAAI82E,eAA6B,IAAdgT,EAAuCqB,GAC/GC,GAAwBjhF,KAvCqB8gF,GACrDlV,GAASC,eAAiBgU,EAAShU,eACnCD,GAASE,eAAiB+T,EAAS/T,eACnCF,GAASn0C,mBAAqBooD,EAASpoD,mBACvCm0C,GAASG,oBAAsB8T,EAAS9T,oBACxCH,GAASI,kBAAoB6T,EAAS7T,kBACtCJ,GAASK,iBAAmB4T,EAAS5T,iBACrCL,GAASM,sBAAwB2T,EAAS3T,sBAC1CN,GAASO,eAAiB0T,EAAS1T,eACnCP,GAASQ,mBAAqByT,EAASzT,mBACvCR,GAASS,mBAAqBwT,EAASxT,mBACvCT,GAASU,YAAcuT,EAASvT,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqBqT,EAASrT,mBACvCZ,GAASa,YAAcoT,EAASpT,YAChCb,GAASc,iBAAmBmT,EAASnT,iBACrCd,GAASe,eAAiBkT,EAASlT,eACnCf,GAASgB,mBAAqBA,IA4ClC,SAASmU,GAAmBG,EAAYr/C,EAAkBC,EAAoBjsC,EAAKwoC,EAAU56B,GAEzF,OAAOqoE,GAAeqV,GAAeD,EAAY7iD,EAD3BA,EAASrjC,SAASQ,IAAIgnC,IACgCX,EAAkBC,GAAqBjsC,EAAK4N,GAE5H,SAASu8E,GAAoBkB,EAAYr/C,EAAkBC,EAAoBjsC,EAAKwoC,EAAU56B,GAC1F,IAAIhC,EAAkB48B,EAASrjC,SAASQ,IAAIgnC,IACxC6rC,EAAO8S,GAAeD,EAAY7iD,EAAU,IAAI+iD,GAAsB3/E,GAAkBogC,EAAkBC,GAC1Gu/C,EAAkBC,GAA6BzrF,GACnD,OAAO0rF,GAAqBC,GAAYh3F,OAAQshF,GAAgB,MAAOuC,EAAMgT,EAAiB59E,IAElG,SAAS09E,GAAeD,EAAY7iD,EAAU58B,EAAiBogC,EAAkBC,GAC7E,IAAInpB,EAAY0lB,EAASrjC,SAASQ,IAAI8+C,IAClCkjB,EAAen/B,EAASrjC,SAASQ,IAAI4wD,IAEzC,OACI/tB,SAAUA,EACVrjC,SAAUkmF,EAAYr/C,iBAAkBA,EACxCyvC,eAAgBxvC,EAAoBnpB,UAAWA,EAAWlX,gBAAiBA,EAAiBD,SAJjFC,EAAgB2P,eAAe,KAAM,MAIgEosD,aAAcA,GAGtI,SAASyiB,GAAwB1+E,EAAYkgF,EAAWC,EAAYj+E,GAChE,IAAI49E,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAYh3F,OAAQitC,GAAoB,MAAOl2B,EAAYkgF,EAAWJ,EAAiB59E,IAEvH,SAASy8E,GAAyB3+E,EAAY2uE,EAASwR,EAAYrwE,GAQ/D,OALIqwE,EAFwBC,GAAiBnmF,IAAI00E,EAAQx3D,QAAQw8D,kBAAkBlmE,SAASla,QAK3EwsF,GAA6BI,GAEvCH,GAAqBC,GAAYh3F,OAAQuhF,GAAqB,MAAOxqE,EAAY2uE,EAASwR,EAAYrwE,IAEjH,SAAS8uE,GAAuBnsC,EAAYL,EAAgB+kC,EAAqB7iF,GAE7E,OAAOm2E,GAAkBh4B,EAAYL,EAAgB+kC,EAkFzD,SAASkJ,EAAiC/rF,GACtC,IAAIzF,EASJ,SAASyxF,EAAiBhsF,GACtB,IAAIisF,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkB/zB,MACT6zB,aAAcA,EAAcC,uBAAwBA,IAEjElsF,EAAI9G,UAAU6J,QAAQ,SAAUmT,GAC5B,IAAIk2E,EAAWD,GAAkBxmF,IAAIuQ,EAAKjX,OACxB,KAAbiX,EAAKzQ,OAA8C2mF,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpErsF,EAAI69E,QAAQ96E,QAAQ,SAAU1P,GAC1Bi5F,GAA2BvpF,QAAQ,SAAUqpF,EAAUntF,GAC/C7F,EAAiB6F,GAAOnG,aAAezF,IACvC44F,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,yBAI/DJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiBhsF,GAAsCksF,EAAyB3xF,EAAG2xF,uBAC5F,OAD+C3xF,EAAG0xF,cAgClD,SAASM,EAAuBvsF,GAC5B,IAAK,IAAIhL,EAAI,EAAGA,EAAIgL,EAAI9G,UAAU/D,OAAQH,IAAK,CAC3C,IAAImkB,EAAWnZ,EAAI9G,UAAUlE,GACzBk3F,IAIA/yE,EAAS1T,OAAS,MAEtB,IAAI2mF,EAAWD,GAAkBxmF,IAAIwT,EAASla,OAC1CmtF,IACAjzE,EAAS1T,OAA0B,KAAjB0T,EAAS1T,MAA8C2mF,EAAS3mF,MAClF0T,EAASH,KAAOygE,GAAa2S,EAASpzE,MACtCG,EAASriB,MAAQs1F,EAASt1F,OAGlC,GAAIw1F,GAA2Bl0B,KAAO,EAAG,CACrC,IAAIo0B,EAAc,IAAIvvF,IAAI+C,EAAI69E,SAC9ByO,GAA2BvpF,QAAQ,SAAUqpF,EAAUntF,GACnD,GAAIutF,EAAY3kD,IAAIzuC,EAAiB6F,GAAOnG,YAAa,CACrD,IAAIqgB,GACAla,MAAOA,EACPwG,MAAO2mF,EAAS3mF,OAASymF,EAAyB,KAA0B,GAC5ElzE,KAAMygE,GAAa2S,EAASpzE,MAC5BliB,MAAOs1F,EAASt1F,MAChByE,MAAOyE,EAAI9G,UAAU/D,QAEzB6K,EAAI9G,UAAU/B,KAAKgiB,GACnBnZ,EAAIw9E,eAAehG,GAASv4E,IAAUka,MArDtDozE,CADAvsF,EAAMA,EAAI7M,QAAQ,WAAc,OAAOmkF,MAEhCt3E,GANIA,EAtFW+rF,CAAiC/rF,IAG3D,IA0KI2rF,GAQAc,GACAC,GACAC,GApLAR,GAAoB,IAAI5tF,IACxB+tF,GAA6B,IAAI/tF,IACjCutF,GAAmB,IAAIvtF,IAC3B,SAASgsF,GAAsB6B,GAE3B,IAAItmF,EADJqmF,GAAkBpzE,IAAIqzE,EAASntF,MAAOmtF,GAER,mBAAnBA,EAASntF,QAAyB6G,EAAgB1M,EAAiBgzF,EAASntF,SAC/C,mBAA7B6G,EAAchN,YACrBwzF,GAA2BvzE,IAAIqzE,EAASntF,MAAOmtF,GAGvD,SAAS5B,GAA2BoC,EAAMC,GACtC,IACIvF,EAAcrN,GADAA,GAAkB2E,GAAkCiO,IACtBpX,MAAM,GAAG5yD,QAAQ7F,eACjE8uE,GAAiB/yE,IAAI6zE,EAAMtF,GAE/B,SAASmD,KACL0B,GAAkBnkD,QAClBskD,GAA2BtkD,QAC3B8jD,GAAiB9jD,QAQrB,SAASyjD,GAA6BzrF,GAClC,GAA+B,IAA3BmsF,GAAkB/zB,KAClB,OAAOp4D,EAEX,IAAI8sF,EAWJ,SAASC,EAA2C/sF,GAGhD,IAFA,IAAIgtF,KACAC,EAAiB,KACZj4F,EAAI,EAAGA,EAAIgL,EAAIy1E,MAAMtgF,OAAQH,IAAK,CACvC,IAAIqlF,EAAUr6E,EAAIy1E,MAAMzgF,GACJ,EAAhBqlF,EAAQ50E,QACRwnF,EAAiB5S,GAEjB4S,GAAkC,KAAhB5S,EAAQ50E,OAC1B0mF,GAAkBtkD,IAAIwyC,EAAQlhE,SAASla,SACvC+tF,EAAkC71F,KAAK81F,EAAe5iF,WACtD4iF,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2C/sF,GACxF,GAAsD,IAAlD8sF,EAAuC33F,OACvC,OAAO6K,EAIXA,EAAMA,EAAI7M,QAAQ,WAAc,OAAOmkF,KACvC,IAAK,IAAItiF,EAAI,EAAGA,EAAI83F,EAAuC33F,OAAQH,IAC/Dk4F,EAAgCltF,EAAK8sF,EAAuC93F,IAEhF,OAAOgL,EAiBP,SAASktF,EAAgCrB,EAAYsB,GACjD,IAAK,IAAIn4F,EAAIm4F,EAAU,EAAGn4F,EAAI62F,EAAWpW,MAAMtgF,OAAQH,IAAK,CACxD,IAAIqlF,EAAUwR,EAAWpW,MAAMzgF,GAC/B,GAAoB,EAAhBqlF,EAAQ50E,MAER,OAEJ,GAAoB,KAAhB40E,EAAQ50E,MAA2C,CACnD,IAAI0T,EAAWkhE,EAAQlhE,SACnBizE,EAAWD,GAAkBxmF,IAAIwT,EAASla,OAC1CmtF,IACA/R,EAAQ50E,OAAyB,KAAhB40E,EAAQ50E,MAA8C2mF,EAAS3mF,MAChF0T,EAASH,KAAOygE,GAAa2S,EAASpzE,MACtCG,EAASriB,MAAQs1F,EAASt1F,UA4E9C,SAASq0F,GAAuBhhF,EAAM05E,EAAYmE,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAC5F,IAAI7N,EAAUlwE,EAAKnK,IAAIy1E,MAAMoO,GAE7B,OADAkE,GAAmB59E,EAAMkwE,EAAS2N,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACxD,IAAhB7N,EAAQ50E,MACZmwE,GAAqBzrE,EAAM05E,GAAY/sF,WACvCiC,EAER,SAASqyF,GAAuBjhF,EAAM05E,EAAYmE,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GAC5F,IAAI7N,EAAUlwE,EAAKnK,IAAIy1E,MAAMoO,GAE7B,OADAmF,GAAmB7+E,EAAMkwE,EAAS2N,EAAUzrD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAIkqD,EAAIC,GACxD,IAAhB7N,EAAQ50E,MACZmwE,GAAqBzrE,EAAM05E,GAAY/sF,WACvCiC,EAER,SAAS2xF,GAAwBvgF,GAC7B,OAAOuhF,GAAqBC,GAAYjwD,cAAe66C,GAAoB,MAAOpsE,IAEtF,SAASwgF,GAAwBxgF,GAC7B,OAAOuhF,GAAqBC,GAAYprD,eAAgBi2C,GAAoB,MAAOrsE,IAEvF,SAASygF,GAAiBzgF,GACtB,OAAOuhF,GAAqBC,GAAYtsE,QAASo3D,GAAa,MAAOtsE,IAazE,SAAS+/E,GAAoB//E,EAAME,GAC/BqiF,GAAeviF,EACfwiF,GAAoBtiF,EAExB,SAASygF,GAAiB3gF,EAAME,EAAWulB,EAAW2oD,GAElD,OADA2R,GAAoB//E,EAAME,GACnBqhF,GAAqBC,GAAY/U,YAAazsE,EAAKnK,IAAI42E,YAAa,MAAOzsE,EAAME,EAAWulB,EAAW2oD,IAElH,SAASwS,GAAsB5gF,EAAM2/E,GACjC,GAAiB,IAAb3/E,EAAK2U,MACL,MAAMu4D,GAAmBsU,GAAYc,KAGzC,OADAvC,GAAoB//E,EAAMijF,GAAyBjjF,EAAM,IAClDA,EAAKnK,IAAI62E,iBAChB,SAASwW,EAAuBljF,EAAME,EAAW29E,GAE7C,IADA,IAAIhtF,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/B,IAAI4/E,EAAUlwE,EAAKnK,IAAIy1E,MAAMprE,GAU7B,OATkB,IAAdy/E,EACAwD,GAAwBnjF,EAAMkwE,EAAS2N,EAAUhtF,GAGjDuyF,GAAwBpjF,EAAMkwE,EAAS2N,EAAUhtF,GAEjC,MAAhBq/E,EAAQ50E,OACRykF,GAAoB//E,EAAMijF,GAAyBjjF,EAAME,IAErC,IAAhBgwE,EAAQ50E,MACZmwE,GAAqBzrE,EAAMkwE,EAAQhwE,WAAWvT,WAC9CiC,GAlBiDoR,GAqB7D,SAAS6gF,GAAoB7gF,EAAM2/E,GAC/B,GAAiB,IAAb3/E,EAAK2U,MACL,MAAMu4D,GAAmBsU,GAAYc,KAGzC,OADAvC,GAAoB//E,EAAMqjF,GAA0BrjF,EAAM,IACnDA,EAAKnK,IAAI82E,eAChB,SAAS2W,EAAuBtjF,EAAME,EAAW29E,GAE7C,IADA,IAAIhtF,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/B,IAAI4/E,EAAUlwE,EAAKnK,IAAIy1E,MAAMprE,GAU7B,OATkB,IAAdy/E,EACAwD,GAAwBnjF,EAAMkwE,EAAS2N,EAAUhtF,GAGjDuyF,GAAwBpjF,EAAMkwE,EAAS2N,EAAUhtF,GAEjC,EAAhBq/E,EAAQ50E,OACRykF,GAAoB//E,EAAMqjF,GAA0BrjF,EAAME,IAEtC,IAAhBgwE,EAAQ50E,MACZmwE,GAAqBzrE,EAAMkwE,EAAQhwE,WAAWvT,WAC9CiC,GAlB+CoR,GAqB3D,SAASmjF,GAAwBnjF,EAAMkwE,EAAS2N,EAAU0F,GAEtD,GADc3F,GAAmB1yF,WAAM,EAAQgC,GAAU8S,EAAMkwE,EAAS2N,GAAW0F,IACtE,CACT,IAAI1yF,EAAsB,IAAbgtF,EAA+B0F,EAAY,GAAKA,EAC7D,GAAoB,MAAhBrT,EAAQ50E,MAAmC,CAE3C,IADA,IAAIkoF,KACK34F,EAAI,EAAGA,EAAIqlF,EAAQrC,SAAS7iF,OAAQH,IAAK,CAC9C,IAAImhD,EAAUkkC,EAAQrC,SAAShjF,GAC3B8B,EAAQkE,EAAOhG,GACC,EAAhBmhD,EAAQ1wC,QACRkoF,GA4Be5zF,EA5ByBo8C,EAAQivC,gBA+BzD,eADPrrF,EAIJ,SAAS6zF,EAAoBxpE,GACzB,OAAOA,EAAMtJ,QAAQ+yE,GAAmB,WAEpC,IADA,IAAIn3F,KACK+D,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpC/D,EAAE+D,GAAMvF,UAAUuF,GAEtB,MAAO,IAAM/D,EAAE,GAAG48C,gBAVfs6C,CAAoB7zF,EAAK+gB,QAAQ,QAAS,SA7B7BgzE,GAA2Bh3F,IAGvC,IAAI0kF,EAAQnB,EAAQ9rE,OAChB4hC,EAAKulC,GAAcvrE,EAAMqxE,EAAMnxE,WAAWwuE,cAC9C,GAAK2C,EAAM34D,QAAQ9oB,KAMf,IAAK,IAAIkjD,KAAQ0wC,EAEA,OADT72F,EAAQ62F,EAAc1wC,IAEtB9yC,EAAKwB,SAASwjB,aAAaghB,EAAI8M,EAAMnmD,GAGrCqT,EAAKwB,SAASulB,gBAAgBif,EAAI8M,QAV1C9yC,EAAKwB,SAAS2Z,SAAS6qB,EAAI,YAAct1B,KAAK7b,UAAU2uF,EAAe,KAAM,KAoB7F,IAAmC5zF,EAHnC,SAASwzF,GAAwBpjF,EAAMkwE,EAAS2N,EAAUhtF,GACtDguF,GAAmB3zF,WAAM,EAAQgC,GAAU8S,EAAMkwE,EAAS2N,GAAWhtF,KA1GzE,SAAW2wF,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,QA2GnB,IAAIkC,GAAoB,WAUxB,SAASC,GAA2Bh3F,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAM4C,WAAWoV,MAAM,EAAG,IAAMhY,EAE3D,MAAOG,GACH,MAAO,yDAGf,SAASm2F,GAAyBjjF,EAAME,GACpC,IAAK,IAAIrV,EAAIqV,EAAWrV,EAAImV,EAAKnK,IAAIy1E,MAAMtgF,OAAQH,IAAK,CACpD,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GAC7B,GAAoB,MAAhBqlF,EAAQ50E,OAAqC40E,EAAQrC,UAAYqC,EAAQrC,SAAS7iF,OAClF,OAAOH,EAGf,OAAO,KAEX,SAASw4F,GAA0BrjF,EAAME,GACrC,IAAK,IAAIrV,EAAIqV,EAAWrV,EAAImV,EAAKnK,IAAIy1E,MAAMtgF,OAAQH,IAAK,CACpD,IAAIqlF,EAAUlwE,EAAKnK,IAAIy1E,MAAMzgF,GAC7B,GAAqB,EAAhBqlF,EAAQ50E,OAAkC40E,EAAQrC,UAAYqC,EAAQrC,SAAS7iF,OAChF,OAAOH,EAGf,OAAO,KAEX,IAAI61F,GAA+B,WAC/B,SAASA,EAAc1gF,EAAME,GACzBxW,KAAKsW,KAAOA,EACZtW,KAAKwW,UAAYA,EACA,MAAbA,IACAxW,KAAKwW,UAAYA,EAAY,GAEjCxW,KAAKwmF,QAAUlwE,EAAKnK,IAAIy1E,MAAMprE,GAG9B,IAFA,IAAImxE,EAAQ3nF,KAAKwmF,QACb0T,EAAS5jF,EACNqxE,GAAiD,IAAzB,EAAdA,EAAM/1E,QACnB+1E,EAAQA,EAAMjtE,OAElB,IAAKitE,EACD,MAAQA,GAASuS,GACbvS,EAAQ7C,GAAaoV,GACrBA,EAASA,EAAOx/E,OAGxB1a,KAAK2nF,MAAQA,EACb3nF,KAAKk6F,OAASA,EA+GlB,OA7GA95F,OAAO+B,eAAe60F,EAAcn2F,UAAW,gBAC3CiR,IAAK,WAED,OAAO+vE,GAAc7hF,KAAKk6F,OAAQl6F,KAAK2nF,MAAMnxE,WAAW2S,eAAiBnpB,KAAKsW,MAElF81B,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,YAC3CiR,IAAK,WAAc,OAAO47E,GAAiB1tF,KAAKk6F,OAAQl6F,KAAK2nF,QAC7Dv7C,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,aAC3CiR,IAAK,WAAc,OAAO9R,KAAKm6F,aAAa7wF,WAC5C8iC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,WAC3CiR,IAAK,WAAc,OAAO9R,KAAKm6F,aAAapgF,SAC5CqyB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,kBAC3CiR,IAAK,WACD,IAAI8U,KACJ,GAAI5mB,KAAK2nF,MACL,IAAK,IAAIxmF,EAAInB,KAAK2nF,MAAMnxE,UAAY,EAAGrV,GAAKnB,KAAK2nF,MAAMnxE,UAAYxW,KAAK2nF,MAAMjB,WAAYvlF,IAAK,CAC3F,IAAIi5F,EAAWp6F,KAAKk6F,OAAO/tF,IAAIy1E,MAAMzgF,GAChB,MAAjBi5F,EAASxoF,OACTgV,EAAOtjB,KAAK82F,EAAS90E,SAASla,OAElCjK,GAAKi5F,EAAS1T,WAGtB,OAAO9/D,GAEXwlB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,cAC3CiR,IAAK,WACD,IAAI2mE,KACJ,GAAIz4E,KAAK2nF,MAAO,CACZ0S,GAAkBr6F,KAAKk6F,OAAQl6F,KAAK2nF,MAAOlP,GAC3C,IAAK,IAAIt3E,EAAInB,KAAK2nF,MAAMnxE,UAAY,EAAGrV,GAAKnB,KAAK2nF,MAAMnxE,UAAYxW,KAAK2nF,MAAMjB,WAAYvlF,IAAK,CAC3F,IAAIi5F,EAAWp6F,KAAKk6F,OAAO/tF,IAAIy1E,MAAMzgF,GAChB,MAAjBi5F,EAASxoF,OACTyoF,GAAkBr6F,KAAKk6F,OAAQE,EAAU3hB,GAE7Ct3E,GAAKi5F,EAAS1T,YAGtB,OAAOjO,GAEXrsC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,0BAC3CiR,IAAK,WACD,IAAI22E,EA6DhB,SAAS6R,EAAgBhkF,GACrB,KAAOA,IAAS6uE,GAAgB7uE,IAC5BA,EAAOA,EAAKoE,OAEhB,OAAIpE,EAAKoE,OACEmnE,GAAcvrE,EAAKoE,OAAQoqE,GAAaxuE,GAAME,WAElD,KApEc8jF,CAAgBt6F,KAAKm6F,cAClC,OAAO1R,EAASA,EAAOzD,mBAAgB9/E,GAE3CknC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe60F,EAAcn2F,UAAW,cAC3CiR,IAAK,WACD,OAA4B,EAArB9R,KAAKwmF,QAAQ50E,MAA2BmzE,GAAW/kF,KAAKsW,KAAMtW,KAAKwmF,SACtEzB,GAAW/kF,KAAKk6F,OAAQl6F,KAAK2nF,QAErCv7C,YAAY,EACZC,cAAc,IAElB2qD,EAAcn2F,UAAU0iF,SAAW,SAAUrmC,GAEzC,IADA,IAIIq9C,EACAC,EALArzF,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAIN,EAArB5G,KAAKwmF,QAAQ50E,OACb2oF,EAAav6F,KAAKsW,KAAKnK,IACvBquF,EAAex6F,KAAKwmF,QAAQhwE,YAG5B+jF,EAAav6F,KAAKk6F,OAAO/tF,IACzBquF,EAAex6F,KAAK2nF,MAAMnxE,WAI9B,IAAIikF,EAoBZ,SAASC,EAAmB1C,EAAYxhF,GAEpC,IADA,IAAIikF,GAAmB,EACdt5F,EAAI,EAAGA,GAAKqV,EAAWrV,IAER,EADN62F,EAAWpW,MAAMzgF,GACnByQ,OACR6oF,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAWj7F,QAVM,WACb,IAAIoH,EAEJ,QADAi0F,IAC4BF,GAChB/zF,EAAKw2C,EAAQ35C,OAAOuD,KAAKtF,MAAMkF,EAAIlD,GAAU05C,GAAU/1C,IAGxDs8E,KAIXkX,EAAsBF,IACtBv9C,EAAQ35C,MAAM,qEACd25C,EAAQ35C,MAAM/B,MAAM07C,EAAS15C,EAAS2D,MAGvC6vF,EAnIuB,GAwJlC,SAASqD,GAAkB/jF,EAAMkwE,EAAS/N,GACtC,IAAK,IAAImiB,KAAWpU,EAAQ/N,WACxBA,EAAWmiB,GAAWrI,GAAcj8E,EAAMkwE,EAASA,EAAQ/N,WAAWmiB,IAG9E,SAAS/C,GAAqBnvE,EAAQ9d,EAAIb,EAAMpD,GAC5C,IAAIk0F,EAAYjC,GACZ/5E,EAAUg6E,GACViC,EAAehC,GACnB,IACIF,GAAiBlwE,EACjB,IAAIouB,EAASlsC,EAAGpJ,MAAMuI,EAAMpD,GAI5B,OAHAkyF,GAAeh6E,EACfi6E,GAAoBgC,EACpBlC,GAAiBiC,EACV/jD,EAEX,MAAO1zC,GACH,GAhrHR,SAAS23F,EAAiBluC,GACtB,QAAS0V,GAAgB1V,GA+qHjBkuC,CAAiB33F,KAAOy1F,GACxB,MAAMz1F,EAEV,MArsHR,SAAS43F,EAAsBnuC,EAAK9yC,GAOhC,OANM8yC,aAAejpD,QAGjBipD,EAAM,IAAIjpD,MAAMipD,EAAIhnD,aAExBy9E,GAAiBz2B,EAAK9yC,GACf8yC,EA8rHGmuC,CAAsB53F,EAAG63F,OAGvC,SAASA,KACL,OAAOpC,GAAe,IAAI7B,GAAc6B,GAAcC,IAAqB,KAE/E,IAAIpB,GAAuC,WACvC,SAASA,EAAsB9pB,GAC3B5tE,KAAK4tE,SAAWA,EAqBpB,OAnBA8pB,EAAsB72F,UAAU6mB,eAAiB,SAAUsH,EAASksE,GAChE,OAAO,IAAIC,GAAen7F,KAAK4tE,SAASlmD,eAAesH,EAASksE,KAEpExD,EAAsB72F,UAAUu3B,MAAQ,WAChCp4B,KAAK4tE,SAASx1C,OACdp4B,KAAK4tE,SAASx1C,SAGtBs/D,EAAsB72F,UAAU6a,IAAM,WAC9B1b,KAAK4tE,SAASlyD,KACd1b,KAAK4tE,SAASlyD,OAGtBg8E,EAAsB72F,UAAUu6F,kBAAoB,WAChD,OAAIp7F,KAAK4tE,SAASwtB,kBACPp7F,KAAK4tE,SAASwtB,oBAElBjxF,QAAQC,QAAQ,OAEpBstF,EAvB+B,GAyBtCyD,GAAgC,WAChC,SAASA,EAAevtB,GACpB5tE,KAAK4tE,SAAWA,EAShB5tE,KAAKq7F,oBAAsBJ,GAC3Bj7F,KAAK0I,KAAO1I,KAAK4tE,SAASllE,KAoI9B,OAlIAyyF,EAAet6F,UAAUiiF,mBAAqB,SAAUxqC,GAAiB,OAAOt4C,KAAKq7F,oBAAoB/iD,IACzG6iD,EAAet6F,UAAU4oB,YAAc,SAAUpH,IAzmKrD,SAASi5E,EAAyBj5E,GAC9Bm3D,GAAuB3kC,OAAOxyB,EAAK+1D,YAymK/BkjB,CAAyB7hB,GAAap3D,IAClCriB,KAAK4tE,SAASnkD,aACdzpB,KAAK4tE,SAASnkD,YAAYpH,IAGlC84E,EAAet6F,UAAU2qB,QAAU,WAAcxrB,KAAK4tE,SAASpiD,WAC/D2vE,EAAet6F,UAAUq4B,cAAgB,SAAUhzB,EAAMq1F,GACrD,IAAIj/C,EAAKt8C,KAAK4tE,SAAS10C,cAAchzB,EAAMq1F,GACvCC,EAAWx7F,KAAK8iF,mBAAmBxmC,GACvC,GAAIk/C,EAAU,CACV,IAAIC,EAAU,IAAIljB,GAAaj8B,EAAI,KAAMk/C,GACzCC,EAAQv1F,KAAOA,EACfwzE,GAAe+hB,GAEnB,OAAOn/C,GAEX6+C,EAAet6F,UAAUukC,cAAgB,SAAUniC,GAC/C,IAAIkiC,EAAUnlC,KAAK4tE,SAASxoC,cAAcniC,GACtCu4F,EAAWx7F,KAAK8iF,mBAAmB39C,GAIvC,OAHIq2D,GACA9hB,GAAe,IAAIvB,GAAUhzC,EAAS,KAAMq2D,IAEzCr2D,GAEXg2D,EAAet6F,UAAU8oB,WAAa,SAAU1mB,GAC5C,IAAI0G,EAAO3J,KAAK4tE,SAASjkD,WAAW1mB,GAChCu4F,EAAWx7F,KAAK8iF,mBAAmBn5E,GAIvC,OAHI6xF,GACA9hB,GAAe,IAAIvB,GAAUxuE,EAAM,KAAM6xF,IAEtC7xF,GAEXwxF,EAAet6F,UAAUsrB,YAAc,SAAUzR,EAAQs+D,GACrD,IAAIyiB,EAAUhiB,GAAa/+D,GACvBghF,EAAejiB,GAAaT,GAC5ByiB,GAAWC,GAAgBD,aAAmBljB,IAC9CkjB,EAAQjjB,SAASkjB,GAErB17F,KAAK4tE,SAASzhD,YAAYzR,EAAQs+D,IAEtCmiB,EAAet6F,UAAU0oB,aAAe,SAAU7O,EAAQs+D,EAAUD,GAChE,IAAI0iB,EAAUhiB,GAAa/+D,GACvBghF,EAAejiB,GAAaT,GAC5B2iB,EAAaliB,GAAaV,GAC1B0iB,GAAWC,GAAgBD,aAAmBljB,IAC9CkjB,EAAQlyE,aAAaoyE,EAAYD,GAErC17F,KAAK4tE,SAASrkD,aAAa7O,EAAQs+D,EAAUD,IAEjDoiB,EAAet6F,UAAU2oB,YAAc,SAAU9O,EAAQkhF,GACrD,IAAIH,EAAUhiB,GAAa/+D,GACvBghF,EAAejiB,GAAamiB,GAC5BH,GAAWC,GAAgBD,aAAmBljB,IAC9CkjB,EAAQjyE,YAAYkyE,GAExB17F,KAAK4tE,SAASpkD,YAAY9O,EAAQkhF,IAEtCT,EAAet6F,UAAU+6B,kBAAoB,SAAUgsD,EAAgBiU,GACnE,IAAIv/C,EAAKt8C,KAAK4tE,SAAShyC,kBAAkBgsD,EAAgBiU,GACrDL,EAAWP,MAAwE,KAIvF,OAHIO,GACA9hB,GAAe,IAAInB,GAAaj8B,EAAI,KAAMk/C,IAEvCl/C,GAEX6+C,EAAet6F,UAAUy6B,aAAe,SAAUghB,EAAIp2C,EAAMjD,EAAOs4F,GAC/D,IAAIE,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAE9BkjB,EAAQ7uF,WADO2uF,EAAYA,EAAY,IAAMr1F,EAAOA,GACrBjD,GAEnCjD,KAAK4tE,SAAStyC,aAAaghB,EAAIp2C,EAAMjD,EAAOs4F,IAEhDJ,EAAet6F,UAAUw8B,gBAAkB,SAAUif,EAAIp2C,EAAMq1F,GAC3D,IAAIE,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAE9BkjB,EAAQ7uF,WADO2uF,EAAYA,EAAY,IAAMr1F,EAAOA,GACrB,MAEnClG,KAAK4tE,SAASvwC,gBAAgBif,EAAIp2C,EAAMq1F,IAE5CJ,EAAet6F,UAAUgyB,SAAW,SAAUypB,EAAIp2C,GAC9C,IAAIu1F,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAC9BkjB,EAAQ35D,QAAQ57B,IAAQ,GAE5BlG,KAAK4tE,SAAS/6C,SAASypB,EAAIp2C,IAE/Bi1F,EAAet6F,UAAUiyB,YAAc,SAAUwpB,EAAIp2C,GACjD,IAAIu1F,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAC9BkjB,EAAQ35D,QAAQ57B,IAAQ,GAE5BlG,KAAK4tE,SAAS96C,YAAYwpB,EAAIp2C,IAElCi1F,EAAet6F,UAAUsxB,SAAW,SAAUmqB,EAAIw/C,EAAO74F,EAAO2O,GAC5D,IAAI6pF,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAC9BkjB,EAAQhtF,OAAOqtF,GAAS74F,GAE5BjD,KAAK4tE,SAASz7C,SAASmqB,EAAIw/C,EAAO74F,EAAO2O,IAE7CupF,EAAet6F,UAAU2xB,YAAc,SAAU8pB,EAAIw/C,EAAOlqF,GACxD,IAAI6pF,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAC9BkjB,EAAQhtF,OAAOqtF,GAAS,MAE5B97F,KAAK4tE,SAASp7C,YAAY8pB,EAAIw/C,EAAOlqF,IAEzCupF,EAAet6F,UAAU0xB,YAAc,SAAU+pB,EAAIp2C,EAAMjD,GACvD,IAAIw4F,EAAUhiB,GAAan9B,GACvBm/C,GAAWA,aAAmBljB,KAC9BkjB,EAAQhuB,WAAWvnE,GAAQjD,GAE/BjD,KAAK4tE,SAASr7C,YAAY+pB,EAAIp2C,EAAMjD,IAExCk4F,EAAet6F,UAAUs7B,OAAS,SAAUx6B,EAAQo6B,EAAWwQ,GAC3D,GAAsB,iBAAX5qC,EAAqB,CAC5B,IAAI85F,EAAUhiB,GAAa93E,GACvB85F,GACAA,EAAQnjB,UAAUh1E,KAAK,IAAI40E,GAAcn8C,EAAWwQ,IAG5D,OAAOvsC,KAAK4tE,SAASzxC,OAAOx6B,EAAQo6B,EAAWwQ,IAEnD4uD,EAAet6F,UAAUuZ,WAAa,SAAUiI,GAAQ,OAAOriB,KAAK4tE,SAASxzD,WAAWiI,IACxF84E,EAAet6F,UAAU+7C,YAAc,SAAUv6B,GAAQ,OAAOriB,KAAK4tE,SAAShxB,YAAYv6B,IAC1F84E,EAAet6F,UAAU4wB,SAAW,SAAUpP,EAAMpf,GAAS,OAAOjD,KAAK4tE,SAASn8C,SAASpP,EAAMpf,IAC1Fk4F,EAhJwB,GAuL/BY,GAAkC,SAAU9uD,GAE5C,SAAS8uD,EAAiBzxC,EAAYJ,EAAsB8xC,GACxD,IAAI9uD,EAGJD,EAAO1rC,KAAKvB,OAASA,KAIrB,OAHAktC,EAAMod,WAAaA,EACnBpd,EAAMgd,qBAAuBA,EAC7Bhd,EAAM8uD,oBAAsBA,EACrB9uD,EAUX,OAnBAxsC,EAAUq7F,EAAkB9uD,GAW5B8uD,EAAiBl7F,UAAUC,OAAS,SAAUmpD,GAC1CisC,KAIA,IAAI/pF,EA7BZ,SAAS8vF,EAAwB9vF,GAC7B,IAAI9G,EAAY9E,MAAMm8D,KAAKvwD,EAAI9G,WAC3B2kF,EAAUzpF,MAAMm8D,KAAKvwD,EAAI69E,SACzBL,KACJ,IAAK,IAAI/nF,KAAOuK,EAAIw9E,eAChBA,EAAe/nF,GAAOuK,EAAIw9E,eAAe/nF,GAE7C,OACItC,QAAS6M,EAAI7M,QACb2qF,OAAQ99E,EAAI89E,OAAQ5kF,UAAWA,EAAW2kF,QAASA,EAASL,eAAgBA,GAoBlEsS,CAAwB7V,GAAkBpmF,KAAKg8F,sBACzD,OAAO9Z,GAASI,kBAAkBtiF,KAAKsqD,WAAYL,GAAkBhmC,GAASE,KAAMnkB,KAAKkqD,qBAAsB/9C,IAE5G4vF,EApB0B,CAqBnC50E,IA8BE+0E,GAA8C,SAAUjvD,GAExD,SAASivD,IACL,OAAkB,OAAXjvD,GAAmBA,EAAOzrC,MAAMxB,KAAMqB,YAAcrB,KAO/D,OATAU,EAAUw7F,EAA8BjvD,GAIxCivD,EAA6Br7F,UAAU6mB,eAAiB,SAAUsH,EAASksE,GACvE,IAAIpjF,EAAWm1B,EAAOpsC,UAAU6mB,eAAenmB,KAAKvB,KAAMgvB,EAASksE,GAEnE,OADApjF,EAASujF,oBAAsB,SAAU/iD,GAAiB,OAAO,IAAI6jD,GAAoB7jD,IAClFxgC,GAEJokF,EAVsC,CAW/CxE,IAMEyE,GAAqC,WACrC,SAASA,EAAoBC,GACzBp8F,KAAKo8F,YAAcA,EAuEvB,OArEAh8F,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,aACjDiR,IAAK,WAAc,OAAO68B,GAAY3uC,KAAKo8F,aAAa5lF,WACxD41B,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,QACjDiR,IAAK,WAAc,OAAO68B,GAAY3uC,KAAKo8F,aAAaplF,WACxDo1B,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,YACjDiR,IAAK,WAAc,OAAOo9B,GAAYlvC,KAAKo8F,cAC3ChwD,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,aACjDiR,IAAK,WAAc,OAAO+8B,GAAiB7uC,KAAKo8F,cAChDhwD,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,kBACjDiR,IAAK,WACD,IAAIuqF,EAAY1tD,GAAY3uC,KAAKo8F,aAE7BjmF,EADYkmF,EAAUrlF,UACJxE,IAAO9J,KAAK2zF,EAAU7lF,WACxC8lF,EAAgC,KAAdnmF,EAAMvE,MAC5B,GAAI0qF,EAAkB,EAAG,CACrB,IAAIC,EAAoBpmF,EAAMvE,OAAS,GAIvC,OAFwB5R,KAAKsW,KAAK9D,IAAO9J,KACHuS,MAAMshF,EAFtBA,EAAoBD,GAGrBjxF,IAAI,SAAUgzB,GAAgB,OAAOA,EAAa74B,OAE3E,UAEJ4mC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,cACjDiR,IAAK,WAAc,OAxqc3B,SAAS0qF,EAAa76F,GAClB,IAAIoY,EAAU40B,GAAYhtC,GAI1B,YAH0BuD,IAAtB6U,EAAQO,YACRP,EAAQO,UAtkMhB,SAASmiF,EAAkBzlF,EAAWR,GAClC,IAAIL,EAAQa,EAAUxE,IAAO9J,KAAK8N,GAClC,GAAIL,GAASA,EAAM4jB,WAAY,CAE3B,IADA,IAAI+c,KACK31C,EAAI,EAAGA,EAAIgV,EAAM4jB,WAAWz4B,OAAQH,GAAK,EAAG,CACjD,IACIijC,EAAiBjuB,EAAM4jB,WAAW54B,EAAI,GAC1C21C,EAFmB3gC,EAAM4jB,WAAW54B,KAGZ,IAApBijC,EAAwBluB,GAAiBC,EAAOa,GAAaA,EAAUotB,GAE/E,OAAO0S,EAEX,OAAO,KA0jMiB2lD,CAAkB1iF,EAAQ/C,UAAW+C,EAAQvD,YAE9DuD,EAAQO;;;;;;;OAmqcekiF,CAAax8F,KAAKo8F,cAC5ChwD,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,WAEjDiR,IAAK,WAAc,MAAM,IAAIlO,MAAM,2BACnCwoC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,0BAEjDiR,IAAK,WAAc,MAAM,IAAIlO,MAAM,2BACnCwoC,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAeg6F,EAAoBt7F,UAAW,cAEjDiR,IAAK,WAAc,MAAM,IAAIlO,MAAM,2BACnCwoC,YAAY,EACZC,cAAc,IAGlB8vD,EAAoBt7F,UAAU0iF,SAAW,SAAUrmC,GAE/C,IADA,IAAI/1C,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/Bs2C,EAAQ35C,MAAM/B,MAAM07C,EAAS15C,EAAS2D,KAEnCg1F,EAzE6B,GAmFpC/pC,GAAkB5iD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCtBjQ,EAAQm9F,8BAAgCvb,GACxC5hF,EAAQo9F,8BAAgC3b,GACxCzhF,EAAQq9F,8BAAgC3b,GACxC1hF,EAAQs9F,8BAAgC3b,GACxC3hF,EAAQu9F,8BAAgCnzB,GACxCpqE,EAAQw9F,8BAAgCpjB,GACxCp6E,EAAQy9F,8BAAgChe,GACxCz/E,EAAQ09F,8BAAgCtrF,GACxCpS,EAAQ29F,8BAAgCv2B,GACxCpnE,EAAQ49F,8BAAgCt4B,GACxCtlE,EAAQ69F,8BAAgCt3B,GACxCvmE,EAAQ89F,8BAAgCpxB,GACxC1sE,EAAQ+9F,8BAAgC9xB,GACxCjsE,EAAQg+F,8BAAgCjyB,GACxC/rE,EAAQi+F,8BAAgCzxB,GACxCxsE,EAAQk+F,8BAAgChyB,GACxClsE,EAAQm+F,8BAAgC9xB,GACxCrsE,EAAQo+F,8BAAgC78E,GACxCvhB,EAAQq+F,+BAAiCz5F,EACzC5E,EAAQs+F,+BAAiCz1D,GACzC7oC,EAAQu+F,+BAAiC3gF,GACzC5d,EAAQw+F,+BAAiClgF,GACzCte,EAAQy+F,+BAAiCj/E,GACzCxf,EAAQ0+F,+BAAiCzvE,GACzCjvB,EAAQ2+F,+BAAiCpoF,GACzCvW,EAAQ4+F,8BAAgC/wD,GACxC7tC,EAAQ6+F,8BAAgC7wD,GACxChuC,EAAQ8+F,8BAAgC9vD,GACxChvC,EAAQ++F,8BAAgCj3F,EACxC9H,EAAQg/F,8BAAgC32F,EACxCrI,EAAQi/F,+BAAiC96F,EACzCnE,EAAQk/F,8BAAgC/U,GACxCnqF,EAAQm/F,8BAAgChH,GACxCn4F,EAAQo/F,8BAAgC1c,GACxC1iF,EAAQ+yE,eAAiBA,GACzB/yE,EAAQwzE,eAAiBA,GACzBxzE,EAAQq/F,gBAz+MR,SAASA,KACDpvB,KAAcA,GAAU/7B,WACxB+7B,GAAUhkD,WAw+MlBjsB,EAAQszE,YAAcA,GACtBtzE,EAAQgzE,YAAcA,GACtBhzE,EAAQg1E,eAAiBA,GACzBh1E,EAAQkzE,sBAAwBA,GAChClzE,EAAQ8yE,aAAeA,GACvB9yE,EAAQs/F,eA/rZR,SAASA,KACL,GAAInkD,GACA,MAAM,IAAI92C,MAAM,iDAEpB62C,IAAW,GA4rZfl7C,EAAQo7C,UAAYA,GACpBp7C,EAAQmqE,OAASA,GACjBnqE,EAAQ4qE,iBAAmBA,GAC3B5qE,EAAQyqE,qBAAuBA,GAC/BzqE,EAAQ0qE,YAAcA,GACtB1qE,EAAQ2qE,uBAAyBA,GACjC3qE,EAAQupE,gBAAkBA,GAC1BvpE,EAAQwpE,sBAAwBA,GAChCxpE,EAAQg5E,aAAeA,GACvBh5E,EAAQ44E,UAAYA,GACpB54E,EAAQu/F,iBAziLR,SAASA,GAAiBC,GACtB,OAAOA,EAAS1zF,IAAI,SAAUixC,GAAM,OAAOA,EAAGhE,iBAyiLlD/4C,EAAQk6E,aAAeA,GACvBl6E,EAAQmwE,YAAcA,GACtBnwE,EAAQ8xE,oBAAsBA,GAC9B9xE,EAAQy/F,qBA/lNR,SAASA,GAAqB9kC,GAC1BqX,GAAqBrX,GA+lNzB36D,EAAQuhF,aAAeA,GACvBvhF,EAAQwhF,oBAAsBA,GAC9BxhF,EAAQshF,UAAYA,GACpBthF,EAAQ6hF,kBAAoBA,GAC5B7hF,EAAQ8sE,eAAiBA,GACzB9sE,EAAQ+sE,SAAWA,GACnB/sE,EAAQgtE,kBAAoBA,GAC5BhtE,EAAQitE,gBAAkBA,GAC1BjtE,EAAQs4D,KAAOA,GACft4D,EAAQ8sD,aAAeA,GACvB9sD,EAAQmjE,aAAeA,GACvBnjE,EAAQqxD,UAAYA,GACpBrxD,EAAQ8I,6BAA+BA,EACvC9I,EAAQ+I,UAAYA,EACpB/I,EAAQuJ,aAAeA,EACvBvJ,EAAQiJ,gBAAkBA,EAC1BjJ,EAAQ6I,MAAQA,EAChB7I,EAAQyJ,UAAYA,EACpBzJ,EAAQwJ,aAAeA,EACvBxJ,EAAQ8/D,UAAYA,GACpB9/D,EAAQ4/D,UAAYA,GACpB5/D,EAAQygE,YAAcA,GACtBzgE,EAAQ2gE,aAAeA,GACvB3gE,EAAQsgE,MAAQA,GAChBtgE,EAAQwgE,OAASA,GACjBxgE,EAAQigE,KAAOA,GACfjgE,EAAQ0/F,wBA1oRJ/4F,KAAM,mBA2oRV3G,EAAQ2/F,kBAnoRJh5F,KAAM,oBAooRV3G,EAAQ2hE,SAAWA,GACnB3hE,EAAQ0hE,QAAUA,GAClB1hE,EAAQ+hE,QAAUA,GAClB/hE,EAAQwF,iBAAmBA,EAC3BxF,EAAQ4F,eAAiBA,EACzB5F,EAAQkkB,WAAaA,GACrBlkB,EAAQokB,kBAAoBA,GAC5BpkB,EAAQyiE,WAAaA,GACrBziE,EAAQ2T,SAAW6Q,GACnBxkB,EAAQ0kB,SAAWA,GACnB1kB,EAAQwS,OAASA,GACjBxS,EAAQgnE,mBAAqBA,GAC7BhnE,EAAQ6zC,eAAiBA,GACzB7zC,EAAQ6lE,0BAA4BA,GACpC7lE,EAAQykE,cAAgBA,GACxBzkE,EAAQmG,eAAiBA,EACzBnG,EAAQwR,OAASA,GACjBxR,EAAQyR,SAAWA,GACnBzR,EAAQ0R,KAAOA,GACf1R,EAAQ2R,SAAWA,GACnB3R,EAAQ4R,KAAOA,GACf5R,EAAQktE,OAASA,GACjBltE,EAAQ4/F,YAAc1vB,GACtBlwE,EAAQi5C,oBAAsBA,GAC9Bj5C,EAAQq5C,SAAWA,GACnBr5C,EAAQw5C,UAAYA,GACpBx5C,EAAQu5C,iBAAmBA,GAC3Bv5C,EAAQs5C,aAAeA,GACvBt5C,EAAQ6rE,iBAAmBA,GAC3B7rE,EAAQqrE,SAAWA,GACnBrrE,EAAQ8rE,gBAAkBA,GAC1B9rE,EAAQ+qE,6BAA+BA,GACvC/qE,EAAQ83C,iBAAmBA,GAC3B93C,EAAQ63C,aAAeA,GACvB73C,EAAQo4C,yBAA2BA,GACnCp4C,EAAQ84C,WAAaA,GACrB94C,EAAQ4nB,gBAAkBA,GAC1B5nB,EAAQ2nB,YAAcA,GACtB3nB,EAAQ42E,sBAAwBA,GAChC52E,EAAQ6/F,iBAvnMR,SAASA,GAAiB5wF,GACtB,IAAIlP,EAAU82E,GAAgBtkE,IAAItD,GAClC,IAAKlP,EACD,MAAM,IAAIsE,MAAM,qBAAuB4K,EAAK,WAChD,OAAOlP;;;;;;;QAonMXC,EAAQ8vD,UAAYgnB,GACpB92E,EAAQw3E,uBAAyBA,GACjCx3E,EAAQo3E,6BAA+BA,GACvCp3E,EAAQ2tD,YAAcA,GACtB3tD,EAAQq4E,iBAAmBA,GAC3Br4E,EAAQ04E,gBAAkBA,GAC1B14E,EAAQqsC,QAAUosC,GAClBz4E,EAAQu4E,kBAAoBA,GAC5Bv4E,EAAQu6E,sBAAwBA,GAChCv6E,EAAQ2gF,gBAAkBA,GAC1B3gF,EAAQghF,gBAAkBA,GAC1BhhF,EAAQiV,aAAeA,GACvBjV,EAAQ4U,aAAeA,GACvB5U,EAAQqhF,aAAeA,GACvBrhF,EAAQ8/F,0BAA4BjtB,GACpC7yE,EAAQ+/F,wBAA0Bz1B,GAClCtqE,EAAQggG,wBAA0B7e,GAClCnhF,EAAQigG,wBAA0B7e,GAClCphF,EAAQkgG,cAAgBhsF,GACxBlU,EAAQmgG,oBAAsB/rF,GAC9BpU,EAAQogG,kCA/9rBR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4BtgG,EAAQ2I,wBAAwBo3D;;;;;;;QA89rBpE//D,EAAQugG,SAAW11B,GACnB7qE,EAAQwgG,kBAAoBx6F,EAC5BhG,EAAQygG,QAAUjuF,GAClBxS,EAAQ0gG,oBAAsB5uF,GAC9B9R,EAAQ2gG,UAAYptD,GACpBvzC,EAAQ4gG,aAv2I2B,EAw2InC5gG,EAAQ6gG,kBAAoB/oD,GAC5B93C,EAAQ8gG,iCAAmCzoD,GAC3Cr4C,EAAQ+gG,2BA57rBR,SAASC,GAA0BC,GAE/B,IAAIC,KAEAC,EAAS,IAAIh2F,IACjB,SAASi2F,EAAsB3jD,GAC3B,IAAI9yC,EAAUw2F,EAAO5uF,IAAIkrC,GACzB,IAAK9yC,EAAS,CACV,IAAI02F,EAAOJ,EAAiBxjD,GAC5B0jD,EAAOx7E,IAAI83B,EAAK9yC,EAAU02F,EAAK91F,KAAKrB,IACpCg3F,EAAWn9F,KAAK4G,GAEpB,OAAOA,EAwBX,OAtBAf,EAAiC+F,QAAQ,SAAU5F,GAC3CA,EAAUC,aACVo3F,EAAsBr3F,EAAUC,aAAauB,KAAK,SAAU0B,GACxDlD,EAAUkD,SAAWA,EACrBlD,EAAUC,iBAAcrE,IAGhC,IAAIsE,EAAYF,EAAUE,UACtBiF,EAASnF,EAAUmF,SAAWnF,EAAUmF,WACxCoyF,EAAcv3F,EAAUmF,OAAOnN,OACnCkI,GAAaA,EAAU0F,QAAQ,SAAU4xF,EAAUp5F,GAC/C+G,EAAOnL,KAAK,IACZq9F,EAAsBG,GAAUh2F,KAAK,SAAUgxF,GAC3CrtF,EAAOoyF,EAAcn5F,GAASo0F,EAC9BtyF,EAAU0gB,OAAO1gB,EAAUkC,QAAQo1F,GAAW,GACtB,GAApBt3F,EAAUlI,SACVgI,EAAUE,eAAYtE,SAKtCiE,EAAiCgrC,QAC1BhqC,QAAQq/D,IAAIi3B,GAAY31F,KAAK,WAAc,OAAO,QAy5rB7DvL,EAAQwhG,wBAA0B5oC,GAClC54D,EAAQyhG,iBAAmBroD,GAC3Bp5C,EAAQ0hG,eAAiB9gD,GACzB5gD,EAAQ2hG,gBAAkBnwC,GAC1BxxD,EAAQ4hG,cAAgBpkD,GACxBx9C,EAAQ6hG,QAAUn3F,EAClB1K,EAAQ8hG,gBAAkBr2F,GAC1BzL,EAAQ+hG,WAAan2F,GACrB5L,EAAQgiG,eAAiBt7F,EACzB1G,EAAQiiG,cAAgB34B,GACxBtpE,EAAQkiG,WAAa74B,GACrBrpE,EAAQmiG,gBA3XR,SAASjf,KAEL,OADAyT,KACOhU,GAASO,kBA0XpBljF,EAAQoiG,sBAAwBzL,GAChC32F,EAAQqiG,uBAjYR,SAASpf,GAAsBuW,EAAMljB,GAEjC,OADAqgB,KACOhU,GAASM,sBAAsBuW,EAAMljB,IAgYhDt2E,EAAQsiG;;;;;;;;AAtYR,SAAStf,GAAiBgW,GAEtB,OADArC,KACOhU,GAASK,iBAAiBgW,IAqYrCh5F,EAAQuiG,uCAAyChR,GACjDvxF,EAAQ6yD,gBAAkBA,GAC1B7yD,EAAQ0yD,YAAc9hD,GACtB5Q,EAAQ2yD,iBAAmBnmD,GAC3BxM,EAAQ4yD,iBAAmB7hD,GAC3B/Q,EAAQ8yD,YAAc9hD,GACtBhR,EAAQwiG,eAAiBl6D,GACzBtoC,EAAQyiG,iBAxxcR,SAASC,GAAgBjqD,EAA8EhzC,QACtF,IAATA,IAAmBA,MAGvB,IAAI+S,EAAkB/S,EAAK+S,iBAAmB0P,GAC1CwH,EAAYjqB,EAAKiqB,WAAa,KAC9B8gB,EAAe1gC,GAAgB2oC,GAC/BjI,EAAavqC,MAAQwyC,IACrBjI,EAAavqC,KAAOwyC,GAExB,IACI6B,EAAYre,GAAkBzjB,EAAiB/S,EAAKs2D,MADrCvrB,EAAa5hC,UAAU,GAAG,IAEzC2rC,EAAY/J,EAAajiC,OAAS,GAClC,GACA8hB,EAAcsgB,GAAkBlrC,EAAK2iC,UAAW3iC,EAAKgrB,eACrDlY,EAAWC,EAAgB2P,eAAemyB,EAAW9J,GACrDllB,EAAWyM,GAAgBxf,EAAU8iB,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,MAAOhL,EAAakqB,GACrGjvB,EAAS3X,IAAYlO,EAAKsM,UAAY,KACtC,IACIhI,EADAuV,EAAUH,GAAUmM,EAAU,MAElC,IACQ9S,EAAgBqgB,OAChBrgB,EAAgBqgB,QAEpB9uB,EAAYwmC,GADQH,GAAwBkK,EAAW9J,EAAcllB,EAAU/S,EAAUmX,GAC1C8gB,EAAcllB,EAAU+E,EAAa5qB,EAAKgrC,cAAgB,MACzG5Z,GAAuBvL,EAAU,MAErC,QACI1L,GAAUN,GACN9G,EAAgB2D,KAChB3D,EAAgB2D,MAExB,OAAOpS,GAyvcX/J,EAAQ2iG,yBAA2B/oD,GACnC55C,EAAQ4iG,qBAAuB9nD,GAC/B96C,EAAQ+yD,iBAAmBpnB,GAC3B3rC,EAAQkzD,iBAAmBtnB,GAC3B5rC,EAAQgzD,cAAgBnvC,GACxB7jB,EAAQizD,qBAAuBlvC,GAC/B/jB,EAAQmzD,sBAAwBrC,GAChC9wD,EAAQqzD,kBAAoB1b,GAC5B33C,EAAQszD,0BAA4BriB,GACpCjxC,EAAQozD,oBAAsB1gB,GAC9B1yC,EAAQ6iG,oBAAsBt4C,GAC9BvqD,EAAQ8iG,WAz1eR,SAASC,GAAUh5F,GAEfi+B,GAAchtB,GAA2BjR,KAw1e7C/J,EAAQgjG,iBAAmBn4C,GAC3B7qD,EAAQijG,WAAaj0E,GACrBhvB,EAAQyzD,WAAa1qC,GACrB/oB,EAAQ0zD,aAAej7B,GACvBz4B,EAAQm0D,cAAgBj7B,GACxBl5B,EAAQ8zD,eAAiBt7B,GACzBx4B,EAAQ+zD,iBAAmB96B,GAC3Bj5B,EAAQg0D,cAAgBh7B,GACxBh5B,EAAQq0D,SAAW5kC,GACnBzvB,EAAQg2D,UAAYz5B,GACpBv8B,EAAQo3D,MAAQhtD,GAChBpK,EAAQs3D,mBAAqBrxB,GAC7BjmC,EAAQ22D,OAAS9H,GACjB7uD,EAAQ62D,sBAAwBhrB,GAChC7rC,EAAQk2D,YAAcnsC,GACtB/pB,EAAQwzD,MAAQjsD,GAChBvH,EAAQs1D,gBAAkBrsB,GAC1BjpC,EAAQu1D,gBAAkBnsB,GAC1BppC,EAAQw1D,gBAAkBhsB,GAC1BxpC,EAAQy1D,gBAAkB7rB,GAC1B5pC,EAAQ01D,gBAAkB1rB,GAC1BhqC,EAAQ21D,gBAAkBxrB,GAC1BnqC,EAAQ41D,gBAAkBtrB,GAC1BtqC,EAAQ61D,gBAAkBprB,GAC1BzqC,EAAQ81D,gBAAkBhtB,GAC1B9oC,EAAQo2D,WAAa7J,GACrBvsD,EAAQq2D,WAAa3J,GACrB1sD,EAAQs2D,WAAa3J,GACrB3sD,EAAQu2D,WAAa3J,GACrB5sD,EAAQw2D,WAAa3J,GACrB7sD,EAAQ00D,eAAiB1J,GACzBhrD,EAAQ20D,eAAiBvJ,GACzBprD,EAAQ40D,eAAiBtJ,GACzBtrD,EAAQ60D,eAAiBtJ,GACzBvrD,EAAQ80D,eAAiBtJ,GACzBxrD,EAAQ+0D,eAAiBtJ,GACzBzrD,EAAQg1D,eAAiBrJ,GACzB3rD,EAAQi1D,eAAiBpJ,GACzB7rD,EAAQk1D,eAAiBnJ,GACzB/rD,EAAQm1D,eAAiBlJ,GACzBjsD,EAAQo1D,gBAAkB73C,GAC1Bvd,EAAQq1D,aAAe53C,GACvBzd,EAAQ2zD,uBAAyB7tB,GACjC9lC,EAAQ4zD,qBAAuB7tB,GAC/B/lC,EAAQ42D,cAAgB/F,GACxB7wD,EAAQ6zD,eAAiB/oB,GACzB9qC,EAAQo0D,YAAcj7B,GACtBn5B,EAAQm2D,iBAAmBn4B,GAC3Bh+B,EAAQy2D,eAAiBvvB,GACzBlnC,EAAQ82D,WAAalsB,GACrB5qC,EAAQi0D,gBAAkB52C,GAC1Brd,EAAQk0D,iBAAmB52C,GAC3Btd,EAAQuzD,kBAAoB31B,GAC5B59B,EAAQ+2D,gBAAkBz3B,GAC1Bt/B,EAAQg3D,mBAAqB10B,GAC7BtiC,EAAQi3D,kBAAoB/0B,GAC5BliC,EAAQk3D,qBAAuBj2B,GAC/BjhC,EAAQ+1D,kBAAoB92B,GAC5Bj/B,EAAQq3D,aAAe/yB,GACvBtkC,EAAQm3D,UAAYlqD,GACpBjN,EAAQu3D,iBAAmB5wB,GAC3B3mC,EAAQkjG,OAASpwE,GACjB9yB,EAAQi2D,MAAQjrB,GAChBhrC,EAAQ02D,MAAQvK,GAChBnsD,EAAQmjG,cAlucR,SAASC,GAAar5F,GAClB,OAtBJ,SAASs5F,EAAiBt5F,GAGtB,OAFkByN,GAAYzN,GAAW2J,IAqBlC2vF,CAAiBt5F,GAAWo+B,OAkucvCnoC,EAAQw3D,gBAAkB/Q,GAC1BzmD,EAAQy3D,SAAW1Q,GACnB/mD,EAAQ03D,WAAalT,GACrBxkD,EAAQ23D,SAAWjS,GACnB1lD,EAAQ43D,WAAa3Q,GACrBjnD,EAAQsjG,oBA3oWR,SAASC,GAAmBp8E,EAASq8E,GAOjC,IANA,IAAIv4F,EAAOpK,OAAOoK,KAAKu4F,GACnBpyD,EAAU,SAAUxvC,GACpBulB,EAAUA,EAAQO,QAAQ2iC,GAAgB,SAAUvH,EAAK2gD,GACrD,OAAO3gD,EAAIp7B,QAAQ+7E,EAAUD,EAAav4F,EAAKrJ,QAG9CA,EAAI,EAAGA,EAAIqJ,EAAKlJ,OAAQH,IAC7BwvC,EAAQxvC,GAEZ,OAAOulB;;;;;;;QAkoWXnnB,EAAQ0jG,wBAA0BvpD,GAClCn6C,EAAQ2jG;;;;;;;;AAvjWR,SAASC,GAAiB39F,EAAM9D,EAAYo3D,EAAgBY,GACxD,IAAIhzD,EACA08F,EAAQ59F,EACO,OAAf9D,SACyBwD,IAArBk+F,EAAM1hG,YACLgF,EAAK08F,EAAM1hG,YAAY4B,KAAK9B,MAAMkF,EAAIlD,EAAS9B,IAGhD0hG,EAAM1hG,WAAaA,GAGJ,OAAnBo3D,IAIAsqC,EAAMtqC,eAAiBA,GAEJ,OAAnBY,IAMI0pC,EAAM1pC,oBADmBx0D,IAAzBk+F,EAAM1pC,eACiB34D,KAAaqiG,EAAM1pC,eAAgBA,GAGnCA,IA8hWnCn6D,EAAQ8jG,8BAAgCnH,GACxC38F,EAAQ+jG,kBAAoB9lC,GAC5Bj+D,EAAQgkG,kBAAoBxlC,GAC5Bx+D,EAAQikG,iBAAmB1nC,GAC3Bv8D,EAAQkkG,qBAAuB1nC,GAC/Bx8D,EAAQmkG,4BAA8BrnC,GACtC98D,EAAQokG,aAAezkC,GACvB3/D,EAAQ63D,cAAgBhG,GACxB7xD,EAAQ83D,eAAiB9F,GACzBhyD,EAAQq4D,aAAelG,GACvBnyD,EAAQg4D,qBAAuB1F,GAC/BtyD,EAAQqkG,6BAxlUR,SAASC,GAA4BC,GACjC,OAAOrzC,GAA8BqzC,EAAa,SAwlUtDvkG,EAAQwkG,8BA7kUR,SAASC,GAA6BC,GAClC,OAAOxzC,GAA8BwzC,EAAc,UA6kUvD1kG,EAAQ2kG,+BAlkUR,SAASC,GAA8BC,GACnC,OAAO3zC,GAA8B2zC,EAAe,WAkkUxD7kG,EAAQ8kG,4BAvjUR,SAASC,GAA2BC,GAChC,OAAO9zC,GAA8B8zC,EAAY,QAujUrDhlG,EAAQilG,oCA5iUR,SAASC,GAAmCC,GACxC,OAAOj0C,GAA8Bi0C,EAAoB,gBA4iU7DnlG,EAAQolG,YAAc9rF,GACtBtZ,EAAQqlG,mBA1vkBR,SAASC,GAAkBxuD,EAAWpzC,GAClC,OAAO,IAAIurB,GAAmB6nB,EAAWpzC,IA0vkB7C1D,EAAQulG,WAt/cR,SAASC,GAAUj1E,EAAKlB,GACpB,IAAI7U,EAAUlB,GAAWiX,GACzB,GAAK/V,EAAL,CAIA,IAAIovC,EAAapvC,EAAQD,OACrB9C,EAAY+C,EAAQ/C,UACpB2Y,EA7nHR,SAASq1E,EAAyBrjG,EAAQoY,GAEtC,KADAA,EAAUA,GAAWlB,GAAWlX,IAG5B,OAAO,KAEX,IACIuuB,EAAiBf,GAD0BpV,EAAQvD,UACJjE,GADnCwH,EAAQ/C,WAExB,OAAOiZ,GAAiBC,IAAmBC,GAAmBD,GAqnH1C80E,CAAyB77C,EAAYpvC,GACrD6V,EAAckf,GAAiB93B,GACnC0Y,GAAkBC,EAAeC,EAAau5B,EAAYv6B,EAAQ,EAAGkB,GACrE0R,GAAa5R,EAAa,KA4+c9BrwB,EAAQ0lG,YAAc71D,GACtB7vC,EAAQ2lG,mCA/yNR,SAASC,GAAkC7zF,EAAUlM,EAASklD,GAE1D,OAAOngD,QAAQC,QAAQ,IAAIggD,GAAkBE,KA8yNjD/qD,EAAQ6lG,qCAAuCjlC,GAC/C5gE,EAAQ8lG,qCAAuCjlC,GAC/C7gE,EAAQ+lG,gCAAkCjlC,GAC1C9gE,EAAQgmG,oCAAsCnkC,GAC9C7hE,EAAQimG;;;;;;;;AAhwRR,SAASC,GAAkBjgG,EAAMkgG,GAC7B,IAAIv5F,EAAM,KACV/L,OAAO+B,eAAeqD,EAAMrB,GACxB2N,IAAK,WACD,GAAY,OAAR3F,EAAc,CACd,IAAIw5F,EAASD,IAAazgG,WAAY,MAClC2gG,EAAehkC,GAAmB+jC,IAAW7jC,GAAqB6jC,IAClE9jC,GAAmB8jC,IAAW5jC,GAAsB4jC,GACpDE,GACA3/F,KAAMV,EAAKU,KACXV,KAAMA,EACNP,WAAY0gG,EAAO1gG,WACnB6gG,SAAU7qC,GAAoBz1D,GAC9BugG,cAAU7gG,GAKd,IAHK08D,GAAmB+jC,IAAW7jC,GAAqB6jC,UAA4BzgG,IAAhBygG,EAAOxgF,OACvE0gF,EAAaE,SAAW7qC,GAAoByqC,EAAOxgF,OAElDygF,EAOA,GAAIhkC,GAAmB+jC,GAExBE,EAAa9/E,SAAW4/E,EAAO5/E,cAE9B,GAAI87C,GAAmB8jC,GAExBE,EAAajhF,SAAW+gF,EAAO/gF,cAE9B,GAAIk9C,GAAqB6jC,GAE1BE,EAAa//E,WAAa6/E,EAAO7/E,eAEhC,CAAA,IAAIi8C,GAAsB4jC,GAM3B,MAAM,IAAI/hG,MAAM,sBAJhBiiG,EAAahgF,YAAc8/E,EAAO9/E,iBAhBlCggF,EAAa9/E,SAAWvgB,EAsB5B2G,EAAMwE,KAAoB80F,kBAAkBzzC,GAAgB,QAAUxsD,EAAKU,KAAO,sBAAuB2/F,GAE7G,OAAO15F,MAktRnB5M,EAAQymG,gCAl/I4B,EAm/IpCzmG,EAAQ0mG,+CA3sdR,SAASC,KACL,OAAO33D,GAAcpxB,KAA4BU,KAAe,OA2sdpEte,EAAQ4mG;;;;;;;;AAx8dR,SAASC,GAAiB/4D,GACtB,OAAOD,GAAiBC,EAAiBlwB,KAA4BU,OAw8dzEte,EAAQ8mG,wCA16dR,SAASC,GAAkB94D,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiBlwB,KAA4BU,OA06d5Fte,EAAQgnG,8CAn3dR,SAASC,GAAuBC,EAAuBp5D,GAEnD,OAqBJ,SAASq5D,EAAmBD,EAAuBp5D,EAAiBzuB,EAAWxI,GAgH3E,IAAI8S,EA/GCyiB,KAEDA,GAAoC,SAAUsB,GAE1C,SAAS++C,EAAkB2a,EAAaC,EAAY1jF,GAChD,IAAIgqB,EAAQD,EAAO1rC,KAAKvB,OAASA,KAKjC,OAJAktC,EAAMy5D,YAAcA,EACpBz5D,EAAM05D,WAAaA,EACnB15D,EAAMhqB,UAAYA,EAClBgqB,EAAM25D,aACC35D,EAiGX,OAxGAxsC,EAAUsrF,EAAmB/+C,GAS7B7sC,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,WAC/CiR,IAAK,WACD,OAAOs7B,GAAiBC,EAAiBrtC,KAAK4mG,WAAY5mG,KAAKkjB,YAEnEkpB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,YAC/CiR,IAAK,WAAc,OAAO,IAAIu8B,GAAeruC,KAAK4mG,WAAY5mG,KAAKkjB,YACnEkpB,YAAY,EACZC,cAAc,IAElBjsC,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,kBAE/CiR,IAAK,WACD,IAAIwF,EAAiB6I,GAA0BngB,KAAK4mG,WAAY5mG,KAAKkjB,WACjErL,EAAaJ,GAAsBH,EAAgBtX,KAAKkjB,WACxDqJ,EA1kMxB,SAASu6E,EAAuBpvF,EAAUC,EAAWovF,GACjD,GAAIA,EAAWrsF,SAA+C,IAArCqsF,EAAWrsF,OAAOqF,cAAsB,CAI7D,IAFA,IAAIA,EAAgBgnF,EAAWrsF,OAAOqF,cAClCinF,EAAgBD,EAAWrsF,OACA,MAAxBssF,EAActsF,QAAkBqF,GAAiBinF,EAAcjnF,eAClEinF,EAAgBA,EAActsF,OAElC,OAAOssF,EAKX,IAHA,IAAIpvF,EAAaJ,GAA4BE,GACzCG,EAAaF,EACb4U,EAAc5U,EAAU7E,IACrB8E,EAAa,GAEhB2U,GADA1U,EAAaA,EAAWrE,KACCV,IACzB8E,IAEJ,OAAO2U,EAwjM2Bu6E,CAAuBxvF,EAAgBtX,KAAKkjB,UAAWljB,KAAK4mG,YAC9E,OAAQvvF,GAAkBC,IAAkC,MAAfiV,EAEzC,IAAI8hB,GAAe9hB,EAAa1U,GADhC,IAAImM,IAGZooB,YAAY,EACZC,cAAc,IAElB2/C,EAAkBnrF,UAAUszC,MAAQ,WAChC,KAAOn0C,KAAK2mG,YAAY3xF,IAAO1T,QAC3BtB,KAAK+yB,OAAO,IAGpBi5D,EAAkBnrF,UAAUiR,IAAM,SAAUpK,GAAS,OAAO1H,KAAK6mG,UAAUn/F,IAAU,MACrFtH,OAAO+B,eAAe6pF,EAAkBnrF,UAAW,UAC/CiR,IAAK,WAAc,OAAO9R,KAAK2mG,YAAY3xF,IAAO1T,QAClD8qC,YAAY,EACZC,cAAc,IAElB2/C,EAAkBnrF,UAAUktC,mBAAqB,SAAUm+C,EAAanyE,EAASrS,GAC7E,IAAIu/F,EAAcjnG,KAAKknG,aAAax/F,GAChCymC,EAAU+9C,EACTn+C,mBAAmBh0B,MAAe/Z,KAAK2mG,YAAa3mG,KAAK4mG,WAAY5mG,KAAKkjB,UAAW+jF,GAG1F,OAFA94D,EAAQxB,yBAAyB3sC,MACjCA,KAAK6mG,UAAU38E,OAAO+8E,EAAa,EAAG94D,GAC/BA,GAEX69C,EAAkBnrF,UAAUurF,gBAAkB,SAAUvW,EAAkBnuE,EAAO4J,EAAU6mC,EAAkBk0C,GACzG,IAAIC,EAAkBh7E,GAAYtR,KAAKiqD,gBAClCoiC,GAAeC,IAChBD,EAAcC,EAAgBx6E,IAAIoV,GAAa,OAEnD,IAAIkzB,EAAey7B,EAAiB/0E,OAAOwrF,EAAiBn0C,OAAkBjzC,EAAWmnF,GAEzF,OADArsF,KAAKmsF,OAAO/xC,EAAahkC,SAAU1O,GAC5B0yC,GAEX4xC,EAAkBnrF,UAAUsrF,OAAS,SAAUh+C,EAASzmC,GACpD,GAAIymC,EAAQsF,UACR,MAAM,IAAI7vC,MAAM,sDAEpB,IAAImmB,EAAQokB,EAAQtC,MAChBo7D,EAAcjnG,KAAKknG,aAAax/F,GAMpC,OALAoiB,GAAWC,EAAO/pB,KAAK2mG,YAAa3mG,KAAKkjB,UAAW+jF,EAAajnG,KAAK4mG,WAAWl/F,OAEjFkiB,GAA2BG,GAAO,EADjByC,GAAqBy6E,EAAajnG,KAAK2mG,YAAY3xF,IAAQhV,KAAK2mG,YAAY1xF,MAE7Fk5B,EAAQxB,yBAAyB3sC,MACjCA,KAAK6mG,UAAU38E,OAAO+8E,EAAa,EAAG94D,GAC/BA,GAEX69C,EAAkBnrF,UAAUmsF,KAAO,SAAU7+C,EAAS7c,GAClD,IAAI5pB,EAAQ1H,KAAK0L,QAAQyiC,GAGzB,OAFAnuC,KAAKssC,OAAO5kC,GACZ1H,KAAKmsF,OAAOh+C,EAASnuC,KAAKknG,aAAa51E,IAChC6c,GAEX69C,EAAkBnrF,UAAU6K,QAAU,SAAUyiC,GAAW,OAAOnuC,KAAK6mG,UAAUn7F,QAAQyiC,IACzF69C,EAAkBnrF,UAAUkyB,OAAS,SAAUrrB,GAC3C,IAAIu/F,EAAcjnG,KAAKknG,aAAax/F,GAAQ,GAC5C6iB,GAAWvqB,KAAK2mG,YAAa3mG,KAAK4mG,WAAYK,GAC9CjnG,KAAK6mG,UAAU38E,OAAO+8E,EAAa,IAEvCjb,EAAkBnrF,UAAUyrC,OAAS,SAAU5kC,GAC3C,IAAIu/F,EAAcjnG,KAAKknG,aAAax/F,GAAQ,GAE5C,OADAyiB,GAAWnqB,KAAK2mG,YAAaM,IAAejnG,KAAK4mG,WAAWv8E,UACrDrqB,KAAK6mG,UAAU38E,OAAO+8E,EAAa,GAAG,IAAM,MAEvDjb,EAAkBnrF,UAAUqmG,aAAe,SAAUx/F,EAAOy/F,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAATz/F,EACO1H,KAAK2mG,YAAY3xF,IAAO1T,OAAS6lG,EAOrCz/F,GAEJskF,EAzGwB,CA0GjCya,IAIN,IAAIhwF,EAAYL,EAASwI,EAAUlX,OACnC,GAAImP,GAAaJ,IAEbyS,EAAazS,GACF1B,KAAiB,MAE3B,CACD,IAAIqyF,EAAchxF,EAASjD,IAAUiyB,cAAwC,IAM7E,GAAItuB,GAAWV,GAAW,CACtB,IAAI0B,EAAW1B,EAASjD,IACpB6xB,EAAa9uB,GAAiB0I,EAAWxI,GAE7C8V,GAAmBpU,EADM6T,GAAiB7T,EAAUktB,GACHoiE,EA72H7D,SAASC,EAAkBvvF,EAAUuK,GACjC,OAAOmF,GAAqB1P,GAAYA,EAAS8kC,YAAYv6B,GAAQA,EAAKu6B,YA42HJyqD,CAAkBvvF,EAAUktB,SAG1F7Y,GAAYi7E,EAAaxoF,EAAWxI,GAExCA,EAASwI,EAAUlX,OAASwhB,EACxB6b,GAAiBtuB,EAAWmI,EAAWxI,EAAUgxF,GAAa,GAClEtiE,GAAc1uB,EAAUwI,EAAUlX,MAAOwhB,GAE7C,OAAO,IAAIyiB,GAAmBziB,EAAYtK,EAAWxI,GAhK9CswF,CAAmBD,EAAuBp5D,EAD7BlwB,KAC6DU,OAk3drFte,EAAQ+nG,qCA9qdR,SAASC,KACL,OAXJ,SAASC,EAAqBlxF,GAC1B,IAAIwB,EAAWxB,EAAKnD,IACpB,GAAIqU,GAAqB1P,GACrB,OAAOA,EAGP,MAAM,IAAIlU,MAAM,gEAKb4jG,CAAqB3pF,OA8qdhCte,EAAQkoG,mBAAqB/3D,GAC7BnwC,EAAQmoG,2BA77cR,SAASC,KACAl4D,KACDA,IAAa,EACbC,GAAkB,eAAgBhB,IAClCgB,GAAkB,mBAAoBb,IACtCa,GAAkB,cAAeR,IACjCQ,GAAkB,oBAAqBT,IACvCS,GAAkB,gBAAiBP,IACnCO,GAAkB,aAAcN,MAs7cxC7vC,EAAQqoG,oCAl9mBiC,WACrC,OA1LJ,SAASC,IACL,IAAI1xF,EAAQgH,KACZ,OAAO,IAAI6F,GAAa7M,EAAO0H,MAwLxBgqF,IAk9mBXtoG,EAAQuoG,uBAlzMR,SAASC,GAAsBv5F,EAAIlP,GAC/B,IAAI41C,EAAWkhC,GAAgBtkE,IAAItD,GACnC,GAAI0mC,EACA,MAAM,IAAItxC,MAAM,mCAAqC4K,EAAK,MAAQ0mC,EAASoV,WAAWpkD,KAAO,OAAS5G,EAAQgrD,WAAWpkD,MAE7HkwE,GAAgBlxD,IAAI1W,EAAIlP,IA8yM5BC,EAAQyoG,gBACRzoG,EAAQ0oG,cACR1oG,EAAQ2oG;;;;;;;;AAr/HR,SAASnQ,GAAUnmF,EAAO4zE,EAAmBoB,EAAgBF,EAAY3D,EAAaolB,GAClFv2F,GAAS,EACT,IAAIlL,EAAK6+E,GAAuBC,GAEhC,OAEIhvE,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEd32E,MAAOA,EACPo+E,YAAa,EACbjD,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAG1K,eAdyC/+E,EAAG++E,eAcZC,gBAd0Eh/E,EAAGg/E,gBAc3CjN,WAdO/xE,EAAG+xE,WAccmO,eAAgBA,EAAgBF,WAAYA,EAC9JvC,YACAgD,aAAc,EACdr6E,WACAkiB,SACI64D,GAAI,KACJ3hF,KAAM,KACN8a,MAAO,KAAMxU,SApBN27F,EAAkB/hB,GAAkB+hB,GAAmB,KAqB9D3c,kBAAmB,KACnBriE,cAAe,KACf68D,sBAAuB,KACvBoL,gBAAiB,KACjBD,aAAc,KACdpO,YAAaA,GAAeU,IAEhCn+D,SAAU,KACV3b,KAAM,KACNykD,MAAO,KACP64B,UAAW,OAo9HnB1nF,EAAQ6oG,KA14GR,SAASC,GAAuB5/F,EAAUuvC,EAAegzC,EAAgBn+E,EAAQC,EAASorC,GACtF,OAAO,IAAI+yC,GAAkBxiF,EAAUuvC,EAAegzC,EAAgBn+E,EAAQC,EAASorC,IA04G3F34C,EAAQ+oG,KA9fR,SAASC,GAAsBv+C,EAAcglC,EAAqBwZ,GAC9D,OAAO,IAAIzM,GAAiB/xC,EAAcglC,EAAqBwZ,IA8fnEjpG,EAAQkpG,KAp1IR,SAASC,GAAoBvhG,GACzB,OACIqH,GANyB,cAOzBC,OAAQtH,EAAOsH,OACfH,cAAenH,EAAOmH,cACtB5F,KAAMvB,EAAOuB,OAg1IrBnJ,EAAQopG,KAh6FR,SAAStqE,GAAa2xD,EAAYp+E,EAAO6zE,EAAgBiB,EAAYx/E,EAAMie,EAAMhf,EAAO2G,GACpF,IAAIq3E,KACJ,GAAIh+E,EACA,IAAK,IAAIisB,KAAQjsB,EAAO,CACpB,IAAIO,EAAKvD,EAAOgD,EAAMisB,GAAO,GAC7B+xD,EADgDz9E,EAAG,KAE/CkL,MAAO,EACP1L,KAAMksB,EAAMm/D,gBAHyD7qF,EAAG,GAIxEmhF,GAAI,KACJe,gBAAiB,KACjBjnD,OAAQ,MAIpB,IAAIinE,KACJ,GAAI97F,EACA,IAAK,IAAI1F,KAAY0F,EACjB87F,EAAWtlG,MAAOkC,KAAM,EAAyB4B,SAAUA,EAAUzF,OAAQ,KAAMo6B,UAAWjvB,EAAQ1F,KAI9G,OAAOsiF,GAAKsG,EADZp+E,GAAS,MACsB6zE,EAAgBiB,EAAYx/E,EAAMA,EAAMie,EAAMg/D,EAAUykB,IA44F3FrpG,EAAQspG,KAr9HR,SAAS5W,GAAWjC,EAAYp+E,EAAO4zE,EAAmBoB,EAAgBF,EAAYmH,EAAkBib,EAAY3kB,EAAUr3E,EAASi2E,EAAa55D,EAAe68D,GAE/J,IAAIt/E,OADe,IAAfoiG,IAAyBA,MAExB/lB,IACDA,EAAcU,IAElB,IAAIhmC,EAAK8nC,GAAuBC,GAAoBC,EAAiBhoC,EAAGgoC,eAAgBhN,EAAah7B,EAAGg7B,WAAYiN,EAAkBjoC,EAAGioC,gBACrImC,EAAK,KACL3hF,EAAO,KACP2nF,IACkDhG,GAAlDnhF,EAAKvD,EAAOqkF,GAAeqG,GAAmB,IAAY,GAAI3nF,EAAOQ,EAAG,IAE5Ey9E,EAAWA,MAEX,IADA,IAAI4kB,EAAc,IAAIxoG,MAAM4jF,EAAS7iF,QAC5BH,EAAI,EAAGA,EAAIgjF,EAAS7iF,OAAQH,IAAK,CACtC,IAAIu8C,EAAKv6C,EAAOghF,EAAShjF,GAAI,GAAIgmF,EAAezpC,EAAG,GAAgCsrD,EAA0BtrD,EAAG,GAC5GurD,EAAK9lG,EAAOqkF,GAD4D9pC,EAAG,IAC3B,GAAIwrD,EAAOD,EAAG,GAAIE,EAASF,EAAG,GAC9ErgB,OAAkB1jF,EAClBy8B,OAASz8B,EACb,OAAuB,GAAfiiF,GACJ,KAAK,EACDxlD,EAASqnE,EACT,MACJ,KAAK,EACL,KAAK,EACDpgB,EAAkBogB,EAG1BD,EAAY5nG,IACNyQ,MAAOu1E,EAAcU,GAAIqhB,EAAMhjG,KAAMijG,EAAQ5X,gBAAiB4X,EAAQvgB,gBAAiBA,EAAiBjnD,OAAQA,GAE1H70B,EAAUA,MACV,IAAI87F,EAAa,IAAIroG,MAAMuM,EAAQxL,QACnC,IAASH,EAAI,EAAGA,EAAI2L,EAAQxL,OAAQH,IAAK,CACrC,IAAIioG,EAAKjmG,EAAO2J,EAAQ3L,GAAI,GAC5BynG,EAAWznG,IACPqE,KAAM,EACN7D,OAHqCynG,EAAG,GAGxBrtE,UAHwCqtE,EAAG,GAI3DhiG,SAAU,MAIlB,IAAI4Z,GADJ8nF,EAAaA,OACUz9F,IAAI,SAAU3E,GACjC,IAAI+2C,EAAKt6C,EAAOuD,EAAI,GAA8BzD,EAAQw6C,EAAG,GACzDC,EAAKv6C,EAAOqkF,GAD2B/pC,EAAG,IACI,GAClD,OAD2DC,EAAG,GAAWA,EAAG,GAC1Dz6C,KAOtB,OALA+iF,EAvaJ,SAASqjB,EAAqB7jG,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAKgJ,GAAmC,CAEhD,IAAI86F,EAAmC,MAAtB9jG,EAAK8I,eAAyB9I,EAAK8I,gBAAkB/O,EAAQ2J,kBAAkBqgG,MAC5F/jG,EAAKiJ,OAAOnN,QAAUlB,OAAOoK,KAAKhF,EAAKkD,MAAMpH,OAE7CkE,EAAKgJ,GADL86F,EACU,IAAM1lB,KAlBC,UA2BzB,OAHIp+E,GAxBqB,YAwBbA,EAAKgJ,KACbhJ,EAAO,MAEJA,GAAQ,KAwZS6jG,CAAqBrjB,GACzC78D,IACAvX,GAAS,WAKT4E,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEdyH,WAAYA,EACZp+E,MAVJA,GAAS,EAWLm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAG1K,eAAgBA,EAAgBC,gBAAiBA,EAAiBjN,WAAYA,EAAYmO,eAAgBA,EAAgBF,WAAYA,EAC9JvC,SAAU4kB,EACV5hB,aAAcM,GAAiBshB,GAC/Bj8F,QAAS87F,EACT55E,SACI64D,GAAIA,EACJ3hF,KAAMA,EACN8a,MAAOA,EACPxU,SAAU,KAEVg/E,kBAAmB,KACnBriE,cAAeA,GAAiB,KAChC68D,sBAAuBA,EACvBoL,gBAAiB,KACjBD,aAAc,KACdpO,YAAaA,GAAeU,IAEhCn+D,SAAU,KACV3b,KAAM,KACNykD,MAAO,KACP64B,UAAW,OAk4HnB1nF,EAAQiqG,sBAAwBtkB,GAChC3lF,EAAQkqG,mCAAqC1e,GAC7CxrF,EAAQmqG,mBA5iIR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAKniB,GAAkBoiB,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EACR,KAAK,EACD,OAAON,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAAK7iB,GAAkB8iB,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAAK7iB,GAAkB8iB,GACjFC,EAAK/iB,GAAkBgjB,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAAK7iB,GAAkB8iB,GACjFC,EAAK/iB,GAAkBgjB,GAAMC,EAAKjjB,GAAkBkjB,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GAAMC,EAAKviB,GAAkBwiB,GACpFC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAAK7iB,GAAkB8iB,GACjFC,EAAK/iB,GAAkBgjB,GAAMC,EAAKjjB,GAAkBkjB,GAAMC,EAAKnjB,GAAkBojB,GAAMC,EAC/F,QACI,MAAM,IAAInnG,MAAM,8CA8gI5BrE,EAAQyrG,aApjIR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIp0D,EAAS,GACJ31C,EAAI,EAAGA,EAAiB,EAAbyoG,EAAgBzoG,GAAQ,EACxC21C,EAASA,EAASo0D,EAAe/pG,GAAKumF,GAAkBwjB,EAAe/pG,EAAI,IAE/E,OAAO21C,EAASo0D,EAA4B,EAAbtB,IAgjInCrqG,EAAQ4rG,KAhtHR,SAASC,GAAU/lG,GAIf,IAHA,IAAIskF,KACAK,KACAC,GAAS,EACJ9oF,EAAI,EAAGA,EAAIkE,EAAU/D,OAAQH,IAAK,CACvC,IAAImkB,EAAWjgB,EAAUlE,GACrBmkB,EAASla,QAAU0nC,KAA+B,IAAnBxtB,EAASriB,QACxCgnF,GAAS,GAEQ,WAAjB3kE,EAAS1T,OACTo4E,EAAQ1mF,KAAKgiB,EAASla,OAE1Bka,EAAS5d,MAAQvG,EACjBwoF,EAAehG,GAASr+D,EAASla,QAAUka,EAE/C,OAEIhmB,QAAS,KACTqqF,eAAgBA,EAChBtkF,UAAWA,EACX2kF,QAASA,EACTC,OAAQA,IA4rHhB1qF,EAAQ8rG,KA7tHR,SAASC,GAAiB15F,EAAOxG,EAAOnI,EAAOkiB,GAM3C,OAFAliB,EAAQ0gB,GAAkB1gB,IAItByE,OAAQ,EACRyd,KAJUygE,GAAazgE,EAAMha,GAAUC,IAIxBwG,MAAOA,EAAOxG,MAAOA,EAAOnI,MAAOA,IAqtH1D1D,EAAQgsG,KAlxER,SAASC,GAAa5kB,EAAgBl/E,GAClC,OAEI8O,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEdyH,YAAa,EACbp+E,MAAO,EACPm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrB1K,kBACAC,gBAAiB,EACjBjN,cAAgBmO,eAAgBA,EAChCF,WAAY,EACZvC,YACAgD,aAAc,EACdr6E,WACAkiB,QAAS,KACT1J,SAAU,KACV3b,KAAM,KACNykD,MAAO,KACP64B,WAAav/E,MAAOA,KA0vE5BnI,EAAQksG,KAzlGR,SAASpsD,GAAU/oC,EAAM5O,GACrB,IAAIyE,EAAMmK,EAAKnK,IAAIy1E,MAAMl6E,GACzB,GAAgB,EAAZyE,EAAIyF,MAA6B,CACjC,IAAI62E,EAAS5G,GAAcvrE,EAAMnK,EAAIqK,WACrC,OAAOrK,EAAI6iB,QAAQxiB,SAAWi8E,EAAOj8E,SAAWi8E,EAAOzD,cAEtD,GAAgB,EAAZ74E,EAAIyF,MACT,OAAO+vE,GAAWrrE,EAAMnK,EAAIqK,WAAWyuE,WAEtC,GAAgB,MAAZ94E,EAAIyF,MACT,OAAOkwE,GAAexrE,EAAMnK,EAAIqK,WAAW0C,SAE/C,MAAM,IAAItV,MAAM,gDAAkD8D,IA8kGtEnI,EAAQmsG,KAn5FR,SAASl7F,GAAQoB,EAAO1K,EAAMie,GAE1B,OAAOukE,IAAM,EADb93E,GAAS,GACc,KAAM,EAAG1K,EAAMA,EAAMie,IAk5FhD5lB,EAAQosG,KAh5FR,SAASliB,GAAY73E,EAAO6zE,EAAgBr6E,EAAOnI,EAAOkiB,GACtD,OAAOukE,IAAM,EAAG93E,EAAO6zE,EAAgB,EAAGr6E,EAAOnI,EAAOkiB,IAg5F5D5lB,EAAQqsG,KAruER,SAASC,GAAa7b,EAAY8b,GAC9B,OAAOnZ,GAAmB,GAAwB3C,EAAY,IAAIzvF,MAAMurG,KAquE5EvsG,EAAQwsG,KAnuER,SAASC,GAAchc,EAAYic,GAI/B,IAHA,IAAIzhG,EAAOpK,OAAOoK,KAAKyhG,GACnBC,EAAS1hG,EAAKlJ,OACdsxF,EAAgB,IAAIryF,MAAM2rG,GACrB/qG,EAAI,EAAGA,EAAI+qG,EAAQ/qG,IAAK,CAC7B,IAAIS,EAAM4I,EAAKrJ,GAEfyxF,EADYqZ,EAAYrqG,IACDA,EAE3B,OAAO+wF,GAAmB,GAAyB3C,EAAY4C,IA2tEnErzF,EAAQ4sG,KA3uER,SAASC,GAAYpc,EAAY8b,GAE7B,OAAOnZ,GAAmB,IAAwB3C,EAAY,IAAIzvF,MAAMurG,EAAW,KA0uEvFvsG,EAAQ8sG,KAx8ER,SAAS/Z,GAAS1gF,EAAOpD,EAAI21E,GACzB,IAAI4kB,KACJ,IAAK,IAAI3hG,KAAY+8E,EAEjB4kB,EAAYzlG,MAAO8D,SAAUA,EAAUirF,YADrBlO,EAAS/8E,KAG/B,OAEIoP,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAGdyH,YAAa,EAAGp+E,MAAOA,EACvBm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrBvJ,gBAAiB,EACjBnB,kBACAC,gBAAiB,EACjBjN,cACAiO,WAAY,EACZvC,YACAgD,aAAc,EACdr6E,WACAkiB,QAAS,KACT1J,SAAU,KACV3b,KAAM,KACNykD,OAAS5/C,GAAIA,EAAIsjF,SAAUzM,GAAc72E,GAAK21E,SAAU4kB,GACxD9hB,UAAW,OA06EnB1nF,EAAQ+sG,KArhER,SAASC,GAAQvc,EAAYpJ,EAAgB4lB,GAEzC,IADA,IAAIroB,EAAW,IAAI5jF,MAAMisG,EAAWlrG,OAAS,GACpCH,EAAI,EAAGA,EAAIqrG,EAAWlrG,OAAQH,IACnCgjF,EAAShjF,EAAI,IACTyQ,MAAO,EACP1L,KAAM,KACN2hF,GAAI,KACJ0J,gBAAiB,KACjB3I,gBAAiB,KACjBjnD,OAAQ6qE,EAAWrrG,IAG3B,OAEIqV,WAAY,EACZkE,OAAQ,KACRiO,aAAc,KACd8hB,cAAe,EACf89C,aAAc,EAEdyH,WAAYA,EACZp+E,MAAO,EACPm7E,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrB1K,kBACAC,gBAAiB,EACjBjN,cAAgBmO,eAAgBA,EAChCF,WAAY,EAAGvC,SAAUA,EACzBgD,aAAc,EACdr6E,WACAkiB,QAAS,KACT1J,SAAU,KACV3b,MAAQ8+B,OAAQ+jE,EAAW,IAC3Bp+C,MAAO,KACP64B,UAAW,OAm/DnB1nF,EAAQktG,KAn3IR,SAASC,GAAYp2F,EAAMq2F,EAAS7oB,EAAY7gF,GAC5C,GAAIkR,GAAaI,UAAUtR,GAAQ,CAC/BA,EAAQkR,GAAaG,OAAOrR,GAC5B,IAAI2pG,EAAmBt2F,EAAKnK,IAAIy1E,MAAM+qB,GAASliE,aAAeq5C,EAC1DtkE,EAAWrL,GAAaG,OAAOgC,EAAKytE,UAAU6oB,IAClDt2F,EAAKytE,UAAU6oB,GAAoB,IAAIz4F,GAAaqL,GAExD,OAAOvc,GA62IX1D,EAAQstG,KAn5DR,SAASvhB,GAAQ15E,EAAOgwE,EAAOoB,EAAkBC,GAY7C,IAVA,IAAI6pB,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpChnB,EAAqB,KAChBnlF,EAAI,EAAGA,EAAIygF,EAAMtgF,OAAQH,IAAK,CACnC,IAAIkhB,EAAOu/D,EAAMzgF,GAQjB,GAPAkhB,EAAK7L,UAAYrV,EACjBkhB,EAAK3H,OAASyyF,EACd9qF,EAAKooB,aAAeqiE,EACpBzqF,EAAKkmE,YAAcwkB,EACnB1qF,EAAKsG,aAAeykF,EACpBJ,GAAiB3qF,EAAKzQ,MACtBs7F,GAAsB7qF,EAAKqjE,gBACvBrjE,EAAK2M,QAAS,CACd,IAAI24D,EAAQtlE,EAAK2M,QACjB24D,EAAMyJ,gBACF+b,EAAgBA,EAAcn+E,QAAQoiE,gBAAkBhxF,OAAOU,OAAO,MAC1E6mF,EAAMwJ,aAAexJ,EAAMyJ,gBAE3Bic,GAAmC,EACnCC,GAAoC,EAChCjrF,EAAK2M,QAAQxiB,WACb0gG,GAAsB7qF,EAAK2M,QAAQxiB,SAASolF,oBASpD,GANAmB,GAAaoa,EAAe9qF,EAAMu/D,EAAMtgF,QACxCwrG,GAAoBzqF,EAAK8hE,SAAS7iF,OAClCyrG,GAAuB1qF,EAAKvV,QAAQxL,QAC/B8rG,GAAqC,EAAb/qF,EAAKzQ,QAC9B00E,EAAqBjkE,GAER,MAAbA,EAAKzQ,MAAiC,CACjCy7F,IACDA,GAAmC,EAEnCF,EAAcn+E,QAAQoiE,gBAClBhxF,OAAOU,OAAOqsG,EAAcn+E,QAAQoiE,iBACxC+b,EAAcn+E,QAAQmiE,aAAegc,EAAcn+E,QAAQoiE,iBAE/D,IACIz6E,EAAuD,IAA3B,MAAb0L,EAAKzQ,OAD6C,IAAhC,KAAbyQ,EAAKzQ,QAEJ+E,EACrBw2F,EAAcn+E,QAAQoiE,gBAAgBzN,GAASthE,EAAKiD,SAASla,QAAUiX,GAGlEirF,IACDA,GAAoC,EAEpCH,EAAcn+E,QAAQmiE,aAClB/wF,OAAOU,OAAOqsG,EAAcn+E,QAAQoiE,kBAE5C+b,EAAcn+E,QAAQmiE,aAAaxN,GAASthE,EAAKiD,SAASla,QAAUiX,GAEpE1L,IACAw2F,EAAcn+E,QAAQw8D,kBAAoBnpE,GAclD,GAXI8qF,GACAA,EAAcpgB,YAAc1qE,EAAKzQ,MACjCu7F,EAAcjd,kBAAoB7tE,EAAKzQ,MACvCu7F,EAAchd,qBAAuB9tE,EAAKqjE,gBACtCrjE,EAAK2M,SAAW3M,EAAK2M,QAAQxiB,WAC7B2gG,EAAchd,qBAAuB9tE,EAAK2M,QAAQxiB,SAASolF,qBAI/Dqb,GAAqB5qF,EAAKzQ,MAE1ByQ,EAAKqkE,WAAa,EAClBymB,EAAgB9qF,EACXywE,GAAczwE,KACf+qF,EAAsB/qF,QAS1B,KAAO8qF,GAAiBhsG,IAAMgsG,EAAc32F,UAAY22F,EAAczmB,YAAY,CAC9E,IAAI6mB,EAAYJ,EAAczyF,OAC1B6yF,IACAA,EAAUxgB,YAAcogB,EAAcpgB,WACtCwgB,EAAUpd,qBAAuBgd,EAAchd,qBAK/Cid,GAHJD,EAAgBI,IAEKza,GAAcqa,GACTA,EAAcxkF,aAGdwkF,GAQtC,OAEI7tG,QAAS,KACT0iB,UAAWgrF,EACXQ,cAAeP,EACfrb,mBAAoBsb,EAAoBt7F,MAAOA,EAC/CgwE,MAAOA,EACPoB,iBAAkBA,GAAoBS,GACtCR,eAAgBA,GAAkBQ,GAAMV,YAX1B,SAAUzsE,EAAME,EAAWulB,EAAW2oD,GACpD,OAAO9C,EAAMprE,GAAWwY,QAAQ+zD,YAAYzsE,EAAMylB,EAAW2oD,IAW7D6O,aAAcuZ,EACdxZ,YAAayZ,EAAqBzmB,mBAAoBA,IA+xD9DlmF,OAAO+B,eAAe5C,EAAS,cAAgB0D,OAAO","sourcesContent":["/**\n * @license Angular v7.1.0-beta.2+43.sha-a63fd2d\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element && (element.nodeType == Node.ELEMENT_NODE || element.nodeType == Node.TEXT_NODE), true, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    function _getViewData() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, viewData);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     *\n     * @publicApi\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     *\n     * @publicApi\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     * @publicApi\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     *\n     * @publicApi\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     *\n     * @publicApi\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = _getViewData();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = _getViewData();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = _getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getRenderer();\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var viewData = _getViewData();\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = viewData[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lViewData = _getViewData();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lViewData);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var RAW_ICU_REGEXP = /{\\s*(\\S*)\\s*,\\s*\\S{6}\\s*,[\\s\\S]*}/gi;\n    /**\n     * Replaces the variable parameter (main binding) of an ICU by a given value.\n     *\n     * Example:\n     * ```\n     * const MSG_APP_1_RAW = \"{VAR_SELECT, select, male {male} female {female} other {other}}\";\n     * const MSG_APP_1 = i18nIcuReplaceVars(MSG_APP_1_RAW, { VAR_SELECT: \"�0�\" });\n     * // --> MSG_APP_1 = \"{�0�, select, male {male} female {female} other {other}}\"\n     * ```\n     */\n    function i18nIcuReplaceVars(message, replacements) {\n        var keys = Object.keys(replacements);\n        var _loop_1 = function (i) {\n            message = message.replace(RAW_ICU_REGEXP, function (str, varMatch) {\n                return str.replace(varMatch, replacements[keys[i]]);\n            });\n        };\n        for (var i = 0; i < keys.length; i++) {\n            _loop_1(i);\n        }\n        return message;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return currentView[matchingIdx];\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵEC': elementContainerStart,\n        'ɵeC': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.2+43.sha-a63fd2d');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵdefineNgModule = defineNgModule;\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_q = wtfEnabled;\n    exports.ɵangular_packages_core_core_s = createScope;\n    exports.ɵangular_packages_core_core_r = detectWTF;\n    exports.ɵangular_packages_core_core_v = endTimeRange;\n    exports.ɵangular_packages_core_core_t = leave;\n    exports.ɵangular_packages_core_core_u = startTimeRange;\n    exports.ɵangular_packages_core_core_z = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bg = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_ba = bindingUpdated;\n    exports.ɵangular_packages_core_core_bb = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bc = getViewData;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bf = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bj = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bh = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_w = _def;\n    exports.ɵangular_packages_core_core_x = DebugRendererFactory2;\n    exports.ɵangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineNgModule = ɵdefineNgModule;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nIcuReplaceVars = i18nIcuReplaceVars;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}