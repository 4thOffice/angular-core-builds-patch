{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","template","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","applyOnCreateInstructions","fns","onElementCreationFns","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","viewToDetach","removeView","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","allowValueChange","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","style","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","creationMode","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialClasses","renderInitialStyles","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","directiveMultiStylesStartIndex","cachedStyleMapIndex","i_7","directiveMultiClassesStartIndex","cachedClassMapIndex","i_8","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","getMultiClassStartIndex","multiClassesEndIndex","textNative","textBinding","element_2","textContent","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","queries","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","isComponentDef$1","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.4+34.sha-3c1a162\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return null;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            element || null,\n            [0],\n            [0],\n            null,\n        ];\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        context[1 /* DirectiveRegistryPosition */].push(directiveRef, -1, false, null);\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        if (Array.isArray(value) && value.length >= 9 /* SingleStylesStartPosition */) {\n            return typeof value[0 /* MasterFlagPosition */] === 'number' &&\n                value[3 /* InitialClassValuesPosition */][0 /* DefaultNullValuePosition */] === null;\n        }\n        return false;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null, null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null, null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directiveRef) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directiveRef) == -1) {\n            // this is a new directive which we have not seen yet.\n            allocateDirectiveIntoContext(context, directiveRef);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[0 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        // this means that ONLY directive style styling (like ngStyle) was used\n        // therefore the root directive will still need to be filled in\n        if (directiveIndex > 0 &&\n            cachedStyleMapValues.length <= 1 /* ValuesStartPosition */) {\n            cachedStyleMapValues.push(0, directiveMultiStylesStartIndex, null, 0);\n        }\n        cachedStyleMapValues.push(0, directiveMultiStylesStartIndex, null, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        // this means that ONLY directive class styling (like ngClass) was used\n        // therefore the root directive will still need to be filled in\n        if (directiveIndex > 0 &&\n            cachedClassMapValues.length <= 1 /* ValuesStartPosition */) {\n            cachedClassMapValues.push(0, directiveMultiClassesStartIndex, null, 0);\n        }\n        cachedClassMapValues.push(0, directiveMultiClassesStartIndex, null, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[3 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* InitialClassesStringPosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* InitialClassesStringPosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[2 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* InitialClassesStringPosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 2 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* InitialClassesStringPosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[HOST] = host;\n        lView[T_HOST] = tHostNode;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[T_HOST];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = currentComponentView[PARENT];\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (tView.firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && lView[CONTAINER_INDEX] === -1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = lView[PARENT];\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.4+34.sha-3c1a162');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}