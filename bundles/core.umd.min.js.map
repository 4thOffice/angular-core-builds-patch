{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","compiler","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","pChild","child","getParentLNode","containerHostIndex","dynamicLContainerNode","getNextLNodeWithProjection","pNextOrParent","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","nextNode","parent_1","native","executeNodeAction","lContainerNode","childContainerData","head","currentNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","lViewData","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","setRenderParentInProjectedNodes","nodeToProject","lastNodeToProject","tail","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","componentNode","findComponentHost","isProjectingI18nNodes","store","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","projection","nodeIndex","localIndex","selectorIndex","nodesForSelector","loadInternal","previouslyProjected","viewRootLNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY$1","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","definePipe","pipeDef","pure","ComponentRef$1","ComponentRef","ComponentFactory$1","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver$1","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$$1","ComponentFactory$$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef$1","NgModuleRef","NgModuleFactory$1","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","split","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable$1","hasAProvider","expression","compileInjectable","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","Input","Output","HostBinding","HostListener","NgModule","compileNgModule$1","emitInline","compileNgModule","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+11.sha-0ede987\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', '@angular/compiler', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.ng.compiler,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,compiler,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakeable Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var urlFetches = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\nvar componentResourceResolutionQueue = new Set();\nfunction maybeQueueResolutionOfComponentResources(metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.add(metadata);\n    }\n}\nfunction componentNeedsResolution(component) {\n    return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\n\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = {};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 15;\n// Below are constants for LViewData indices to help us look up LViewData members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar PARENT = 1;\nvar NEXT = 2;\nvar QUERIES = 3;\nvar FLAGS = 4;\nvar HOST_NODE = 5;\nvar BINDING_INDEX = 6;\nvar DIRECTIVES = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR$1 = 10;\nvar RENDERER = 11;\nvar SANITIZER = 12;\nvar TAIL = 13;\nvar CONTAINER_INDEX = 14;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LViewData[DIRECTIVES]\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\n// PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n// As we already have these constants in LViewData, we don't need to re-create them.\nvar VIEWS = 4;\nvar RENDER_PARENT = 5;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var viewData = node.data;\n        return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.pChild) {\n        return node.pChild;\n    }\n    if (node.tNode.child) {\n        var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return viewData[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        // This is a dynamically created view inside a dynamic container.\n        // If the host index is -1, the view has not yet been inserted, so it has no parent.\n        var containerHostIndex = node.data[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    var parent = node.tNode.parent;\n    return parent ? node.view[parent.index] : node.view[HOST_NODE];\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action identifies the action to be performed on the LElement nodes.\n * @param renderer the current renderer.\n * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        var parent_1 = renderParentNode ? renderParentNode.native : null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        if (nextNode == null) {\n            /**\n             * Find the next node in the LNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            var currentNode = node;\n            node = getNextLNodeWithProjection(currentNode);\n            while (currentNode && !node) {\n                // if node.pNextOrParent is not null here, it is not the next node\n                // (because, at this point, nextNode is null, so it is the parent)\n                currentNode = currentNode.pNextOrParent || getParentLNode(currentNode);\n                if (currentNode === rootNode) {\n                    return null;\n                }\n                // When the walker exits a container, the beforeNode has to be restored to the previous\n                // value.\n                if (currentNode && !currentNode.pNextOrParent &&\n                    currentNode.tNode.type === 0 /* Container */) {\n                    beforeNode = currentNode.native;\n                }\n                node = currentNode && getNextLNodeWithProjection(currentNode);\n            }\n        }\n        else {\n            node = nextNode;\n        }\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data[RENDER_PARENT];\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LViewData, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LViewData.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state[VIEWS];\n    var lView = viewNode.data;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = container.tNode.parent.index;\n        viewNode.view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data[VIEWS];\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    // Notify query that view has been removed\n    var removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        removedLView[QUERIES].removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    viewNode.view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LViewData */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    var hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LViewData to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer[TVIEW]) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(viewData) {\n    var cleanup = viewData[TVIEW].cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = viewData[cleanup[i + 1]].native;\n                var listener = viewData[CLEANUP][cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = viewData[CLEANUP][cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view[DIRECTIVES], destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(viewData) {\n    var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(viewData, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param parent The parent where the child will be inserted into.\n * @param currentView Current LView being processed.\n * @return boolean Whether the child should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is an element.\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        else {\n            // Parent is a Component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would than move it to its final destination.\n            return false;\n        }\n    }\n    else {\n        // Parent is a View.\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        else {\n            // The parent `Container` is in inserted state, so we can eagerly insert into\n            // this location.\n            return true;\n        }\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        var renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            var container = getParentLNode(parent);\n            var renderParent = container.data[RENDER_PARENT];\n            var views = container.data[VIEWS];\n            var index = views.indexOf(parent);\n            var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(renderParent.native, child, beforeNode) :\n                renderParent.native.insertBefore(child, beforeNode, true);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param parent The parent from which to remove the child\n * @param child The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nfunction removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only remove the element if not in View or not projected.\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n            parent.native.removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer[RENDER_PARENT] = currentParent;\n        var views = lContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = currentParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n */\nvar HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$1 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\nfunction getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\nvar tView;\nvar currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries ||\n        (currentQueries =\n            (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                new QueryType()));\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar viewData;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        null,\n        -1,\n        null,\n        null,\n        context,\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        sanitizer || null,\n        null,\n        -1 // containerIndex\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null,\n        pChild: null,\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === viewData ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? state[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        var adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        var tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            var tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[adjustedIndex];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        var lViewData = state;\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewNode(tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = null;\n    var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        oldView = enterView(viewNode.data, viewNode);\n        namespaceHTML();\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native;\n    if (isProceduralRenderer(renderer)) {\n        native = renderer.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = renderer.createElement(name);\n        }\n        else {\n            native = renderer.createElementNS(_currentNamespace, name);\n        }\n    }\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$1;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$1) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        viewQuery: viewQuery,\n        node: null,\n        data: HEADER_FILLER.slice(),\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i + 1];\n                var attrName_1 = attrs[i + 2];\n                var attrVal = attrs[i + 3];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                // Standard attributes\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n                i += 2;\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element_1 = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                element_1.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                element_1.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = load(index);\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the LViewData array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        var existingNode = load(index);\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(directiveIndex, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = componentView;\n    componentView[HOST_NODE] = previousOrParentNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n        parentLNode :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        [],\n        renderParent\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, viewData);\n    var comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews = template ?\n            createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n            [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = load(index);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var lViewNode = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = lContainer[QUERIES].createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    previousOrParentNode = viewData[HOST_NODE];\n    if (creationMode) {\n        var containerNode = getParentLNode(previousOrParentNode);\n        if (containerNode) {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n            // When projected nodes are going to be inserted, the renderParent of the dynamic container\n            // used by the ViewContainerRef must be set.\n            setRenderParentInProjectedNodes(containerNode.data[RENDER_PARENT], previousOrParentNode);\n        }\n    }\n    leaveView(viewData[PARENT]);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(renderParent, viewNode) {\n    if (renderParent != null) {\n        var node = getChildLNode(viewNode);\n        while (node) {\n            if (node.tNode.type === 1 /* Projection */) {\n                var nodeToProject = node.data.head;\n                var lastNodeToProject = node.data.tail;\n                while (nodeToProject) {\n                    if (nodeToProject.dynamicLContainerNode) {\n                        nodeToProject.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n                    }\n                    nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                }\n            }\n            node = getNextLNode(node);\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    var element = viewData[adjustedElementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(viewData);\n    var isProjectingI18nNodes = false;\n    var componentChild;\n    // for i18n translations we use pChild to point to the next child\n    // TODO(kara): Remove when removing LNodes\n    if (componentNode.pChild) {\n        isProjectingI18nNodes = true;\n        componentChild = componentNode.pChild;\n    }\n    else {\n        componentChild = getChildLNode(componentNode);\n    }\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        if (isProjectingI18nNodes) {\n            componentChild = componentChild.pNextOrParent;\n        }\n        else {\n            componentChild = getNextLNode(componentChild);\n        }\n    }\n    ngDevMode && assertDataNext(index + HEADER_OFFSET);\n    store(index, distributedNodes);\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(viewData);\n    var componentLView = componentNode.data;\n    var distributedNodes = loadInternal(localIndex, componentLView);\n    var nodesForSelector = distributedNodes[selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            // Reprojecting a projection -> append the list of previously projected nodes\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            // Projecting a single node\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    var currentParent = getParentLNode(node);\n    if (canInsertNativeNode(currentParent, viewData)) {\n        ngDevMode && assertNodeOfPossibleTypes(currentParent, 3 /* Element */, 2 /* View */);\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, viewData);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lViewData LViewData for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lViewData) {\n    var viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = lViewData[PARENT];\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LViewData or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param state The LViewData or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        currentView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LViewData dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = currentView[PARENT];\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(currentView[CONTEXT]);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = lViewData[PARENT];\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var hostTView = hostView[TVIEW];\n    var template = hostTView.template;\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        template(getRenderFlags(hostView), component);\n        refreshView();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/** Retrieves a value from any `LViewData`. */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    var bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\nvar EMPTY_ARRAY$1 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$2 = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$2;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$2) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$2;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef(hostNode.data, hostNode\n            .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer[VIEWS].length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var adjustedIdx = this._adjustIndex(index);\n        var viewRef = templateRef\n            .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        var views = this._lContainerNode.data[VIEWS];\n        var beforeNode = adjustedIdx + 1 < views.length ?\n            (getChildLNode(views[adjustedIdx + 1])).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n        var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, index);\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        return new EmbeddedViewRef(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n            var getter = originalProperty && originalProperty.get;\n            var setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    var currentChange = simpleChanges[propertyName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[propertyName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    setter && setter.call(this, value);\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory$1 = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver$1 = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver$1));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory$1));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef$1(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param translation A translation string where placeholders are represented by `{$name}`\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @returns A list of instructions used to translate each template.\n */\nfunction i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n    var translationParts = translation.split(i18nTagRegex);\n    var instructions = [];\n    generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n    return instructions;\n}\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param index The current index in `translationParts`.\n * @param translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param instructions The current list of instructions to update.\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n * @returns the current index in `translationParts`\n */\nfunction generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n    var tmplIndex = instructions.length;\n    var tmplInstructions = [];\n    var phVisited = [];\n    var openedTagCount = 0;\n    var maxIndex = 0;\n    instructions.push(tmplInstructions);\n    for (; index < translationParts.length; index++) {\n        var value = translationParts[index];\n        // Odd indexes are placeholders\n        if (index & 1) {\n            var phIndex = void 0;\n            if (elements && elements[tmplIndex] &&\n                typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents a DOM element\n                // Add an instruction to move the element\n                tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                phVisited.push(value);\n                openedTagCount++;\n            }\n            else if (expressions && expressions[tmplIndex] &&\n                typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents an expression\n                // Add an instruction to move the expression\n                tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                phVisited.push(value);\n            }\n            else { // It is a closing tag\n                tmplInstructions.push(-2147483648 /* CloseNode */);\n                if (tmplIndex > 0) {\n                    openedTagCount--;\n                    // If we have reached the closing tag for this template, exit the loop\n                    if (openedTagCount === 0) {\n                        break;\n                    }\n                }\n            }\n            if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                maxIndex = phIndex;\n            }\n            if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                tmplContainers.indexOf(value) >= tmplIndex) {\n                index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n            }\n        }\n        else if (value) {\n            // It's a non-empty string, create a text node\n            tmplInstructions.push(536870912 /* Text */, value);\n        }\n    }\n    // Check if some elements from the template are missing from the translation\n    if (elements) {\n        var tmplElements = elements[tmplIndex];\n        if (tmplElements) {\n            var phKeys = Object.keys(tmplElements);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_1 = tmplElements[ph];\n                    // Add an instruction to remove the element\n                    tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                    if (index_1 > maxIndex) {\n                        maxIndex = index_1;\n                    }\n                }\n            }\n        }\n    }\n    // Check if some expressions from the template are missing from the translation\n    if (expressions) {\n        var tmplExpressions = expressions[tmplIndex];\n        if (tmplExpressions) {\n            var phKeys = Object.keys(tmplExpressions);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_2 = tmplExpressions[ph];\n                    if (ngDevMode) {\n                        assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                    }\n                    // Add an instruction to remove the expression\n                    tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                    if (index_2 > maxIndex) {\n                        maxIndex = index_2;\n                    }\n                }\n            }\n        }\n    }\n    if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n        // The current parent is an ng-container and it has more children after the translation that we\n        // need to append to keep the order of the DOM nodes correct\n        for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n            if (ngDevMode) {\n                assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n            }\n            // We consider those additional placeholders as expressions because we don't care about\n            // their children, all we need to do is to append them\n            tmplInstructions.push(i | 1610612736 /* Expression */);\n        }\n    }\n    return index;\n}\nfunction appendI18nNode(node, parentNode, previousNode) {\n    if (ngDevMode) {\n        ngDevMode.rendererMoveNode++;\n    }\n    var viewData = getViewData();\n    appendChild(parentNode, node.native || null, viewData);\n    if (previousNode === parentNode && parentNode.pChild === null) {\n        parentNode.pChild = node;\n    }\n    else {\n        previousNode.pNextOrParent = node;\n    }\n    // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n    if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n        // (node.native as RComment).textContent = 'test';\n        // console.log(node.native);\n        appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n        node.pNextOrParent = node.dynamicLContainerNode;\n        return node.dynamicLContainerNode;\n    }\n    return node;\n}\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param instructions The list of instructions to apply on the current view.\n */\nfunction i18nApply(startIndex, instructions) {\n    var viewData = getViewData();\n    if (ngDevMode) {\n        assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n    }\n    if (!instructions) {\n        return;\n    }\n    var renderer = getRenderer();\n    var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n    var localPreviousNode = localParentNode;\n    for (var i = 0; i < instructions.length; i++) {\n        var instruction = instructions[i];\n        switch (instruction & -536870912 /* InstructionMask */) {\n            case 1073741824 /* Element */:\n                var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                localParentNode = element$$1;\n                break;\n            case 1610612736 /* Expression */:\n                var expr = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                break;\n            case 536870912 /* Text */:\n                if (ngDevMode) {\n                    ngDevMode.rendererCreateTextNode++;\n                }\n                var value = instructions[++i];\n                var textRNode = createTextNode(value, renderer);\n                // If we were to only create a `RNode` then projections won't move the text.\n                // But since this text doesn't have an index in `LViewData`, we need to create an\n                // `LElementNode` with the index -1 so that it isn't saved in `LViewData`\n                var textLNode = createLNode(-1, 3 /* Element */, textRNode, null, null);\n                localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                break;\n            case -2147483648 /* CloseNode */:\n                localPreviousNode = localParentNode;\n                localParentNode = getParentLNode(localParentNode);\n                break;\n            case -1610612736 /* RemoveNode */:\n                if (ngDevMode) {\n                    ngDevMode.rendererRemoveNode++;\n                }\n                var index = instruction & 536870911;\n                var removedNode = load(index);\n                var parentNode = getParentLNode(removedNode);\n                removeChild(parentNode, removedNode.native || null, viewData);\n                // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                    removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                    removedNode.dynamicLContainerNode.tNode.detached = true;\n                    removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                }\n                break;\n        }\n    }\n}\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n */\nfunction i18nExpMapping(translation, placeholders) {\n    var staticText = translation.split(i18nTagRegex);\n    // odd indexes are placeholders\n    for (var i = 1; i < staticText.length; i += 2) {\n        staticText[i] = placeholders[staticText[i]];\n    }\n    return staticText;\n}\n/**\n * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n    var different = bindingUpdated(v0);\n    if (numberOfExp > 1) {\n        different = bindingUpdated(v1) || different;\n        if (numberOfExp > 2) {\n            different = bindingUpdated(v2) || different;\n            if (numberOfExp > 3) {\n                different = bindingUpdated(v3) || different;\n                if (numberOfExp > 4) {\n                    different = bindingUpdated(v4) || different;\n                    if (numberOfExp > 5) {\n                        different = bindingUpdated(v5) || different;\n                        if (numberOfExp > 6) {\n                            different = bindingUpdated(v6) || different;\n                            if (numberOfExp > 7) {\n                                different = bindingUpdated(v7) || different;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        var value = void 0;\n        // Odd indexes are placeholders\n        if (i & 1) {\n            switch (instructions[i]) {\n                case 0:\n                    value = v0;\n                    break;\n                case 1:\n                    value = v1;\n                    break;\n                case 2:\n                    value = v2;\n                    break;\n                case 3:\n                    value = v3;\n                    break;\n                case 4:\n                    value = v4;\n                    break;\n                case 5:\n                    value = v5;\n                    break;\n                case 6:\n                    value = v6;\n                    break;\n                case 7:\n                    value = v7;\n                    break;\n            }\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolationV(instructions, values) {\n    var different = false;\n    for (var i = 0; i < values.length; i++) {\n        // Check if bindings have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        // Odd indexes are placeholders\n        if (i & 1) {\n            res += stringify$1(values[instructions[i]]);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef$1 = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory$1 = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver$1,\n    useFactory: function () { return new ComponentFactoryResolver$$1(); },\n    deps: [],\n};\nvar NgModuleRef$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef$1,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef$1));\nvar NgModuleFactory$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index + HEADER_OFFSET].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * @usageNotes\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function () {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view[TVIEW].directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view[DIRECTIVES][matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'defineInjector': defineInjector,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdefinePipe': definePipe,\n    'ÉµdirectiveInject': directiveInject,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n    'ÉµinjectElementRef': injectElementRef,\n    'ÉµinjectTemplateRef': injectTemplateRef,\n    'ÉµinjectViewContainerRef': injectViewContainerRef,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'Éµa': elementAttribute,\n    'Éµb': bind,\n    'ÉµC': container,\n    'ÉµcR': containerRefreshStart,\n    'Éµcr': containerRefreshEnd,\n    'Éµd': loadDirective,\n    'ÉµNH': namespaceHTML,\n    'ÉµNM': namespaceMathML,\n    'ÉµNS': namespaceSVG,\n    'ÉµE': elementStart,\n    'Éµe': elementEnd,\n    'ÉµEe': element,\n    'Éµf0': pureFunction0,\n    'Éµf1': pureFunction1,\n    'Éµf2': pureFunction2,\n    'Éµf3': pureFunction3,\n    'Éµf4': pureFunction4,\n    'Éµf5': pureFunction5,\n    'Éµf6': pureFunction6,\n    'Éµf7': pureFunction7,\n    'Éµf8': pureFunction8,\n    'ÉµfV': pureFunctionV,\n    'Éµi1': interpolation1,\n    'Éµi2': interpolation2,\n    'Éµi3': interpolation3,\n    'Éµi4': interpolation4,\n    'Éµi5': interpolation5,\n    'Éµi6': interpolation6,\n    'Éµi7': interpolation7,\n    'Éµi8': interpolation8,\n    'ÉµiV': interpolationV,\n    'Éµk': elementClass,\n    'Éµkn': elementClassNamed,\n    'ÉµL': listener,\n    'Éµld': load,\n    'ÉµP': projection,\n    'Éµp': elementProperty,\n    'Éµpb1': pipeBind1,\n    'Éµpb2': pipeBind2,\n    'Éµpb3': pipeBind3,\n    'Éµpb4': pipeBind4,\n    'ÉµpbV': pipeBindV,\n    'ÉµpD': projectionDef,\n    'ÉµPp': pipe,\n    'ÉµQ': query,\n    'ÉµqR': queryRefresh,\n    'ÉµrS': reserveSlots,\n    'Éµs': elementStyle,\n    'Éµsn': elementStyleNamed,\n    'Éµst': store,\n    'ÉµT': text,\n    'Éµt': textBinding,\n    'ÉµV': embeddedViewStart,\n    'Éµv': embeddedViewEnd,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TARGET = {};\nvar NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\nvar NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\nvar NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\nvar NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\nvar NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    return deps.map(function (dep) { return reflectDependency(dep); });\n}\nfunction reflectDependency(dep) {\n    var meta = {\n        token: new compiler.LiteralExpr(null),\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        if (token === ElementRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n        }\n        else if (token === Injector) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n        }\n        else if (token === TemplateRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n        }\n        else if (token === ViewContainerRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n        }\n        else {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        }\n        meta.token = new compiler.WrappedNodeExpr(token);\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = new compiler.WrappedNodeExpr(param.token);\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = new compiler.LiteralExpr(param.attributeName);\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$3 = [];\nfunction compileNgModule$1(type, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n    var ngModuleDef = null;\n    Object.defineProperty(type, NG_MODULE_DEF, {\n        get: function () {\n            if (ngModuleDef === null) {\n                var meta = {\n                    type: wrap(type),\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                    declarations: declarations.map(wrap),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    emitInline: true,\n                };\n                var res = compiler.compileNgModule(meta);\n                ngModuleDef =\n                    compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n            }\n            return ngModuleDef;\n        },\n    });\n    var ngInjectorDef = null;\n    Object.defineProperty(type, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                var meta = {\n                    name: type.name,\n                    type: wrap(type),\n                    deps: reflectDependencies(type),\n                    providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                    imports: new compiler.WrappedNodeExpr([\n                        ngModule.imports || EMPTY_ARRAY$3,\n                        ngModule.exports || EMPTY_ARRAY$3,\n                    ]),\n                };\n                var res = compiler.compileInjector(meta);\n                ngInjectorDef =\n                    compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n            }\n            return ngInjectorDef;\n        },\n    });\n    declarations.forEach(function (declaration) {\n        // Some declared components may be compiled asynchronously, and thus may not have their\n        // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n        // the `ngSelectorScope` property of the declared type.\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            patchComponentDefWithScope(declaration.ngComponentDef, type);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = type;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, module) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n        .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = moduleType.ngModuleDef;\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (declaredWithDefs.ngPipeDef !== undefined) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (exportedTyped.ngPipeDef !== undefined) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value)));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction wrap(value) {\n    return new compiler.WrappedNodeExpr(value);\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return value.ngModuleDef !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    var def = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            if (def === null) {\n                if (componentNeedsResolution(metadata)) {\n                    var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                // The ConstantPool is a requirement of the JIT'er.\n                var constantPool = new compiler.ConstantPool();\n                // Parse the template and check for errors.\n                var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                    preserveWhitespaces: metadata.preserveWhitespaces || false,\n                });\n                if (template.errors !== undefined) {\n                    var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                    throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                }\n                // Compile the component metadata, including template, into an expression.\n                // TODO(alxhub): implement inputs, outputs, queries, etc.\n                var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it finishes\n                // compiling.\n                if (hasSelectorScope(type)) {\n                    patchComponentDefWithScope(def, type.ngSelectorScope);\n                }\n            }\n            return def;\n        },\n    });\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var def = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (def === null) {\n                var constantPool = new compiler.ConstantPool();\n                var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n            }\n            return def;\n        },\n    });\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var propMetadata = getReflect().propMetadata(type);\n    var host = extractHostBindings(metadata, propMetadata);\n    var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n    var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n    var inputsFromType = {};\n    var outputsFromType = {};\n    var _loop_1 = function (field) {\n        propMetadata[field].forEach(function (ann) {\n            if (isInput(ann)) {\n                inputsFromType[field] = ann.bindingPropertyName || field;\n            }\n            else if (isOutput(ann)) {\n                outputsFromType[field] = ann.bindingPropertyName || field;\n            }\n        });\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return {\n        name: type.name,\n        type: new compiler.WrappedNodeExpr(type),\n        selector: metadata.selector,\n        deps: reflectDependencies(type), host: host,\n        inputs: __assign({}, inputsFromMetadata, inputsFromType),\n        outputs: __assign({}, outputsFromMetadata, outputsFromType),\n        queries: [],\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n    };\n}\nfunction extractHostBindings(metadata, propMetadata) {\n    // First parse the declarations from the metadata.\n    var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n    if (Object.keys(animations).length > 0) {\n        throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n    }\n    var _loop_2 = function (field) {\n        propMetadata[field].forEach(function (ann) {\n            if (isHostBinding(ann)) {\n                properties[ann.hostPropertyName || field] = field;\n            }\n            else if (isHostListener(ann)) {\n                listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n            }\n        });\n    };\n    // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n    for (var field in propMetadata) {\n        _loop_2(field);\n    }\n    return { attributes: attributes, listeners: listeners, properties: properties };\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\nfunction isHostBinding(value) {\n    return value.ngMetadataName === 'HostBinding';\n}\nfunction isHostListener(value) {\n    return value.ngMetadataName === 'HostListener';\n}\nfunction parseInputOutputs(values) {\n    return values.reduce(function (map, value) {\n        var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n        map[field] = property || field;\n        return map;\n    }, {});\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable$1(type, meta) {\n    // TODO(alxhub): handle JIT of bare @Injectable().\n    if (!meta) {\n        return;\n    }\n    var def = null;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                // Check whether the injectable metadata includes a provider specification.\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var deps = undefined;\n                if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                    deps = reflectDependencies(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps) || [];\n                }\n                // Decide which flavor of factory to generate, based on the provider specified.\n                // Only one of the use* fields should be set.\n                var useClass = undefined;\n                var useFactory = undefined;\n                var useValue = undefined;\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new compiler.WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var expression = compiler.compileInjectable({\n                    name: type.name,\n                    type: new compiler.WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    deps: deps,\n                }).expression;\n                def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n            }\n            return def;\n        },\n    });\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new compiler.LiteralExpr(providedIn);\n    }\n    else {\n        return new compiler.WrappedNodeExpr(providedIn);\n    }\n}\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nvar GET_PROPERTY_NAME$2 = {};\nvar USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = true;\nvar R3_COMPILE_COMPONENT = compileComponent;\nvar R3_COMPILE_DIRECTIVE = compileDirective;\nvar R3_COMPILE_INJECTABLE = compileInjectable$1;\nvar R3_COMPILE_NGMODULE = compileNgModule$1;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Component metadata.\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * @Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div @myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n */\nfunction (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.1.0-beta.3+11.sha-0ede987');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory$1) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef$1);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver$1,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n    var ApplicationRef_1;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * @usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver$1, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef$1);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory$1));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef$1));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef$1(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef$1);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef$1));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver$1); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef$1);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\nvar TemplateRefTokenKey = tokenKey(TemplateRef$1);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory$1;\nexports.ComponentRef = ComponentRef$1;\nexports.ComponentFactoryResolver = ComponentFactoryResolver$1;\nexports.ElementRef = ElementRef$1;\nexports.NgModuleFactory = NgModuleFactory$1;\nexports.NgModuleRef = NgModuleRef$1;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList$1;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef$1;\nexports.ViewContainerRef = ViewContainerRef$1;\nexports.EmbeddedViewRef = EmbeddedViewRef$1;\nexports.ViewRef = ViewRef$1;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory$1;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµresolveComponentResources = resolveComponentResources;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdefineNgModule = defineNgModule;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµNH = namespaceHTML;\nexports.ÉµNM = namespaceMathML;\nexports.ÉµNS = namespaceSVG;\nexports.ÉµEe = element;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµiA = i18nApply;\nexports.ÉµiEM = i18nExpMapping;\nexports.ÉµiI = i18nInterpolation;\nexports.ÉµIV = i18nInterpolationV;\nexports.ÉµiM = i18nMapping;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}