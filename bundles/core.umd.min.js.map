{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","_CLEAN_PROMISE","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","executeInitAndContentHooks","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","queueComponentIndexForCheck","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","createViewRef","componentIndex","hostComponentView","loadContext","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµProvidersFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","wrapReference","expandModuleWithProviders","emitInline","jitExpression","compileInjector","statements","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesAndPipesInClosure","makeBindingParser","preStatements","hasSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","compilePipe","compilePipeFromMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","VERSION","full","major","minor","patch","isUseClassProvider","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","Éµangular_packages_core_core_p","Éµangular_packages_core_core_m","Éµangular_packages_core_core_n","Éµangular_packages_core_core_o","Éµangular_packages_core_core_g","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_f","Éµangular_packages_core_core_q","Éµangular_packages_core_core_s","Éµangular_packages_core_core_r","Éµangular_packages_core_core_v","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_bh","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bg","Éµangular_packages_core_core_bk","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_bi","Éµangular_packages_core_core_w","Éµangular_packages_core_core_x","Éµangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµProvidersResolver","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$2","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileComponent","ÉµcompileDirective","ÉµcompileNgModule","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµbindPlayerFactory","bindPlayerFactory","ÉµaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ÉµgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ÉµcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ÉµSWITCH_COMPILE_COMPONENT__POST_R3__","ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__","ÉµSWITCH_COMPILE_PIPE__POST_R3__","ÉµSWITCH_COMPILE_NGMODULE__POST_R3__","ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµSWITCH_IVY_ENABLED__POST_R3__","ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","shift","ÉµSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ÉµpublishGlobalUtil","publishGlobalUtil","ÉµSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.0+37.sha-56f44be\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 15 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                return bloomHash();\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && getParentInjectorViewOffset(parentLocation) > 0));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 2 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 3 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 2 /* Class */ : 3 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 15 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData) {\n        var tView = getTView();\n        var creationMode = getCreationMode();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        setHostBindings(tView, viewData);\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks(viewData) {\n        if (!getCheckNoChangesMode()) {\n            var tView = getTView();\n            var creationMode = getCreationMode();\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews(hostView);\n            }\n            else {\n                executeInitAndContentHooks(hostView);\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(getTView(), hostView);\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=local\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks(rootView);\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        setHostBindings(tView, rootView);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµProvidersFeature': ProvidersFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesAndPipesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations, viewProviders: metadata.viewProviders ? new compiler.WrappedNodeExpr(metadata.viewProviders) :\n                            null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] =\n                            ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers ? new compiler.WrappedNodeExpr(metadata.providers) : null\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.0+37.sha-56f44be');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$3 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_o = _localeFactory;\n    exports.Éµangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = injectInjectorOnly;\n    exports.Éµangular_packages_core_core_d = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_e = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_q = wtfEnabled;\n    exports.Éµangular_packages_core_core_s = createScope;\n    exports.Éµangular_packages_core_core_r = detectWTF;\n    exports.Éµangular_packages_core_core_v = endTimeRange;\n    exports.Éµangular_packages_core_core_t = leave;\n    exports.Éµangular_packages_core_core_u = startTimeRange;\n    exports.Éµangular_packages_core_core_ba = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_z = injectAttributeImpl;\n    exports.Éµangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bd = getViewData;\n    exports.Éµangular_packages_core_core_be = nextContextImpl;\n    exports.Éµangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.Éµangular_packages_core_core_bk = loadInternal;\n    exports.Éµangular_packages_core_core_h = createElementRef;\n    exports.Éµangular_packages_core_core_i = createTemplateRef;\n    exports.Éµangular_packages_core_core_j = createViewRef;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_w = _def;\n    exports.Éµangular_packages_core_core_x = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµProvidersResolver = ProvidersFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompileNgModule = compileNgModule;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµbindPlayerFactory = bindPlayerFactory;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ÉµSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ÉµpublishGlobalUtil = publishGlobalUtil;\n    exports.ÉµSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}